{"ast":null,"code":"import _classCallCheck from \"C:/Users/User/Projects/meanstack/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/User/Projects/meanstack/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../data.service\";\nexport var ProductsResolverService = /*#__PURE__*/function () {\n  function ProductsResolverService(dataService) {\n    _classCallCheck(this, ProductsResolverService);\n    this.dataService = dataService;\n  }\n  // Subscribes to observable and deliver data via router\n  _createClass(ProductsResolverService, [{\n    key: \"resolve\",\n    value: function resolve(route, state) {\n      return this.dataService.getAllProducts().pipe(catchError(function (err) {\n        return of(err);\n      }));\n    }\n  }]);\n  return ProductsResolverService;\n}();\nProductsResolverService.ɵfac = function ProductsResolverService_Factory(t) {\n  return new (t || ProductsResolverService)(i0.ɵɵinject(i1.DataService));\n};\nProductsResolverService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductsResolverService,\n  factory: ProductsResolverService.ɵfac\n});","map":{"version":3,"mappings":";;AAEA,SAAqBA,EAAE,QAAS,MAAM;AAItC,SAAcC,UAAU,QAAQ,gBAAgB;;;AAIhD,WAAaC,uBAAuB;EAChC,iCAAoBC,WAAwB;IAAA;IAAxB,gBAAW,GAAXA,WAAW;EAAiB;EAEhD;EAAA;IAAA;IAAA,OACA,iBAAQC,KAA6B,EAAEC,KAA0B;MAC7D,OAAO,IAAI,CAACF,WAAW,CAACG,cAAc,EAAE,CAACC,IAAI,CAACN,UAAU,CAAC,aAAG;QAAA,OAAID,EAAE,CAACQ,GAAG,CAAC;MAAA,EAAC,CAAC;IAC7E;EAAC;EAAA;AAAA;AANQN,uBAAuB;mBAAvBA,uBAAuB;AAAA;AAAvBA,uBAAuB;SAAvBA,uBAAuB;EAAAO,SAAvBP,uBAAuB;AAAA","names":["of","catchError","ProductsResolverService","dataService","route","state","getAllProducts","pipe","err","factory"],"sourceRoot":"","sources":["C:\\Users\\User\\Projects\\meanstack\\src\\app\\shared\\products-resolver.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core'\r\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router'\r\nimport { Observable, of  } from 'rxjs'\r\n\r\nimport { Product } from '../models/product';\r\nimport { DataService } from '../../data.service'\r\nimport { map, catchError } from 'rxjs/operators'\r\nimport { ProductTrackerError } from '../models/ProductTrackerError'\r\n\r\n@Injectable()\r\nexport class ProductsResolverService implements Resolve<any | ProductTrackerError> {\r\n    constructor(private dataService: DataService) { }\r\n\r\n    // Subscribes to observable and deliver data via router\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Product[] | ProductTrackerError> {\r\n        return this.dataService.getAllProducts().pipe(catchError(err => of(err)));\r\n    }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}