{"ast":null,"code":"import _createForOfIteratorHelper from \"C:/Users/User/Projects/meanstack/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport { Subscription } from '../Subscription';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { arrRemove } from '../util/arrRemove';\nimport { asyncScheduler } from '../scheduler/async';\nimport { popScheduler } from '../util/args';\nimport { executeSchedule } from '../util/executeSchedule';\nexport function bufferTime(bufferTimeSpan) {\n  var _a, _b;\n  for (var _len = arguments.length, otherArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    otherArgs[_key - 1] = arguments[_key];\n  }\n  var scheduler = (_a = popScheduler(otherArgs)) !== null && _a !== void 0 ? _a : asyncScheduler;\n  var bufferCreationInterval = (_b = otherArgs[0]) !== null && _b !== void 0 ? _b : null;\n  var maxBufferSize = otherArgs[1] || Infinity;\n  return operate(function (source, subscriber) {\n    var bufferRecords = [];\n    var restartOnEmit = false;\n    var emit = function emit(record) {\n      var buffer = record.buffer,\n        subs = record.subs;\n      subs.unsubscribe();\n      arrRemove(bufferRecords, record);\n      subscriber.next(buffer);\n      restartOnEmit && startBuffer();\n    };\n    var startBuffer = function startBuffer() {\n      if (bufferRecords) {\n        var subs = new Subscription();\n        subscriber.add(subs);\n        var buffer = [];\n        var record = {\n          buffer: buffer,\n          subs: subs\n        };\n        bufferRecords.push(record);\n        executeSchedule(subs, scheduler, function () {\n          return emit(record);\n        }, bufferTimeSpan);\n      }\n    };\n    if (bufferCreationInterval !== null && bufferCreationInterval >= 0) {\n      executeSchedule(subscriber, scheduler, startBuffer, bufferCreationInterval, true);\n    } else {\n      restartOnEmit = true;\n    }\n    startBuffer();\n    var bufferTimeSubscriber = createOperatorSubscriber(subscriber, function (value) {\n      var recordsCopy = bufferRecords.slice();\n      var _iterator = _createForOfIteratorHelper(recordsCopy),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var record = _step.value;\n          var buffer = record.buffer;\n          buffer.push(value);\n          maxBufferSize <= buffer.length && emit(record);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }, function () {\n      while (bufferRecords === null || bufferRecords === void 0 ? void 0 : bufferRecords.length) {\n        subscriber.next(bufferRecords.shift().buffer);\n      }\n      bufferTimeSubscriber === null || bufferTimeSubscriber === void 0 ? void 0 : bufferTimeSubscriber.unsubscribe();\n      subscriber.complete();\n      subscriber.unsubscribe();\n    }, undefined, function () {\n      return bufferRecords = null;\n    });\n    source.subscribe(bufferTimeSubscriber);\n  });\n}","map":{"version":3,"names":["Subscription","operate","createOperatorSubscriber","arrRemove","asyncScheduler","popScheduler","executeSchedule","bufferTime","bufferTimeSpan","_a","_b","otherArgs","scheduler","bufferCreationInterval","maxBufferSize","Infinity","source","subscriber","bufferRecords","restartOnEmit","emit","record","buffer","subs","unsubscribe","next","startBuffer","add","push","bufferTimeSubscriber","value","recordsCopy","slice","length","shift","complete","undefined","subscribe"],"sources":["C:/Users/User/Projects/meanstack/node_modules/rxjs/dist/esm/internal/operators/bufferTime.js"],"sourcesContent":["import { Subscription } from '../Subscription';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { arrRemove } from '../util/arrRemove';\nimport { asyncScheduler } from '../scheduler/async';\nimport { popScheduler } from '../util/args';\nimport { executeSchedule } from '../util/executeSchedule';\nexport function bufferTime(bufferTimeSpan, ...otherArgs) {\n    var _a, _b;\n    const scheduler = (_a = popScheduler(otherArgs)) !== null && _a !== void 0 ? _a : asyncScheduler;\n    const bufferCreationInterval = (_b = otherArgs[0]) !== null && _b !== void 0 ? _b : null;\n    const maxBufferSize = otherArgs[1] || Infinity;\n    return operate((source, subscriber) => {\n        let bufferRecords = [];\n        let restartOnEmit = false;\n        const emit = (record) => {\n            const { buffer, subs } = record;\n            subs.unsubscribe();\n            arrRemove(bufferRecords, record);\n            subscriber.next(buffer);\n            restartOnEmit && startBuffer();\n        };\n        const startBuffer = () => {\n            if (bufferRecords) {\n                const subs = new Subscription();\n                subscriber.add(subs);\n                const buffer = [];\n                const record = {\n                    buffer,\n                    subs,\n                };\n                bufferRecords.push(record);\n                executeSchedule(subs, scheduler, () => emit(record), bufferTimeSpan);\n            }\n        };\n        if (bufferCreationInterval !== null && bufferCreationInterval >= 0) {\n            executeSchedule(subscriber, scheduler, startBuffer, bufferCreationInterval, true);\n        }\n        else {\n            restartOnEmit = true;\n        }\n        startBuffer();\n        const bufferTimeSubscriber = createOperatorSubscriber(subscriber, (value) => {\n            const recordsCopy = bufferRecords.slice();\n            for (const record of recordsCopy) {\n                const { buffer } = record;\n                buffer.push(value);\n                maxBufferSize <= buffer.length && emit(record);\n            }\n        }, () => {\n            while (bufferRecords === null || bufferRecords === void 0 ? void 0 : bufferRecords.length) {\n                subscriber.next(bufferRecords.shift().buffer);\n            }\n            bufferTimeSubscriber === null || bufferTimeSubscriber === void 0 ? void 0 : bufferTimeSubscriber.unsubscribe();\n            subscriber.complete();\n            subscriber.unsubscribe();\n        }, undefined, () => (bufferRecords = null));\n        source.subscribe(bufferTimeSubscriber);\n    });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}