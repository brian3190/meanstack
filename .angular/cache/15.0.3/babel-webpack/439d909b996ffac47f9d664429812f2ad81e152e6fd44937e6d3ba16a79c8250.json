{"ast":null,"code":"import { Subject } from '../Subject';\nimport { Observable } from '../Observable';\nimport { defer } from './defer';\nvar DEFAULT_CONFIG = {\n  connector: function connector() {\n    return new Subject();\n  },\n  resetOnDisconnect: true\n};\nexport function connectable(source) {\n  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_CONFIG;\n  var connection = null;\n  var connector = config.connector,\n    _config$resetOnDiscon = config.resetOnDisconnect,\n    resetOnDisconnect = _config$resetOnDiscon === void 0 ? true : _config$resetOnDiscon;\n  var subject = connector();\n  var result = new Observable(function (subscriber) {\n    return subject.subscribe(subscriber);\n  });\n  result.connect = function () {\n    if (!connection || connection.closed) {\n      connection = defer(function () {\n        return source;\n      }).subscribe(subject);\n      if (resetOnDisconnect) {\n        connection.add(function () {\n          return subject = connector();\n        });\n      }\n    }\n    return connection;\n  };\n  return result;\n}","map":{"version":3,"names":["Subject","Observable","defer","DEFAULT_CONFIG","connector","resetOnDisconnect","connectable","source","config","connection","subject","result","subscriber","subscribe","connect","closed","add"],"sources":["C:/Users/User/Projects/meanstack/node_modules/rxjs/dist/esm/internal/observable/connectable.js"],"sourcesContent":["import { Subject } from '../Subject';\nimport { Observable } from '../Observable';\nimport { defer } from './defer';\nconst DEFAULT_CONFIG = {\n    connector: () => new Subject(),\n    resetOnDisconnect: true,\n};\nexport function connectable(source, config = DEFAULT_CONFIG) {\n    let connection = null;\n    const { connector, resetOnDisconnect = true } = config;\n    let subject = connector();\n    const result = new Observable((subscriber) => {\n        return subject.subscribe(subscriber);\n    });\n    result.connect = () => {\n        if (!connection || connection.closed) {\n            connection = defer(() => source).subscribe(subject);\n            if (resetOnDisconnect) {\n                connection.add(() => (subject = connector()));\n            }\n        }\n        return connection;\n    };\n    return result;\n}\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,YAAY;AACpC,SAASC,UAAU,QAAQ,eAAe;AAC1C,SAASC,KAAK,QAAQ,SAAS;AAC/B,IAAMC,cAAc,GAAG;EACnBC,SAAS,EAAE;IAAA,OAAM,IAAIJ,OAAO,EAAE;EAAA;EAC9BK,iBAAiB,EAAE;AACvB,CAAC;AACD,OAAO,SAASC,WAAW,CAACC,MAAM,EAA2B;EAAA,IAAzBC,MAAM,uEAAGL,cAAc;EACvD,IAAIM,UAAU,GAAG,IAAI;EACrB,IAAQL,SAAS,GAA+BI,MAAM,CAA9CJ,SAAS;IAAA,wBAA+BI,MAAM,CAAnCH,iBAAiB;IAAjBA,iBAAiB,sCAAG,IAAI;EAC3C,IAAIK,OAAO,GAAGN,SAAS,EAAE;EACzB,IAAMO,MAAM,GAAG,IAAIV,UAAU,CAAC,UAACW,UAAU,EAAK;IAC1C,OAAOF,OAAO,CAACG,SAAS,CAACD,UAAU,CAAC;EACxC,CAAC,CAAC;EACFD,MAAM,CAACG,OAAO,GAAG,YAAM;IACnB,IAAI,CAACL,UAAU,IAAIA,UAAU,CAACM,MAAM,EAAE;MAClCN,UAAU,GAAGP,KAAK,CAAC;QAAA,OAAMK,MAAM;MAAA,EAAC,CAACM,SAAS,CAACH,OAAO,CAAC;MACnD,IAAIL,iBAAiB,EAAE;QACnBI,UAAU,CAACO,GAAG,CAAC;UAAA,OAAON,OAAO,GAAGN,SAAS,EAAE;QAAA,CAAC,CAAC;MACjD;IACJ;IACA,OAAOK,UAAU;EACrB,CAAC;EACD,OAAOE,MAAM;AACjB"},"metadata":{},"sourceType":"module","externalDependencies":[]}