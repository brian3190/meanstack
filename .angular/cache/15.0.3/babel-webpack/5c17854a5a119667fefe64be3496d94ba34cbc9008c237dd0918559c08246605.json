{"ast":null,"code":"import { Observable } from '../Observable';\nimport { innerFrom } from '../observable/innerFrom';\nimport { Subject } from '../Subject';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber, OperatorSubscriber } from './OperatorSubscriber';\nexport function groupBy(keySelector, elementOrOptions, duration, connector) {\n  return operate(function (source, subscriber) {\n    var element;\n    if (!elementOrOptions || typeof elementOrOptions === 'function') {\n      element = elementOrOptions;\n    } else {\n      duration = elementOrOptions.duration;\n      element = elementOrOptions.element;\n      connector = elementOrOptions.connector;\n    }\n    var groups = new Map();\n    var notify = function notify(cb) {\n      groups.forEach(cb);\n      cb(subscriber);\n    };\n    var handleError = function handleError(err) {\n      return notify(function (consumer) {\n        return consumer.error(err);\n      });\n    };\n    var activeGroups = 0;\n    var teardownAttempted = false;\n    var groupBySourceSubscriber = new OperatorSubscriber(subscriber, function (value) {\n      try {\n        var key = keySelector(value);\n        var group = groups.get(key);\n        if (!group) {\n          groups.set(key, group = connector ? connector() : new Subject());\n          var grouped = createGroupedObservable(key, group);\n          subscriber.next(grouped);\n          if (duration) {\n            var durationSubscriber = createOperatorSubscriber(group, function () {\n              group.complete();\n              durationSubscriber === null || durationSubscriber === void 0 ? void 0 : durationSubscriber.unsubscribe();\n            }, undefined, undefined, function () {\n              return groups[\"delete\"](key);\n            });\n            groupBySourceSubscriber.add(innerFrom(duration(grouped)).subscribe(durationSubscriber));\n          }\n        }\n        group.next(element ? element(value) : value);\n      } catch (err) {\n        handleError(err);\n      }\n    }, function () {\n      return notify(function (consumer) {\n        return consumer.complete();\n      });\n    }, handleError, function () {\n      return groups.clear();\n    }, function () {\n      teardownAttempted = true;\n      return activeGroups === 0;\n    });\n    source.subscribe(groupBySourceSubscriber);\n    function createGroupedObservable(key, groupSubject) {\n      var result = new Observable(function (groupSubscriber) {\n        activeGroups++;\n        var innerSub = groupSubject.subscribe(groupSubscriber);\n        return function () {\n          innerSub.unsubscribe();\n          --activeGroups === 0 && teardownAttempted && groupBySourceSubscriber.unsubscribe();\n        };\n      });\n      result.key = key;\n      return result;\n    }\n  });\n}","map":{"version":3,"names":["Observable","innerFrom","Subject","operate","createOperatorSubscriber","OperatorSubscriber","groupBy","keySelector","elementOrOptions","duration","connector","source","subscriber","element","groups","Map","notify","cb","forEach","handleError","err","consumer","error","activeGroups","teardownAttempted","groupBySourceSubscriber","value","key","group","get","set","grouped","createGroupedObservable","next","durationSubscriber","complete","unsubscribe","undefined","add","subscribe","clear","groupSubject","result","groupSubscriber","innerSub"],"sources":["C:/Users/User/Projects/meanstack/node_modules/rxjs/dist/esm/internal/operators/groupBy.js"],"sourcesContent":["import { Observable } from '../Observable';\nimport { innerFrom } from '../observable/innerFrom';\nimport { Subject } from '../Subject';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber, OperatorSubscriber } from './OperatorSubscriber';\nexport function groupBy(keySelector, elementOrOptions, duration, connector) {\n    return operate((source, subscriber) => {\n        let element;\n        if (!elementOrOptions || typeof elementOrOptions === 'function') {\n            element = elementOrOptions;\n        }\n        else {\n            ({ duration, element, connector } = elementOrOptions);\n        }\n        const groups = new Map();\n        const notify = (cb) => {\n            groups.forEach(cb);\n            cb(subscriber);\n        };\n        const handleError = (err) => notify((consumer) => consumer.error(err));\n        let activeGroups = 0;\n        let teardownAttempted = false;\n        const groupBySourceSubscriber = new OperatorSubscriber(subscriber, (value) => {\n            try {\n                const key = keySelector(value);\n                let group = groups.get(key);\n                if (!group) {\n                    groups.set(key, (group = connector ? connector() : new Subject()));\n                    const grouped = createGroupedObservable(key, group);\n                    subscriber.next(grouped);\n                    if (duration) {\n                        const durationSubscriber = createOperatorSubscriber(group, () => {\n                            group.complete();\n                            durationSubscriber === null || durationSubscriber === void 0 ? void 0 : durationSubscriber.unsubscribe();\n                        }, undefined, undefined, () => groups.delete(key));\n                        groupBySourceSubscriber.add(innerFrom(duration(grouped)).subscribe(durationSubscriber));\n                    }\n                }\n                group.next(element ? element(value) : value);\n            }\n            catch (err) {\n                handleError(err);\n            }\n        }, () => notify((consumer) => consumer.complete()), handleError, () => groups.clear(), () => {\n            teardownAttempted = true;\n            return activeGroups === 0;\n        });\n        source.subscribe(groupBySourceSubscriber);\n        function createGroupedObservable(key, groupSubject) {\n            const result = new Observable((groupSubscriber) => {\n                activeGroups++;\n                const innerSub = groupSubject.subscribe(groupSubscriber);\n                return () => {\n                    innerSub.unsubscribe();\n                    --activeGroups === 0 && teardownAttempted && groupBySourceSubscriber.unsubscribe();\n                };\n            });\n            result.key = key;\n            return result;\n        }\n    });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}