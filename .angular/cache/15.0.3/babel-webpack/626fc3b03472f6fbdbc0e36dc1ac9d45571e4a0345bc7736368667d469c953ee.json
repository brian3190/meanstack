{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/User/Projects/meanstack/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _createForOfIteratorHelper from \"C:/Users/User/Projects/meanstack/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport { __asyncValues, __awaiter } from \"tslib\";\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isPromise } from '../util/isPromise';\nimport { Observable } from '../Observable';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isIterable } from '../util/isIterable';\nimport { isReadableStreamLike, readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\nimport { isFunction } from '../util/isFunction';\nimport { reportUnhandledError } from '../util/reportUnhandledError';\nimport { observable as Symbol_observable } from '../symbol/observable';\nexport function innerFrom(input) {\n  if (input instanceof Observable) {\n    return input;\n  }\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return fromInteropObservable(input);\n    }\n    if (isArrayLike(input)) {\n      return fromArrayLike(input);\n    }\n    if (isPromise(input)) {\n      return fromPromise(input);\n    }\n    if (isAsyncIterable(input)) {\n      return fromAsyncIterable(input);\n    }\n    if (isIterable(input)) {\n      return fromIterable(input);\n    }\n    if (isReadableStreamLike(input)) {\n      return fromReadableStreamLike(input);\n    }\n  }\n  throw createInvalidObservableTypeError(input);\n}\nexport function fromInteropObservable(obj) {\n  return new Observable(function (subscriber) {\n    var obs = obj[Symbol_observable]();\n    if (isFunction(obs.subscribe)) {\n      return obs.subscribe(subscriber);\n    }\n    throw new TypeError('Provided object does not correctly implement Symbol.observable');\n  });\n}\nexport function fromArrayLike(array) {\n  return new Observable(function (subscriber) {\n    for (var i = 0; i < array.length && !subscriber.closed; i++) {\n      subscriber.next(array[i]);\n    }\n    subscriber.complete();\n  });\n}\nexport function fromPromise(promise) {\n  return new Observable(function (subscriber) {\n    promise.then(function (value) {\n      if (!subscriber.closed) {\n        subscriber.next(value);\n        subscriber.complete();\n      }\n    }, function (err) {\n      return subscriber.error(err);\n    }).then(null, reportUnhandledError);\n  });\n}\nexport function fromIterable(iterable) {\n  return new Observable(function (subscriber) {\n    var _iterator = _createForOfIteratorHelper(iterable),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var value = _step.value;\n        subscriber.next(value);\n        if (subscriber.closed) {\n          return;\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    subscriber.complete();\n  });\n}\nexport function fromAsyncIterable(asyncIterable) {\n  return new Observable(function (subscriber) {\n    process(asyncIterable, subscriber)[\"catch\"](function (err) {\n      return subscriber.error(err);\n    });\n  });\n}\nexport function fromReadableStreamLike(readableStream) {\n  return fromAsyncIterable(readableStreamLikeToAsyncGenerator(readableStream));\n}\nfunction process(asyncIterable, subscriber) {\n  var asyncIterable_1, asyncIterable_1_1;\n  var e_1, _a;\n  return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var value;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            asyncIterable_1 = __asyncValues(asyncIterable);\n          case 2:\n            _context.next = 4;\n            return asyncIterable_1.next();\n          case 4:\n            asyncIterable_1_1 = _context.sent;\n            if (asyncIterable_1_1.done) {\n              _context.next = 12;\n              break;\n            }\n            value = asyncIterable_1_1.value;\n            subscriber.next(value);\n            if (!subscriber.closed) {\n              _context.next = 10;\n              break;\n            }\n            return _context.abrupt(\"return\");\n          case 10:\n            _context.next = 2;\n            break;\n          case 12:\n            _context.next = 17;\n            break;\n          case 14:\n            _context.prev = 14;\n            _context.t0 = _context[\"catch\"](0);\n            e_1 = {\n              error: _context.t0\n            };\n          case 17:\n            _context.prev = 17;\n            _context.prev = 18;\n            if (!(asyncIterable_1_1 && !asyncIterable_1_1.done && (_a = asyncIterable_1[\"return\"]))) {\n              _context.next = 22;\n              break;\n            }\n            _context.next = 22;\n            return _a.call(asyncIterable_1);\n          case 22:\n            _context.prev = 22;\n            if (!e_1) {\n              _context.next = 25;\n              break;\n            }\n            throw e_1.error;\n          case 25:\n            return _context.finish(22);\n          case 26:\n            return _context.finish(17);\n          case 27:\n            subscriber.complete();\n          case 28:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 14, 17, 27], [18,, 22, 26]]);\n  }));\n}","map":{"version":3,"names":["__asyncValues","__awaiter","isArrayLike","isPromise","Observable","isInteropObservable","isAsyncIterable","createInvalidObservableTypeError","isIterable","isReadableStreamLike","readableStreamLikeToAsyncGenerator","isFunction","reportUnhandledError","observable","Symbol_observable","innerFrom","input","fromInteropObservable","fromArrayLike","fromPromise","fromAsyncIterable","fromIterable","fromReadableStreamLike","obj","subscriber","obs","subscribe","TypeError","array","i","length","closed","next","complete","promise","then","value","err","error","iterable","asyncIterable","process","readableStream","asyncIterable_1","asyncIterable_1_1","e_1","_a","done","call"],"sources":["C:/Users/User/Projects/meanstack/node_modules/rxjs/dist/esm/internal/observable/innerFrom.js"],"sourcesContent":["import { __asyncValues, __awaiter } from \"tslib\";\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isPromise } from '../util/isPromise';\nimport { Observable } from '../Observable';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isIterable } from '../util/isIterable';\nimport { isReadableStreamLike, readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\nimport { isFunction } from '../util/isFunction';\nimport { reportUnhandledError } from '../util/reportUnhandledError';\nimport { observable as Symbol_observable } from '../symbol/observable';\nexport function innerFrom(input) {\n    if (input instanceof Observable) {\n        return input;\n    }\n    if (input != null) {\n        if (isInteropObservable(input)) {\n            return fromInteropObservable(input);\n        }\n        if (isArrayLike(input)) {\n            return fromArrayLike(input);\n        }\n        if (isPromise(input)) {\n            return fromPromise(input);\n        }\n        if (isAsyncIterable(input)) {\n            return fromAsyncIterable(input);\n        }\n        if (isIterable(input)) {\n            return fromIterable(input);\n        }\n        if (isReadableStreamLike(input)) {\n            return fromReadableStreamLike(input);\n        }\n    }\n    throw createInvalidObservableTypeError(input);\n}\nexport function fromInteropObservable(obj) {\n    return new Observable((subscriber) => {\n        const obs = obj[Symbol_observable]();\n        if (isFunction(obs.subscribe)) {\n            return obs.subscribe(subscriber);\n        }\n        throw new TypeError('Provided object does not correctly implement Symbol.observable');\n    });\n}\nexport function fromArrayLike(array) {\n    return new Observable((subscriber) => {\n        for (let i = 0; i < array.length && !subscriber.closed; i++) {\n            subscriber.next(array[i]);\n        }\n        subscriber.complete();\n    });\n}\nexport function fromPromise(promise) {\n    return new Observable((subscriber) => {\n        promise\n            .then((value) => {\n            if (!subscriber.closed) {\n                subscriber.next(value);\n                subscriber.complete();\n            }\n        }, (err) => subscriber.error(err))\n            .then(null, reportUnhandledError);\n    });\n}\nexport function fromIterable(iterable) {\n    return new Observable((subscriber) => {\n        for (const value of iterable) {\n            subscriber.next(value);\n            if (subscriber.closed) {\n                return;\n            }\n        }\n        subscriber.complete();\n    });\n}\nexport function fromAsyncIterable(asyncIterable) {\n    return new Observable((subscriber) => {\n        process(asyncIterable, subscriber).catch((err) => subscriber.error(err));\n    });\n}\nexport function fromReadableStreamLike(readableStream) {\n    return fromAsyncIterable(readableStreamLikeToAsyncGenerator(readableStream));\n}\nfunction process(asyncIterable, subscriber) {\n    var asyncIterable_1, asyncIterable_1_1;\n    var e_1, _a;\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            for (asyncIterable_1 = __asyncValues(asyncIterable); asyncIterable_1_1 = yield asyncIterable_1.next(), !asyncIterable_1_1.done;) {\n                const value = asyncIterable_1_1.value;\n                subscriber.next(value);\n                if (subscriber.closed) {\n                    return;\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (asyncIterable_1_1 && !asyncIterable_1_1.done && (_a = asyncIterable_1.return)) yield _a.call(asyncIterable_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        subscriber.complete();\n    });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}