{"ast":null,"code":"import { Observable } from '../Observable';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from '../util/isFunction';\nimport { executeSchedule } from '../util/executeSchedule';\nexport function scheduleIterable(input, scheduler) {\n  return new Observable(function (subscriber) {\n    var iterator;\n    executeSchedule(subscriber, scheduler, function () {\n      iterator = input[Symbol_iterator]();\n      executeSchedule(subscriber, scheduler, function () {\n        var value;\n        var done;\n        try {\n          var _iterator$next = iterator.next();\n          value = _iterator$next.value;\n          done = _iterator$next.done;\n        } catch (err) {\n          subscriber.error(err);\n          return;\n        }\n        if (done) {\n          subscriber.complete();\n        } else {\n          subscriber.next(value);\n        }\n      }, 0, true);\n    });\n    return function () {\n      return isFunction(iterator === null || iterator === void 0 ? void 0 : iterator[\"return\"]) && iterator[\"return\"]();\n    };\n  });\n}","map":{"version":3,"names":["Observable","iterator","Symbol_iterator","isFunction","executeSchedule","scheduleIterable","input","scheduler","subscriber","value","done","next","err","error","complete"],"sources":["C:/Users/User/Projects/meanstack/node_modules/rxjs/dist/esm/internal/scheduled/scheduleIterable.js"],"sourcesContent":["import { Observable } from '../Observable';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from '../util/isFunction';\nimport { executeSchedule } from '../util/executeSchedule';\nexport function scheduleIterable(input, scheduler) {\n    return new Observable((subscriber) => {\n        let iterator;\n        executeSchedule(subscriber, scheduler, () => {\n            iterator = input[Symbol_iterator]();\n            executeSchedule(subscriber, scheduler, () => {\n                let value;\n                let done;\n                try {\n                    ({ value, done } = iterator.next());\n                }\n                catch (err) {\n                    subscriber.error(err);\n                    return;\n                }\n                if (done) {\n                    subscriber.complete();\n                }\n                else {\n                    subscriber.next(value);\n                }\n            }, 0, true);\n        });\n        return () => isFunction(iterator === null || iterator === void 0 ? void 0 : iterator.return) && iterator.return();\n    });\n}\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,eAAe;AAC1C,SAASC,QAAQ,IAAIC,eAAe,QAAQ,oBAAoB;AAChE,SAASC,UAAU,QAAQ,oBAAoB;AAC/C,SAASC,eAAe,QAAQ,yBAAyB;AACzD,OAAO,SAASC,gBAAgB,CAACC,KAAK,EAAEC,SAAS,EAAE;EAC/C,OAAO,IAAIP,UAAU,CAAC,UAACQ,UAAU,EAAK;IAClC,IAAIP,QAAQ;IACZG,eAAe,CAACI,UAAU,EAAED,SAAS,EAAE,YAAM;MACzCN,QAAQ,GAAGK,KAAK,CAACJ,eAAe,CAAC,EAAE;MACnCE,eAAe,CAACI,UAAU,EAAED,SAAS,EAAE,YAAM;QACzC,IAAIE,KAAK;QACT,IAAIC,IAAI;QACR,IAAI;UAAA,qBACmBT,QAAQ,CAACU,IAAI,EAAE;UAA/BF,KAAK,kBAALA,KAAK;UAAEC,IAAI,kBAAJA,IAAI;QAClB,CAAC,CACD,OAAOE,GAAG,EAAE;UACRJ,UAAU,CAACK,KAAK,CAACD,GAAG,CAAC;UACrB;QACJ;QACA,IAAIF,IAAI,EAAE;UACNF,UAAU,CAACM,QAAQ,EAAE;QACzB,CAAC,MACI;UACDN,UAAU,CAACG,IAAI,CAACF,KAAK,CAAC;QAC1B;MACJ,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;IACf,CAAC,CAAC;IACF,OAAO;MAAA,OAAMN,UAAU,CAACF,QAAQ,KAAK,IAAI,IAAIA,QAAQ,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,QAAQ,UAAO,CAAC,IAAIA,QAAQ,UAAO,EAAE;IAAA;EACrH,CAAC,CAAC;AACN"},"metadata":{},"sourceType":"module","externalDependencies":[]}