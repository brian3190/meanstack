{"ast":null,"code":"import { map } from './map';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function exhaustMap(project, resultSelector) {\n  if (resultSelector) {\n    return function (source) {\n      return source.pipe(exhaustMap(function (a, i) {\n        return innerFrom(project(a, i)).pipe(map(function (b, ii) {\n          return resultSelector(a, b, i, ii);\n        }));\n      }));\n    };\n  }\n  return operate(function (source, subscriber) {\n    var index = 0;\n    var innerSub = null;\n    var isComplete = false;\n    source.subscribe(createOperatorSubscriber(subscriber, function (outerValue) {\n      if (!innerSub) {\n        innerSub = createOperatorSubscriber(subscriber, undefined, function () {\n          innerSub = null;\n          isComplete && subscriber.complete();\n        });\n        innerFrom(project(outerValue, index++)).subscribe(innerSub);\n      }\n    }, function () {\n      isComplete = true;\n      !innerSub && subscriber.complete();\n    }));\n  });\n}","map":{"version":3,"names":["map","innerFrom","operate","createOperatorSubscriber","exhaustMap","project","resultSelector","source","pipe","a","i","b","ii","subscriber","index","innerSub","isComplete","subscribe","outerValue","undefined","complete"],"sources":["C:/Users/User/Projects/meanstack/node_modules/rxjs/dist/esm/internal/operators/exhaustMap.js"],"sourcesContent":["import { map } from './map';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function exhaustMap(project, resultSelector) {\n    if (resultSelector) {\n        return (source) => source.pipe(exhaustMap((a, i) => innerFrom(project(a, i)).pipe(map((b, ii) => resultSelector(a, b, i, ii)))));\n    }\n    return operate((source, subscriber) => {\n        let index = 0;\n        let innerSub = null;\n        let isComplete = false;\n        source.subscribe(createOperatorSubscriber(subscriber, (outerValue) => {\n            if (!innerSub) {\n                innerSub = createOperatorSubscriber(subscriber, undefined, () => {\n                    innerSub = null;\n                    isComplete && subscriber.complete();\n                });\n                innerFrom(project(outerValue, index++)).subscribe(innerSub);\n            }\n        }, () => {\n            isComplete = true;\n            !innerSub && subscriber.complete();\n        }));\n    });\n}\n"],"mappings":"AAAA,SAASA,GAAG,QAAQ,OAAO;AAC3B,SAASC,SAAS,QAAQ,yBAAyB;AACnD,SAASC,OAAO,QAAQ,cAAc;AACtC,SAASC,wBAAwB,QAAQ,sBAAsB;AAC/D,OAAO,SAASC,UAAU,CAACC,OAAO,EAAEC,cAAc,EAAE;EAChD,IAAIA,cAAc,EAAE;IAChB,OAAO,UAACC,MAAM;MAAA,OAAKA,MAAM,CAACC,IAAI,CAACJ,UAAU,CAAC,UAACK,CAAC,EAAEC,CAAC;QAAA,OAAKT,SAAS,CAACI,OAAO,CAACI,CAAC,EAAEC,CAAC,CAAC,CAAC,CAACF,IAAI,CAACR,GAAG,CAAC,UAACW,CAAC,EAAEC,EAAE;UAAA,OAAKN,cAAc,CAACG,CAAC,EAAEE,CAAC,EAAED,CAAC,EAAEE,EAAE,CAAC;QAAA,EAAC,CAAC;MAAA,EAAC,CAAC;IAAA;EACpI;EACA,OAAOV,OAAO,CAAC,UAACK,MAAM,EAAEM,UAAU,EAAK;IACnC,IAAIC,KAAK,GAAG,CAAC;IACb,IAAIC,QAAQ,GAAG,IAAI;IACnB,IAAIC,UAAU,GAAG,KAAK;IACtBT,MAAM,CAACU,SAAS,CAACd,wBAAwB,CAACU,UAAU,EAAE,UAACK,UAAU,EAAK;MAClE,IAAI,CAACH,QAAQ,EAAE;QACXA,QAAQ,GAAGZ,wBAAwB,CAACU,UAAU,EAAEM,SAAS,EAAE,YAAM;UAC7DJ,QAAQ,GAAG,IAAI;UACfC,UAAU,IAAIH,UAAU,CAACO,QAAQ,EAAE;QACvC,CAAC,CAAC;QACFnB,SAAS,CAACI,OAAO,CAACa,UAAU,EAAEJ,KAAK,EAAE,CAAC,CAAC,CAACG,SAAS,CAACF,QAAQ,CAAC;MAC/D;IACJ,CAAC,EAAE,YAAM;MACLC,UAAU,GAAG,IAAI;MACjB,CAACD,QAAQ,IAAIF,UAAU,CAACO,QAAQ,EAAE;IACtC,CAAC,CAAC,CAAC;EACP,CAAC,CAAC;AACN"},"metadata":{},"sourceType":"module","externalDependencies":[]}