{"ast":null,"code":"import _toConsumableArray from \"C:/Users/User/Projects/meanstack/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"C:/Users/User/Projects/meanstack/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _get from \"C:/Users/User/Projects/meanstack/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"C:/Users/User/Projects/meanstack/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _createClass from \"C:/Users/User/Projects/meanstack/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"C:/Users/User/Projects/meanstack/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _inherits from \"C:/Users/User/Projects/meanstack/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/User/Projects/meanstack/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n/**\n * @license Angular v15.0.3\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { ɵDomAdapter, ɵsetRootDomAdapter, ɵparseCookieValue, ɵgetDOM, DOCUMENT, ɵPLATFORM_BROWSER_ID, XhrFactory, CommonModule } from '@angular/common';\nexport { ɵgetDOM } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, ApplicationInitStatus, APP_INITIALIZER, Injector, ɵglobal, Injectable, Inject, ViewEncapsulation, APP_ID, RendererStyleFlags2, ɵinternalCreateApplication, ErrorHandler, ɵsetDocument, PLATFORM_ID, PLATFORM_INITIALIZER, createPlatformFactory, platformCore, ɵTESTABILITY_GETTER, ɵTESTABILITY, Testability, NgZone, TestabilityRegistry, ɵINJECTOR_SCOPE, RendererFactory2, ApplicationModule, NgModule, Optional, SkipSelf, ɵɵinject, ApplicationRef, inject, ɵConsole, forwardRef, ɵXSS_SECURITY_URL, SecurityContext, ɵallowSanitizationBypassAndThrow, ɵunwrapSafeValue, ɵ_sanitizeUrl, ɵ_sanitizeHtml, ɵbypassSanitizationTrustHtml, ɵbypassSanitizationTrustStyle, ɵbypassSanitizationTrustScript, ɵbypassSanitizationTrustUrl, ɵbypassSanitizationTrustResourceUrl, Version } from '@angular/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides DOM operations in any browser environment.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\nvar GenericBrowserDomAdapter = /*#__PURE__*/function (_ɵDomAdapter) {\n  _inherits(GenericBrowserDomAdapter, _ɵDomAdapter);\n  var _super = _createSuper(GenericBrowserDomAdapter);\n  function GenericBrowserDomAdapter() {\n    var _this;\n    _classCallCheck(this, GenericBrowserDomAdapter);\n    _this = _super.apply(this, arguments);\n    _this.supportsDOMEvents = true;\n    return _this;\n  }\n  return _createClass(GenericBrowserDomAdapter);\n}(ɵDomAdapter);\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A `DomAdapter` powered by full browser DOM APIs.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\n/* tslint:disable:requireParameterType no-console */\nvar BrowserDomAdapter = /*#__PURE__*/function (_GenericBrowserDomAda) {\n  _inherits(BrowserDomAdapter, _GenericBrowserDomAda);\n  var _super2 = _createSuper(BrowserDomAdapter);\n  function BrowserDomAdapter() {\n    _classCallCheck(this, BrowserDomAdapter);\n    return _super2.apply(this, arguments);\n  }\n  _createClass(BrowserDomAdapter, [{\n    key: \"onAndCancel\",\n    value: function onAndCancel(el, evt, listener) {\n      el.addEventListener(evt, listener, false);\n      // Needed to follow Dart's subscription semantic, until fix of\n      // https://code.google.com/p/dart/issues/detail?id=17406\n      return function () {\n        el.removeEventListener(evt, listener, false);\n      };\n    }\n  }, {\n    key: \"dispatchEvent\",\n    value: function dispatchEvent(el, evt) {\n      el.dispatchEvent(evt);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(node) {\n      if (node.parentNode) {\n        node.parentNode.removeChild(node);\n      }\n    }\n  }, {\n    key: \"createElement\",\n    value: function createElement(tagName, doc) {\n      doc = doc || this.getDefaultDocument();\n      return doc.createElement(tagName);\n    }\n  }, {\n    key: \"createHtmlDocument\",\n    value: function createHtmlDocument() {\n      return document.implementation.createHTMLDocument('fakeTitle');\n    }\n  }, {\n    key: \"getDefaultDocument\",\n    value: function getDefaultDocument() {\n      return document;\n    }\n  }, {\n    key: \"isElementNode\",\n    value: function isElementNode(node) {\n      return node.nodeType === Node.ELEMENT_NODE;\n    }\n  }, {\n    key: \"isShadowRoot\",\n    value: function isShadowRoot(node) {\n      return node instanceof DocumentFragment;\n    }\n    /** @deprecated No longer being used in Ivy code. To be removed in version 14. */\n  }, {\n    key: \"getGlobalEventTarget\",\n    value: function getGlobalEventTarget(doc, target) {\n      if (target === 'window') {\n        return window;\n      }\n      if (target === 'document') {\n        return doc;\n      }\n      if (target === 'body') {\n        return doc.body;\n      }\n      return null;\n    }\n  }, {\n    key: \"getBaseHref\",\n    value: function getBaseHref(doc) {\n      var href = getBaseElementHref();\n      return href == null ? null : relativePath(href);\n    }\n  }, {\n    key: \"resetBaseElement\",\n    value: function resetBaseElement() {\n      baseElement = null;\n    }\n  }, {\n    key: \"getUserAgent\",\n    value: function getUserAgent() {\n      return window.navigator.userAgent;\n    }\n  }, {\n    key: \"getCookie\",\n    value: function getCookie(name) {\n      return ɵparseCookieValue(document.cookie, name);\n    }\n  }], [{\n    key: \"makeCurrent\",\n    value: function makeCurrent() {\n      ɵsetRootDomAdapter(new BrowserDomAdapter());\n    }\n  }]);\n  return BrowserDomAdapter;\n}(GenericBrowserDomAdapter);\nvar baseElement = null;\nfunction getBaseElementHref() {\n  baseElement = baseElement || document.querySelector('base');\n  return baseElement ? baseElement.getAttribute('href') : null;\n}\n// based on urlUtils.js in AngularJS 1\nvar urlParsingNode;\nfunction relativePath(url) {\n  urlParsingNode = urlParsingNode || document.createElement('a');\n  urlParsingNode.setAttribute('href', url);\n  var pathName = urlParsingNode.pathname;\n  return pathName.charAt(0) === '/' ? pathName : \"/\".concat(pathName);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An id that identifies a particular application being bootstrapped, that should\n * match across the client/server boundary.\n */\nvar TRANSITION_ID = new InjectionToken('TRANSITION_ID');\nfunction appInitializerFactory(transitionId, document, injector) {\n  return function () {\n    // Wait for all application initializers to be completed before removing the styles set by\n    // the server.\n    injector.get(ApplicationInitStatus).donePromise.then(function () {\n      var dom = ɵgetDOM();\n      var styles = document.querySelectorAll(\"style[ng-transition=\\\"\".concat(transitionId, \"\\\"]\"));\n      for (var i = 0; i < styles.length; i++) {\n        dom.remove(styles[i]);\n      }\n    });\n  };\n}\nvar SERVER_TRANSITION_PROVIDERS = [{\n  provide: APP_INITIALIZER,\n  useFactory: appInitializerFactory,\n  deps: [TRANSITION_ID, DOCUMENT, Injector],\n  multi: true\n}];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BrowserGetTestability = /*#__PURE__*/function () {\n  function BrowserGetTestability() {\n    _classCallCheck(this, BrowserGetTestability);\n  }\n  _createClass(BrowserGetTestability, [{\n    key: \"addToWindow\",\n    value: function addToWindow(registry) {\n      ɵglobal['getAngularTestability'] = function (elem) {\n        var findInAncestors = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n        var testability = registry.findTestabilityInTree(elem, findInAncestors);\n        if (testability == null) {\n          throw new Error('Could not find testability for element.');\n        }\n        return testability;\n      };\n      ɵglobal['getAllAngularTestabilities'] = function () {\n        return registry.getAllTestabilities();\n      };\n      ɵglobal['getAllAngularRootElements'] = function () {\n        return registry.getAllRootElements();\n      };\n      var whenAllStable = function whenAllStable(callback /** TODO #9100 */) {\n        var testabilities = ɵglobal['getAllAngularTestabilities']();\n        var count = testabilities.length;\n        var didWork = false;\n        var decrement = function decrement(didWork_ /** TODO #9100 */) {\n          didWork = didWork || didWork_;\n          count--;\n          if (count == 0) {\n            callback(didWork);\n          }\n        };\n        testabilities.forEach(function (testability /** TODO #9100 */) {\n          testability.whenStable(decrement);\n        });\n      };\n      if (!ɵglobal['frameworkStabilizers']) {\n        ɵglobal['frameworkStabilizers'] = [];\n      }\n      ɵglobal['frameworkStabilizers'].push(whenAllStable);\n    }\n  }, {\n    key: \"findTestabilityInTree\",\n    value: function findTestabilityInTree(registry, elem, findInAncestors) {\n      if (elem == null) {\n        return null;\n      }\n      var t = registry.getTestability(elem);\n      if (t != null) {\n        return t;\n      } else if (!findInAncestors) {\n        return null;\n      }\n      if (ɵgetDOM().isShadowRoot(elem)) {\n        return this.findTestabilityInTree(registry, elem.host, true);\n      }\n      return this.findTestabilityInTree(registry, elem.parentElement, true);\n    }\n  }]);\n  return BrowserGetTestability;\n}();\n/**\n * A factory for `HttpXhrBackend` that uses the `XMLHttpRequest` browser API.\n */\nvar BrowserXhr = /*#__PURE__*/function () {\n  function BrowserXhr() {\n    _classCallCheck(this, BrowserXhr);\n  }\n  _createClass(BrowserXhr, [{\n    key: \"build\",\n    value: function build() {\n      return new XMLHttpRequest();\n    }\n  }]);\n  return BrowserXhr;\n}();\nBrowserXhr.ɵfac = function BrowserXhr_Factory(t) {\n  return new (t || BrowserXhr)();\n};\nBrowserXhr.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: BrowserXhr,\n  factory: BrowserXhr.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrowserXhr, [{\n    type: Injectable\n  }], null, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The injection token for the event-manager plug-in service.\n *\n * @publicApi\n */\nvar EVENT_MANAGER_PLUGINS = new InjectionToken('EventManagerPlugins');\n/**\n * An injectable service that provides event management for Angular\n * through a browser plug-in.\n *\n * @publicApi\n */\nvar EventManager = /*#__PURE__*/function () {\n  /**\n   * Initializes an instance of the event-manager service.\n   */\n  function EventManager(plugins, _zone) {\n    var _this2 = this;\n    _classCallCheck(this, EventManager);\n    this._zone = _zone;\n    this._eventNameToPlugin = new Map();\n    plugins.forEach(function (p) {\n      return p.manager = _this2;\n    });\n    this._plugins = plugins.slice().reverse();\n  }\n  /**\n   * Registers a handler for a specific element and event.\n   *\n   * @param element The HTML element to receive event notifications.\n   * @param eventName The name of the event to listen for.\n   * @param handler A function to call when the notification occurs. Receives the\n   * event object as an argument.\n   * @returns  A callback function that can be used to remove the handler.\n   */\n  _createClass(EventManager, [{\n    key: \"addEventListener\",\n    value: function addEventListener(element, eventName, handler) {\n      var plugin = this._findPluginFor(eventName);\n      return plugin.addEventListener(element, eventName, handler);\n    }\n    /**\n     * Registers a global handler for an event in a target view.\n     *\n     * @param target A target for global event notifications. One of \"window\", \"document\", or \"body\".\n     * @param eventName The name of the event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @returns A callback function that can be used to remove the handler.\n     * @deprecated No longer being used in Ivy code. To be removed in version 14.\n     */\n  }, {\n    key: \"addGlobalEventListener\",\n    value: function addGlobalEventListener(target, eventName, handler) {\n      var plugin = this._findPluginFor(eventName);\n      return plugin.addGlobalEventListener(target, eventName, handler);\n    }\n    /**\n     * Retrieves the compilation zone in which event listeners are registered.\n     */\n  }, {\n    key: \"getZone\",\n    value: function getZone() {\n      return this._zone;\n    }\n    /** @internal */\n  }, {\n    key: \"_findPluginFor\",\n    value: function _findPluginFor(eventName) {\n      var plugin = this._eventNameToPlugin.get(eventName);\n      if (plugin) {\n        return plugin;\n      }\n      var plugins = this._plugins;\n      for (var i = 0; i < plugins.length; i++) {\n        var _plugin = plugins[i];\n        if (_plugin.supports(eventName)) {\n          this._eventNameToPlugin.set(eventName, _plugin);\n          return _plugin;\n        }\n      }\n      throw new Error(\"No event manager plugin found for event \".concat(eventName));\n    }\n  }]);\n  return EventManager;\n}();\nEventManager.ɵfac = function EventManager_Factory(t) {\n  return new (t || EventManager)(i0.ɵɵinject(EVENT_MANAGER_PLUGINS), i0.ɵɵinject(i0.NgZone));\n};\nEventManager.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: EventManager,\n  factory: EventManager.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(EventManager, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [EVENT_MANAGER_PLUGINS]\n      }]\n    }, {\n      type: i0.NgZone\n    }];\n  }, null);\n})();\nvar EventManagerPlugin = /*#__PURE__*/function () {\n  function EventManagerPlugin(_doc) {\n    _classCallCheck(this, EventManagerPlugin);\n    this._doc = _doc;\n  }\n  _createClass(EventManagerPlugin, [{\n    key: \"addGlobalEventListener\",\n    value: function addGlobalEventListener(element, eventName, handler) {\n      var target = ɵgetDOM().getGlobalEventTarget(this._doc, element);\n      if (!target) {\n        throw new Error(\"Unsupported event target \".concat(target, \" for event \").concat(eventName));\n      }\n      return this.addEventListener(target, eventName, handler);\n    }\n  }]);\n  return EventManagerPlugin;\n}();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SharedStylesHost = /*#__PURE__*/function () {\n  function SharedStylesHost() {\n    _classCallCheck(this, SharedStylesHost);\n    /** @internal */\n    this._stylesSet = new Set();\n  }\n  _createClass(SharedStylesHost, [{\n    key: \"addStyles\",\n    value: function addStyles(styles) {\n      var _this3 = this;\n      var additions = new Set();\n      styles.forEach(function (style) {\n        if (!_this3._stylesSet.has(style)) {\n          _this3._stylesSet.add(style);\n          additions.add(style);\n        }\n      });\n      this.onStylesAdded(additions);\n    }\n  }, {\n    key: \"onStylesAdded\",\n    value: function onStylesAdded(additions) {}\n  }, {\n    key: \"getAllStyles\",\n    value: function getAllStyles() {\n      return Array.from(this._stylesSet);\n    }\n  }]);\n  return SharedStylesHost;\n}();\nSharedStylesHost.ɵfac = function SharedStylesHost_Factory(t) {\n  return new (t || SharedStylesHost)();\n};\nSharedStylesHost.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: SharedStylesHost,\n  factory: SharedStylesHost.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SharedStylesHost, [{\n    type: Injectable\n  }], null, null);\n})();\nvar DomSharedStylesHost = /*#__PURE__*/function (_SharedStylesHost) {\n  _inherits(DomSharedStylesHost, _SharedStylesHost);\n  var _super3 = _createSuper(DomSharedStylesHost);\n  function DomSharedStylesHost(_doc) {\n    var _this4;\n    _classCallCheck(this, DomSharedStylesHost);\n    _this4 = _super3.call(this);\n    _this4._doc = _doc;\n    // Maps all registered host nodes to a list of style nodes that have been added to the host node.\n    _this4._hostNodes = new Map();\n    _this4._hostNodes.set(_doc.head, []);\n    return _this4;\n  }\n  _createClass(DomSharedStylesHost, [{\n    key: \"_addStylesToHost\",\n    value: function _addStylesToHost(styles, host, styleNodes) {\n      var _this5 = this;\n      styles.forEach(function (style) {\n        var styleEl = _this5._doc.createElement('style');\n        styleEl.textContent = style;\n        styleNodes.push(host.appendChild(styleEl));\n      });\n    }\n  }, {\n    key: \"addHost\",\n    value: function addHost(hostNode) {\n      var styleNodes = [];\n      this._addStylesToHost(this._stylesSet, hostNode, styleNodes);\n      this._hostNodes.set(hostNode, styleNodes);\n    }\n  }, {\n    key: \"removeHost\",\n    value: function removeHost(hostNode) {\n      var styleNodes = this._hostNodes.get(hostNode);\n      if (styleNodes) {\n        styleNodes.forEach(removeStyle);\n      }\n      this._hostNodes[\"delete\"](hostNode);\n    }\n  }, {\n    key: \"onStylesAdded\",\n    value: function onStylesAdded(additions) {\n      var _this6 = this;\n      this._hostNodes.forEach(function (styleNodes, hostNode) {\n        _this6._addStylesToHost(additions, hostNode, styleNodes);\n      });\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._hostNodes.forEach(function (styleNodes) {\n        return styleNodes.forEach(removeStyle);\n      });\n    }\n  }]);\n  return DomSharedStylesHost;\n}(SharedStylesHost);\nDomSharedStylesHost.ɵfac = function DomSharedStylesHost_Factory(t) {\n  return new (t || DomSharedStylesHost)(i0.ɵɵinject(DOCUMENT));\n};\nDomSharedStylesHost.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: DomSharedStylesHost,\n  factory: DomSharedStylesHost.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DomSharedStylesHost, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\nfunction removeStyle(styleNode) {\n  ɵgetDOM().remove(styleNode);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NAMESPACE_URIS = {\n  'svg': 'http://www.w3.org/2000/svg',\n  'xhtml': 'http://www.w3.org/1999/xhtml',\n  'xlink': 'http://www.w3.org/1999/xlink',\n  'xml': 'http://www.w3.org/XML/1998/namespace',\n  'xmlns': 'http://www.w3.org/2000/xmlns/',\n  'math': 'http://www.w3.org/1998/MathML/'\n};\nvar COMPONENT_REGEX = /%COMP%/g;\nvar NG_DEV_MODE$1 = typeof ngDevMode === 'undefined' || !!ngDevMode;\nvar COMPONENT_VARIABLE = '%COMP%';\nvar HOST_ATTR = \"_nghost-\".concat(COMPONENT_VARIABLE);\nvar CONTENT_ATTR = \"_ngcontent-\".concat(COMPONENT_VARIABLE);\nfunction shimContentAttribute(componentShortId) {\n  return CONTENT_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\nfunction shimHostAttribute(componentShortId) {\n  return HOST_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\nfunction flattenStyles(compId, styles) {\n  // Cannot use `Infinity` as depth as `infinity` is not a number literal in TypeScript.\n  // See: https://github.com/microsoft/TypeScript/issues/32277\n  return styles.flat(100).map(function (s) {\n    return s.replace(COMPONENT_REGEX, compId);\n  });\n}\nfunction decoratePreventDefault(eventHandler) {\n  // `DebugNode.triggerEventHandler` needs to know if the listener was created with\n  // decoratePreventDefault or is a listener added outside the Angular context so it can handle the\n  // two differently. In the first case, the special '__ngUnwrap__' token is passed to the unwrap\n  // the listener (see below).\n  return function (event) {\n    // Ivy uses '__ngUnwrap__' as a special token that allows us to unwrap the function\n    // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`. The debug_node\n    // can inspect the listener toString contents for the existence of this special token. Because\n    // the token is a string literal, it is ensured to not be modified by compiled code.\n    if (event === '__ngUnwrap__') {\n      return eventHandler;\n    }\n    var allowDefaultBehavior = eventHandler(event);\n    if (allowDefaultBehavior === false) {\n      // TODO(tbosch): move preventDefault into event plugins...\n      event.preventDefault();\n      event.returnValue = false;\n    }\n    return undefined;\n  };\n}\nvar hasLoggedNativeEncapsulationWarning = false;\nvar DomRendererFactory2 = /*#__PURE__*/function () {\n  function DomRendererFactory2(eventManager, sharedStylesHost, appId) {\n    _classCallCheck(this, DomRendererFactory2);\n    this.eventManager = eventManager;\n    this.sharedStylesHost = sharedStylesHost;\n    this.appId = appId;\n    this.rendererByCompId = new Map();\n    this.defaultRenderer = new DefaultDomRenderer2(eventManager);\n  }\n  _createClass(DomRendererFactory2, [{\n    key: \"createRenderer\",\n    value: function createRenderer(element, type) {\n      if (!element || !type) {\n        return this.defaultRenderer;\n      }\n      switch (type.encapsulation) {\n        case ViewEncapsulation.Emulated:\n          {\n            var renderer = this.rendererByCompId.get(type.id);\n            if (!renderer) {\n              renderer = new EmulatedEncapsulationDomRenderer2(this.eventManager, this.sharedStylesHost, type, this.appId);\n              this.rendererByCompId.set(type.id, renderer);\n            }\n            renderer.applyToHost(element);\n            return renderer;\n          }\n        // @ts-ignore TODO: Remove as part of FW-2290. TS complains about us dealing with an enum\n        // value that is not known (but previously was the value for ViewEncapsulation.Native)\n        case 1:\n        case ViewEncapsulation.ShadowDom:\n          // TODO(FW-2290): remove the `case 1:` fallback logic and the warning in v12.\n          if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n          // @ts-ignore TODO: Remove as part of FW-2290. TS complains about us dealing with an\n          // enum value that is not known (but previously was the value for\n          // ViewEncapsulation.Native)\n          !hasLoggedNativeEncapsulationWarning && type.encapsulation === 1) {\n            hasLoggedNativeEncapsulationWarning = true;\n            console.warn('ViewEncapsulation.Native is no longer supported. Falling back to ViewEncapsulation.ShadowDom. The fallback will be removed in v12.');\n          }\n          return new ShadowDomRenderer(this.eventManager, this.sharedStylesHost, element, type);\n        default:\n          {\n            if (!this.rendererByCompId.has(type.id)) {\n              var styles = flattenStyles(type.id, type.styles);\n              this.sharedStylesHost.addStyles(styles);\n              this.rendererByCompId.set(type.id, this.defaultRenderer);\n            }\n            return this.defaultRenderer;\n          }\n      }\n    }\n  }, {\n    key: \"begin\",\n    value: function begin() {}\n  }, {\n    key: \"end\",\n    value: function end() {}\n  }]);\n  return DomRendererFactory2;\n}();\nDomRendererFactory2.ɵfac = function DomRendererFactory2_Factory(t) {\n  return new (t || DomRendererFactory2)(i0.ɵɵinject(EventManager), i0.ɵɵinject(DomSharedStylesHost), i0.ɵɵinject(APP_ID));\n};\nDomRendererFactory2.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: DomRendererFactory2,\n  factory: DomRendererFactory2.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DomRendererFactory2, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: EventManager\n    }, {\n      type: DomSharedStylesHost\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [APP_ID]\n      }]\n    }];\n  }, null);\n})();\nvar DefaultDomRenderer2 = /*#__PURE__*/function () {\n  function DefaultDomRenderer2(eventManager) {\n    _classCallCheck(this, DefaultDomRenderer2);\n    this.eventManager = eventManager;\n    this.data = Object.create(null);\n    this.destroyNode = null;\n  }\n  _createClass(DefaultDomRenderer2, [{\n    key: \"destroy\",\n    value: function destroy() {}\n  }, {\n    key: \"createElement\",\n    value: function createElement(name, namespace) {\n      if (namespace) {\n        // TODO: `|| namespace` was added in\n        // https://github.com/angular/angular/commit/2b9cc8503d48173492c29f5a271b61126104fbdb to\n        // support how Ivy passed around the namespace URI rather than short name at the time. It did\n        // not, however extend the support to other parts of the system (setAttribute, setAttribute,\n        // and the ServerRenderer). We should decide what exactly the semantics for dealing with\n        // namespaces should be and make it consistent.\n        // Related issues:\n        // https://github.com/angular/angular/issues/44028\n        // https://github.com/angular/angular/issues/44883\n        return document.createElementNS(NAMESPACE_URIS[namespace] || namespace, name);\n      }\n      return document.createElement(name);\n    }\n  }, {\n    key: \"createComment\",\n    value: function createComment(value) {\n      return document.createComment(value);\n    }\n  }, {\n    key: \"createText\",\n    value: function createText(value) {\n      return document.createTextNode(value);\n    }\n  }, {\n    key: \"appendChild\",\n    value: function appendChild(parent, newChild) {\n      var targetParent = isTemplateNode(parent) ? parent.content : parent;\n      targetParent.appendChild(newChild);\n    }\n  }, {\n    key: \"insertBefore\",\n    value: function insertBefore(parent, newChild, refChild) {\n      if (parent) {\n        var targetParent = isTemplateNode(parent) ? parent.content : parent;\n        targetParent.insertBefore(newChild, refChild);\n      }\n    }\n  }, {\n    key: \"removeChild\",\n    value: function removeChild(parent, oldChild) {\n      if (parent) {\n        parent.removeChild(oldChild);\n      }\n    }\n  }, {\n    key: \"selectRootElement\",\n    value: function selectRootElement(selectorOrNode, preserveContent) {\n      var el = typeof selectorOrNode === 'string' ? document.querySelector(selectorOrNode) : selectorOrNode;\n      if (!el) {\n        throw new Error(\"The selector \\\"\".concat(selectorOrNode, \"\\\" did not match any elements\"));\n      }\n      if (!preserveContent) {\n        el.textContent = '';\n      }\n      return el;\n    }\n  }, {\n    key: \"parentNode\",\n    value: function parentNode(node) {\n      return node.parentNode;\n    }\n  }, {\n    key: \"nextSibling\",\n    value: function nextSibling(node) {\n      return node.nextSibling;\n    }\n  }, {\n    key: \"setAttribute\",\n    value: function setAttribute(el, name, value, namespace) {\n      if (namespace) {\n        name = namespace + ':' + name;\n        var namespaceUri = NAMESPACE_URIS[namespace];\n        if (namespaceUri) {\n          el.setAttributeNS(namespaceUri, name, value);\n        } else {\n          el.setAttribute(name, value);\n        }\n      } else {\n        el.setAttribute(name, value);\n      }\n    }\n  }, {\n    key: \"removeAttribute\",\n    value: function removeAttribute(el, name, namespace) {\n      if (namespace) {\n        var namespaceUri = NAMESPACE_URIS[namespace];\n        if (namespaceUri) {\n          el.removeAttributeNS(namespaceUri, name);\n        } else {\n          el.removeAttribute(\"\".concat(namespace, \":\").concat(name));\n        }\n      } else {\n        el.removeAttribute(name);\n      }\n    }\n  }, {\n    key: \"addClass\",\n    value: function addClass(el, name) {\n      el.classList.add(name);\n    }\n  }, {\n    key: \"removeClass\",\n    value: function removeClass(el, name) {\n      el.classList.remove(name);\n    }\n  }, {\n    key: \"setStyle\",\n    value: function setStyle(el, style, value, flags) {\n      if (flags & (RendererStyleFlags2.DashCase | RendererStyleFlags2.Important)) {\n        el.style.setProperty(style, value, flags & RendererStyleFlags2.Important ? 'important' : '');\n      } else {\n        el.style[style] = value;\n      }\n    }\n  }, {\n    key: \"removeStyle\",\n    value: function removeStyle(el, style, flags) {\n      if (flags & RendererStyleFlags2.DashCase) {\n        el.style.removeProperty(style);\n      } else {\n        // IE requires '' instead of null\n        // see https://github.com/angular/angular/issues/7916\n        el.style[style] = '';\n      }\n    }\n  }, {\n    key: \"setProperty\",\n    value: function setProperty(el, name, value) {\n      NG_DEV_MODE$1 && checkNoSyntheticProp(name, 'property');\n      el[name] = value;\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(node, value) {\n      node.nodeValue = value;\n    }\n  }, {\n    key: \"listen\",\n    value: function listen(target, event, callback) {\n      NG_DEV_MODE$1 && checkNoSyntheticProp(event, 'listener');\n      if (typeof target === 'string') {\n        return this.eventManager.addGlobalEventListener(target, event, decoratePreventDefault(callback));\n      }\n      return this.eventManager.addEventListener(target, event, decoratePreventDefault(callback));\n    }\n  }]);\n  return DefaultDomRenderer2;\n}();\nvar AT_CHARCODE = function () {\n  return '@'.charCodeAt(0);\n}();\nfunction checkNoSyntheticProp(name, nameKind) {\n  if (name.charCodeAt(0) === AT_CHARCODE) {\n    throw new Error(\"Unexpected synthetic \".concat(nameKind, \" \").concat(name, \" found. Please make sure that:\\n  - Either `BrowserAnimationsModule` or `NoopAnimationsModule` are imported in your application.\\n  - There is corresponding configuration for the animation named `\").concat(name, \"` defined in the `animations` field of the `@Component` decorator (see https://angular.io/api/core/Component#animations).\"));\n  }\n}\nfunction isTemplateNode(node) {\n  return node.tagName === 'TEMPLATE' && node.content !== undefined;\n}\nvar EmulatedEncapsulationDomRenderer2 = /*#__PURE__*/function (_DefaultDomRenderer) {\n  _inherits(EmulatedEncapsulationDomRenderer2, _DefaultDomRenderer);\n  var _super4 = _createSuper(EmulatedEncapsulationDomRenderer2);\n  function EmulatedEncapsulationDomRenderer2(eventManager, sharedStylesHost, component, appId) {\n    var _this7;\n    _classCallCheck(this, EmulatedEncapsulationDomRenderer2);\n    _this7 = _super4.call(this, eventManager);\n    _this7.component = component;\n    var styles = flattenStyles(appId + '-' + component.id, component.styles);\n    sharedStylesHost.addStyles(styles);\n    _this7.contentAttr = shimContentAttribute(appId + '-' + component.id);\n    _this7.hostAttr = shimHostAttribute(appId + '-' + component.id);\n    return _this7;\n  }\n  _createClass(EmulatedEncapsulationDomRenderer2, [{\n    key: \"applyToHost\",\n    value: function applyToHost(element) {\n      _get(_getPrototypeOf(EmulatedEncapsulationDomRenderer2.prototype), \"setAttribute\", this).call(this, element, this.hostAttr, '');\n    }\n  }, {\n    key: \"createElement\",\n    value: function createElement(parent, name) {\n      var el = _get(_getPrototypeOf(EmulatedEncapsulationDomRenderer2.prototype), \"createElement\", this).call(this, parent, name);\n      _get(_getPrototypeOf(EmulatedEncapsulationDomRenderer2.prototype), \"setAttribute\", this).call(this, el, this.contentAttr, '');\n      return el;\n    }\n  }]);\n  return EmulatedEncapsulationDomRenderer2;\n}(DefaultDomRenderer2);\nvar ShadowDomRenderer = /*#__PURE__*/function (_DefaultDomRenderer2) {\n  _inherits(ShadowDomRenderer, _DefaultDomRenderer2);\n  var _super5 = _createSuper(ShadowDomRenderer);\n  function ShadowDomRenderer(eventManager, sharedStylesHost, hostEl, component) {\n    var _this8;\n    _classCallCheck(this, ShadowDomRenderer);\n    _this8 = _super5.call(this, eventManager);\n    _this8.sharedStylesHost = sharedStylesHost;\n    _this8.hostEl = hostEl;\n    _this8.shadowRoot = hostEl.attachShadow({\n      mode: 'open'\n    });\n    _this8.sharedStylesHost.addHost(_this8.shadowRoot);\n    var styles = flattenStyles(component.id, component.styles);\n    for (var i = 0; i < styles.length; i++) {\n      var styleEl = document.createElement('style');\n      styleEl.textContent = styles[i];\n      _this8.shadowRoot.appendChild(styleEl);\n    }\n    return _this8;\n  }\n  _createClass(ShadowDomRenderer, [{\n    key: \"nodeOrShadowRoot\",\n    value: function nodeOrShadowRoot(node) {\n      return node === this.hostEl ? this.shadowRoot : node;\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.sharedStylesHost.removeHost(this.shadowRoot);\n    }\n  }, {\n    key: \"appendChild\",\n    value: function appendChild(parent, newChild) {\n      return _get(_getPrototypeOf(ShadowDomRenderer.prototype), \"appendChild\", this).call(this, this.nodeOrShadowRoot(parent), newChild);\n    }\n  }, {\n    key: \"insertBefore\",\n    value: function insertBefore(parent, newChild, refChild) {\n      return _get(_getPrototypeOf(ShadowDomRenderer.prototype), \"insertBefore\", this).call(this, this.nodeOrShadowRoot(parent), newChild, refChild);\n    }\n  }, {\n    key: \"removeChild\",\n    value: function removeChild(parent, oldChild) {\n      return _get(_getPrototypeOf(ShadowDomRenderer.prototype), \"removeChild\", this).call(this, this.nodeOrShadowRoot(parent), oldChild);\n    }\n  }, {\n    key: \"parentNode\",\n    value: function parentNode(node) {\n      return this.nodeOrShadowRoot(_get(_getPrototypeOf(ShadowDomRenderer.prototype), \"parentNode\", this).call(this, this.nodeOrShadowRoot(node)));\n    }\n  }]);\n  return ShadowDomRenderer;\n}(DefaultDomRenderer2);\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DomEventsPlugin = /*#__PURE__*/function (_EventManagerPlugin) {\n  _inherits(DomEventsPlugin, _EventManagerPlugin);\n  var _super6 = _createSuper(DomEventsPlugin);\n  function DomEventsPlugin(doc) {\n    _classCallCheck(this, DomEventsPlugin);\n    return _super6.call(this, doc);\n  }\n  // This plugin should come last in the list of plugins, because it accepts all\n  // events.\n  _createClass(DomEventsPlugin, [{\n    key: \"supports\",\n    value: function supports(eventName) {\n      return true;\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(element, eventName, handler) {\n      var _this9 = this;\n      element.addEventListener(eventName, handler, false);\n      return function () {\n        return _this9.removeEventListener(element, eventName, handler);\n      };\n    }\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(target, eventName, callback) {\n      return target.removeEventListener(eventName, callback);\n    }\n  }]);\n  return DomEventsPlugin;\n}(EventManagerPlugin);\nDomEventsPlugin.ɵfac = function DomEventsPlugin_Factory(t) {\n  return new (t || DomEventsPlugin)(i0.ɵɵinject(DOCUMENT));\n};\nDomEventsPlugin.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: DomEventsPlugin,\n  factory: DomEventsPlugin.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DomEventsPlugin, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Defines supported modifiers for key events.\n */\nvar MODIFIER_KEYS = ['alt', 'control', 'meta', 'shift'];\n// The following values are here for cross-browser compatibility and to match the W3C standard\n// cf https://www.w3.org/TR/DOM-Level-3-Events-key/\nvar _keyMap = {\n  '\\b': 'Backspace',\n  '\\t': 'Tab',\n  '\\x7F': 'Delete',\n  '\\x1B': 'Escape',\n  'Del': 'Delete',\n  'Esc': 'Escape',\n  'Left': 'ArrowLeft',\n  'Right': 'ArrowRight',\n  'Up': 'ArrowUp',\n  'Down': 'ArrowDown',\n  'Menu': 'ContextMenu',\n  'Scroll': 'ScrollLock',\n  'Win': 'OS'\n};\n/**\n * Retrieves modifiers from key-event objects.\n */\nvar MODIFIER_KEY_GETTERS = {\n  'alt': function alt(event) {\n    return event.altKey;\n  },\n  'control': function control(event) {\n    return event.ctrlKey;\n  },\n  'meta': function meta(event) {\n    return event.metaKey;\n  },\n  'shift': function shift(event) {\n    return event.shiftKey;\n  }\n};\n/**\n * @publicApi\n * A browser plug-in that provides support for handling of key events in Angular.\n */\nvar KeyEventsPlugin = /*#__PURE__*/function (_EventManagerPlugin2) {\n  _inherits(KeyEventsPlugin, _EventManagerPlugin2);\n  var _super7 = _createSuper(KeyEventsPlugin);\n  /**\n   * Initializes an instance of the browser plug-in.\n   * @param doc The document in which key events will be detected.\n   */\n  function KeyEventsPlugin(doc) {\n    _classCallCheck(this, KeyEventsPlugin);\n    return _super7.call(this, doc);\n  }\n  /**\n   * Reports whether a named key event is supported.\n   * @param eventName The event name to query.\n   * @return True if the named key event is supported.\n   */\n  _createClass(KeyEventsPlugin, [{\n    key: \"supports\",\n    value: function supports(eventName) {\n      return KeyEventsPlugin.parseEventName(eventName) != null;\n    }\n    /**\n     * Registers a handler for a specific element and key event.\n     * @param element The HTML element to receive event notifications.\n     * @param eventName The name of the key event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @returns The key event that was registered.\n     */\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(element, eventName, handler) {\n      var parsedEvent = KeyEventsPlugin.parseEventName(eventName);\n      var outsideHandler = KeyEventsPlugin.eventCallback(parsedEvent['fullKey'], handler, this.manager.getZone());\n      return this.manager.getZone().runOutsideAngular(function () {\n        return ɵgetDOM().onAndCancel(element, parsedEvent['domEventName'], outsideHandler);\n      });\n    }\n    /**\n     * Parses the user provided full keyboard event definition and normalizes it for\n     * later internal use. It ensures the string is all lowercase, converts special\n     * characters to a standard spelling, and orders all the values consistently.\n     *\n     * @param eventName The name of the key event to listen for.\n     * @returns an object with the full, normalized string, and the dom event name\n     * or null in the case when the event doesn't match a keyboard event.\n     */\n  }], [{\n    key: \"parseEventName\",\n    value: function parseEventName(eventName) {\n      var parts = eventName.toLowerCase().split('.');\n      var domEventName = parts.shift();\n      if (parts.length === 0 || !(domEventName === 'keydown' || domEventName === 'keyup')) {\n        return null;\n      }\n      var key = KeyEventsPlugin._normalizeKey(parts.pop());\n      var fullKey = '';\n      var codeIX = parts.indexOf('code');\n      if (codeIX > -1) {\n        parts.splice(codeIX, 1);\n        fullKey = 'code.';\n      }\n      MODIFIER_KEYS.forEach(function (modifierName) {\n        var index = parts.indexOf(modifierName);\n        if (index > -1) {\n          parts.splice(index, 1);\n          fullKey += modifierName + '.';\n        }\n      });\n      fullKey += key;\n      if (parts.length != 0 || key.length === 0) {\n        // returning null instead of throwing to let another plugin process the event\n        return null;\n      }\n      // NOTE: Please don't rewrite this as so, as it will break JSCompiler property renaming.\n      //       The code must remain in the `result['domEventName']` form.\n      // return {domEventName, fullKey};\n      var result = {};\n      result['domEventName'] = domEventName;\n      result['fullKey'] = fullKey;\n      return result;\n    }\n    /**\n     * Determines whether the actual keys pressed match the configured key code string.\n     * The `fullKeyCode` event is normalized in the `parseEventName` method when the\n     * event is attached to the DOM during the `addEventListener` call. This is unseen\n     * by the end user and is normalized for internal consistency and parsing.\n     *\n     * @param event The keyboard event.\n     * @param fullKeyCode The normalized user defined expected key event string\n     * @returns boolean.\n     */\n  }, {\n    key: \"matchEventFullKeyCode\",\n    value: function matchEventFullKeyCode(event, fullKeyCode) {\n      var keycode = _keyMap[event.key] || event.key;\n      var key = '';\n      if (fullKeyCode.indexOf('code.') > -1) {\n        keycode = event.code;\n        key = 'code.';\n      }\n      // the keycode could be unidentified so we have to check here\n      if (keycode == null || !keycode) return false;\n      keycode = keycode.toLowerCase();\n      if (keycode === ' ') {\n        keycode = 'space'; // for readability\n      } else if (keycode === '.') {\n        keycode = 'dot'; // because '.' is used as a separator in event names\n      }\n\n      MODIFIER_KEYS.forEach(function (modifierName) {\n        if (modifierName !== keycode) {\n          var modifierGetter = MODIFIER_KEY_GETTERS[modifierName];\n          if (modifierGetter(event)) {\n            key += modifierName + '.';\n          }\n        }\n      });\n      key += keycode;\n      return key === fullKeyCode;\n    }\n    /**\n     * Configures a handler callback for a key event.\n     * @param fullKey The event name that combines all simultaneous keystrokes.\n     * @param handler The function that responds to the key event.\n     * @param zone The zone in which the event occurred.\n     * @returns A callback function.\n     */\n  }, {\n    key: \"eventCallback\",\n    value: function eventCallback(fullKey, handler, zone) {\n      return function (event) {\n        if (KeyEventsPlugin.matchEventFullKeyCode(event, fullKey)) {\n          zone.runGuarded(function () {\n            return handler(event);\n          });\n        }\n      };\n    }\n    /** @internal */\n  }, {\n    key: \"_normalizeKey\",\n    value: function _normalizeKey(keyName) {\n      // TODO: switch to a Map if the mapping grows too much\n      switch (keyName) {\n        case 'esc':\n          return 'escape';\n        default:\n          return keyName;\n      }\n    }\n  }]);\n  return KeyEventsPlugin;\n}(EventManagerPlugin);\nKeyEventsPlugin.ɵfac = function KeyEventsPlugin_Factory(t) {\n  return new (t || KeyEventsPlugin)(i0.ɵɵinject(DOCUMENT));\n};\nKeyEventsPlugin.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: KeyEventsPlugin,\n  factory: KeyEventsPlugin.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(KeyEventsPlugin, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NG_DEV_MODE = typeof ngDevMode === 'undefined' || !!ngDevMode;\n/**\n * Bootstraps an instance of an Angular application and renders a standalone component as the\n * application's root component. More information about standalone components can be found in [this\n * guide](guide/standalone-components).\n *\n * @usageNotes\n * The root component passed into this function *must* be a standalone one (should have the\n * `standalone: true` flag in the `@Component` decorator config).\n *\n * ```typescript\n * @Component({\n *   standalone: true,\n *   template: 'Hello world!'\n * })\n * class RootComponent {}\n *\n * const appRef: ApplicationRef = await bootstrapApplication(RootComponent);\n * ```\n *\n * You can add the list of providers that should be available in the application injector by\n * specifying the `providers` field in an object passed as the second argument:\n *\n * ```typescript\n * await bootstrapApplication(RootComponent, {\n *   providers: [\n *     {provide: BACKEND_URL, useValue: 'https://yourdomain.com/api'}\n *   ]\n * });\n * ```\n *\n * The `importProvidersFrom` helper method can be used to collect all providers from any\n * existing NgModule (and transitively from all NgModules that it imports):\n *\n * ```typescript\n * await bootstrapApplication(RootComponent, {\n *   providers: [\n *     importProvidersFrom(SomeNgModule)\n *   ]\n * });\n * ```\n *\n * Note: the `bootstrapApplication` method doesn't include [Testability](api/core/Testability) by\n * default. You can add [Testability](api/core/Testability) by getting the list of necessary\n * providers using `provideProtractorTestingSupport()` function and adding them into the `providers`\n * array, for example:\n *\n * ```typescript\n * import {provideProtractorTestingSupport} from '@angular/platform-browser';\n *\n * await bootstrapApplication(RootComponent, {providers: [provideProtractorTestingSupport()]});\n * ```\n *\n * @param rootComponent A reference to a standalone component that should be rendered.\n * @param options Extra configuration for the bootstrap operation, see `ApplicationConfig` for\n *     additional info.\n * @returns A promise that returns an `ApplicationRef` instance once resolved.\n *\n * @publicApi\n */\nfunction bootstrapApplication(rootComponent, options) {\n  return ɵinternalCreateApplication(_objectSpread({\n    rootComponent: rootComponent\n  }, createProvidersConfig(options)));\n}\n/**\n * Create an instance of an Angular application without bootstrapping any components. This is useful\n * for the situation where one wants to decouple application environment creation (a platform and\n * associated injectors) from rendering components on a screen. Components can be subsequently\n * bootstrapped on the returned `ApplicationRef`.\n *\n * @param options Extra configuration for the application environment, see `ApplicationConfig` for\n *     additional info.\n * @returns A promise that returns an `ApplicationRef` instance once resolved.\n *\n * @publicApi\n */\nfunction createApplication(options) {\n  return ɵinternalCreateApplication(createProvidersConfig(options));\n}\nfunction createProvidersConfig(options) {\n  var _options$providers;\n  return {\n    appProviders: [].concat(BROWSER_MODULE_PROVIDERS, _toConsumableArray((_options$providers = options === null || options === void 0 ? void 0 : options.providers) !== null && _options$providers !== void 0 ? _options$providers : [])),\n    platformProviders: INTERNAL_BROWSER_PLATFORM_PROVIDERS\n  };\n}\n/**\n * Returns a set of providers required to setup [Testability](api/core/Testability) for an\n * application bootstrapped using the `bootstrapApplication` function. The set of providers is\n * needed to support testing an application with Protractor (which relies on the Testability APIs\n * to be present).\n *\n * @returns An array of providers required to setup Testability for an application and make it\n *     available for testing using Protractor.\n *\n * @publicApi\n */\nfunction provideProtractorTestingSupport() {\n  // Return a copy to prevent changes to the original array in case any in-place\n  // alterations are performed to the `provideProtractorTestingSupport` call results in app code.\n  return [].concat(TESTABILITY_PROVIDERS);\n}\nfunction initDomAdapter() {\n  BrowserDomAdapter.makeCurrent();\n}\nfunction errorHandler() {\n  return new ErrorHandler();\n}\nfunction _document() {\n  // Tell ivy about the global document\n  ɵsetDocument(document);\n  return document;\n}\nvar INTERNAL_BROWSER_PLATFORM_PROVIDERS = [{\n  provide: PLATFORM_ID,\n  useValue: ɵPLATFORM_BROWSER_ID\n}, {\n  provide: PLATFORM_INITIALIZER,\n  useValue: initDomAdapter,\n  multi: true\n}, {\n  provide: DOCUMENT,\n  useFactory: _document,\n  deps: []\n}];\n/**\n * A factory function that returns a `PlatformRef` instance associated with browser service\n * providers.\n *\n * @publicApi\n */\nvar platformBrowser = createPlatformFactory(platformCore, 'browser', INTERNAL_BROWSER_PLATFORM_PROVIDERS);\n/**\n * Internal marker to signal whether providers from the `BrowserModule` are already present in DI.\n * This is needed to avoid loading `BrowserModule` providers twice. We can't rely on the\n * `BrowserModule` presence itself, since the standalone-based bootstrap just imports\n * `BrowserModule` providers without referencing the module itself.\n */\nvar BROWSER_MODULE_PROVIDERS_MARKER = new InjectionToken(NG_DEV_MODE ? 'BrowserModule Providers Marker' : '');\nvar TESTABILITY_PROVIDERS = [{\n  provide: ɵTESTABILITY_GETTER,\n  useClass: BrowserGetTestability,\n  deps: []\n}, {\n  provide: ɵTESTABILITY,\n  useClass: Testability,\n  deps: [NgZone, TestabilityRegistry, ɵTESTABILITY_GETTER]\n}, {\n  provide: Testability,\n  useClass: Testability,\n  deps: [NgZone, TestabilityRegistry, ɵTESTABILITY_GETTER]\n}];\nvar BROWSER_MODULE_PROVIDERS = [{\n  provide: ɵINJECTOR_SCOPE,\n  useValue: 'root'\n}, {\n  provide: ErrorHandler,\n  useFactory: errorHandler,\n  deps: []\n}, {\n  provide: EVENT_MANAGER_PLUGINS,\n  useClass: DomEventsPlugin,\n  multi: true,\n  deps: [DOCUMENT, NgZone, PLATFORM_ID]\n}, {\n  provide: EVENT_MANAGER_PLUGINS,\n  useClass: KeyEventsPlugin,\n  multi: true,\n  deps: [DOCUMENT]\n}, {\n  provide: DomRendererFactory2,\n  useClass: DomRendererFactory2,\n  deps: [EventManager, DomSharedStylesHost, APP_ID]\n}, {\n  provide: RendererFactory2,\n  useExisting: DomRendererFactory2\n}, {\n  provide: SharedStylesHost,\n  useExisting: DomSharedStylesHost\n}, {\n  provide: DomSharedStylesHost,\n  useClass: DomSharedStylesHost,\n  deps: [DOCUMENT]\n}, {\n  provide: EventManager,\n  useClass: EventManager,\n  deps: [EVENT_MANAGER_PLUGINS, NgZone]\n}, {\n  provide: XhrFactory,\n  useClass: BrowserXhr,\n  deps: []\n}, NG_DEV_MODE ? {\n  provide: BROWSER_MODULE_PROVIDERS_MARKER,\n  useValue: true\n} : []];\n/**\n * Exports required infrastructure for all Angular apps.\n * Included by default in all Angular apps created with the CLI\n * `new` command.\n * Re-exports `CommonModule` and `ApplicationModule`, making their\n * exports and providers available to all apps.\n *\n * @publicApi\n */\nvar BrowserModule = /*#__PURE__*/function () {\n  function BrowserModule(providersAlreadyPresent) {\n    _classCallCheck(this, BrowserModule);\n    if (NG_DEV_MODE && providersAlreadyPresent) {\n      throw new Error(\"Providers from the `BrowserModule` have already been loaded. If you need access \" + \"to common directives such as NgIf and NgFor, import the `CommonModule` instead.\");\n    }\n  }\n  /**\n   * Configures a browser-based app to transition from a server-rendered app, if\n   * one is present on the page.\n   *\n   * @param params An object containing an identifier for the app to transition.\n   * The ID must match between the client and server versions of the app.\n   * @returns The reconfigured `BrowserModule` to import into the app's root `AppModule`.\n   */\n  _createClass(BrowserModule, null, [{\n    key: \"withServerTransition\",\n    value: function withServerTransition(params) {\n      return {\n        ngModule: BrowserModule,\n        providers: [{\n          provide: APP_ID,\n          useValue: params.appId\n        }, {\n          provide: TRANSITION_ID,\n          useExisting: APP_ID\n        }, SERVER_TRANSITION_PROVIDERS]\n      };\n    }\n  }]);\n  return BrowserModule;\n}();\nBrowserModule.ɵfac = function BrowserModule_Factory(t) {\n  return new (t || BrowserModule)(i0.ɵɵinject(BROWSER_MODULE_PROVIDERS_MARKER, 12));\n};\nBrowserModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: BrowserModule\n});\nBrowserModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [].concat(BROWSER_MODULE_PROVIDERS, TESTABILITY_PROVIDERS),\n  imports: [CommonModule, ApplicationModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrowserModule, [{\n    type: NgModule,\n    args: [{\n      providers: [].concat(BROWSER_MODULE_PROVIDERS, TESTABILITY_PROVIDERS),\n      exports: [CommonModule, ApplicationModule]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: SkipSelf\n      }, {\n        type: Inject,\n        args: [BROWSER_MODULE_PROVIDERS_MARKER]\n      }]\n    }];\n  }, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Factory to create a `Meta` service instance for the current DOM document.\n */\nfunction createMeta() {\n  return new Meta(ɵɵinject(DOCUMENT));\n}\n/**\n * A service for managing HTML `<meta>` tags.\n *\n * Properties of the `MetaDefinition` object match the attributes of the\n * HTML `<meta>` tag. These tags define document metadata that is important for\n * things like configuring a Content Security Policy, defining browser compatibility\n * and security settings, setting HTTP Headers, defining rich content for social sharing,\n * and Search Engine Optimization (SEO).\n *\n * To identify specific `<meta>` tags in a document, use an attribute selection\n * string in the format `\"tag_attribute='value string'\"`.\n * For example, an `attrSelector` value of `\"name='description'\"` matches a tag\n * whose `name` attribute has the value `\"description\"`.\n * Selectors are used with the `querySelector()` Document method,\n * in the format `meta[{attrSelector}]`.\n *\n * @see [HTML meta tag](https://developer.mozilla.org/docs/Web/HTML/Element/meta)\n * @see [Document.querySelector()](https://developer.mozilla.org/docs/Web/API/Document/querySelector)\n *\n *\n * @publicApi\n */\nvar Meta = /*#__PURE__*/function () {\n  function Meta(_doc) {\n    _classCallCheck(this, Meta);\n    this._doc = _doc;\n    this._dom = ɵgetDOM();\n  }\n  /**\n   * Retrieves or creates a specific `<meta>` tag element in the current HTML document.\n   * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n   * values in the provided tag definition, and verifies that all other attribute values are equal.\n   * If an existing element is found, it is returned and is not modified in any way.\n   * @param tag The definition of a `<meta>` element to match or create.\n   * @param forceCreation True to create a new element without checking whether one already exists.\n   * @returns The existing element with the same attributes and values if found,\n   * the new element if no match is found, or `null` if the tag parameter is not defined.\n   */\n  _createClass(Meta, [{\n    key: \"addTag\",\n    value: function addTag(tag) {\n      var forceCreation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      if (!tag) return null;\n      return this._getOrCreateElement(tag, forceCreation);\n    }\n    /**\n     * Retrieves or creates a set of `<meta>` tag elements in the current HTML document.\n     * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n     * values in the provided tag definition, and verifies that all other attribute values are equal.\n     * @param tags An array of tag definitions to match or create.\n     * @param forceCreation True to create new elements without checking whether they already exist.\n     * @returns The matching elements if found, or the new elements.\n     */\n  }, {\n    key: \"addTags\",\n    value: function addTags(tags) {\n      var _this10 = this;\n      var forceCreation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      if (!tags) return [];\n      return tags.reduce(function (result, tag) {\n        if (tag) {\n          result.push(_this10._getOrCreateElement(tag, forceCreation));\n        }\n        return result;\n      }, []);\n    }\n    /**\n     * Retrieves a `<meta>` tag element in the current HTML document.\n     * @param attrSelector The tag attribute and value to match against, in the format\n     * `\"tag_attribute='value string'\"`.\n     * @returns The matching element, if any.\n     */\n  }, {\n    key: \"getTag\",\n    value: function getTag(attrSelector) {\n      if (!attrSelector) return null;\n      return this._doc.querySelector(\"meta[\".concat(attrSelector, \"]\")) || null;\n    }\n    /**\n     * Retrieves a set of `<meta>` tag elements in the current HTML document.\n     * @param attrSelector The tag attribute and value to match against, in the format\n     * `\"tag_attribute='value string'\"`.\n     * @returns The matching elements, if any.\n     */\n  }, {\n    key: \"getTags\",\n    value: function getTags(attrSelector) {\n      if (!attrSelector) return [];\n      var list /*NodeList*/ = this._doc.querySelectorAll(\"meta[\".concat(attrSelector, \"]\"));\n      return list ? [].slice.call(list) : [];\n    }\n    /**\n     * Modifies an existing `<meta>` tag element in the current HTML document.\n     * @param tag The tag description with which to replace the existing tag content.\n     * @param selector A tag attribute and value to match against, to identify\n     * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n     * If not supplied, matches a tag with the same `name` or `property` attribute value as the\n     * replacement tag.\n     * @return The modified element.\n     */\n  }, {\n    key: \"updateTag\",\n    value: function updateTag(tag, selector) {\n      if (!tag) return null;\n      selector = selector || this._parseSelector(tag);\n      var meta = this.getTag(selector);\n      if (meta) {\n        return this._setMetaElementAttributes(tag, meta);\n      }\n      return this._getOrCreateElement(tag, true);\n    }\n    /**\n     * Removes an existing `<meta>` tag element from the current HTML document.\n     * @param attrSelector A tag attribute and value to match against, to identify\n     * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n     */\n  }, {\n    key: \"removeTag\",\n    value: function removeTag(attrSelector) {\n      this.removeTagElement(this.getTag(attrSelector));\n    }\n    /**\n     * Removes an existing `<meta>` tag element from the current HTML document.\n     * @param meta The tag definition to match against to identify an existing tag.\n     */\n  }, {\n    key: \"removeTagElement\",\n    value: function removeTagElement(meta) {\n      if (meta) {\n        this._dom.remove(meta);\n      }\n    }\n  }, {\n    key: \"_getOrCreateElement\",\n    value: function _getOrCreateElement(meta) {\n      var _this11 = this;\n      var forceCreation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      if (!forceCreation) {\n        var selector = this._parseSelector(meta);\n        // It's allowed to have multiple elements with the same name so it's not enough to\n        // just check that element with the same name already present on the page. We also need to\n        // check if element has tag attributes\n        var elem = this.getTags(selector).filter(function (elem) {\n          return _this11._containsAttributes(meta, elem);\n        })[0];\n        if (elem !== undefined) return elem;\n      }\n      var element = this._dom.createElement('meta');\n      this._setMetaElementAttributes(meta, element);\n      var head = this._doc.getElementsByTagName('head')[0];\n      head.appendChild(element);\n      return element;\n    }\n  }, {\n    key: \"_setMetaElementAttributes\",\n    value: function _setMetaElementAttributes(tag, el) {\n      var _this12 = this;\n      Object.keys(tag).forEach(function (prop) {\n        return el.setAttribute(_this12._getMetaKeyMap(prop), tag[prop]);\n      });\n      return el;\n    }\n  }, {\n    key: \"_parseSelector\",\n    value: function _parseSelector(tag) {\n      var attr = tag.name ? 'name' : 'property';\n      return \"\".concat(attr, \"=\\\"\").concat(tag[attr], \"\\\"\");\n    }\n  }, {\n    key: \"_containsAttributes\",\n    value: function _containsAttributes(tag, elem) {\n      var _this13 = this;\n      return Object.keys(tag).every(function (key) {\n        return elem.getAttribute(_this13._getMetaKeyMap(key)) === tag[key];\n      });\n    }\n  }, {\n    key: \"_getMetaKeyMap\",\n    value: function _getMetaKeyMap(prop) {\n      return META_KEYS_MAP[prop] || prop;\n    }\n  }]);\n  return Meta;\n}();\nMeta.ɵfac = function Meta_Factory(t) {\n  return new (t || Meta)(i0.ɵɵinject(DOCUMENT));\n};\nMeta.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: Meta,\n  factory: function Meta_Factory(t) {\n    var r = null;\n    if (t) {\n      r = new t();\n    } else {\n      r = createMeta();\n    }\n    return r;\n  },\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Meta, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: createMeta,\n      deps: []\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n/**\n * Mapping for MetaDefinition properties with their correct meta attribute names\n */\nvar META_KEYS_MAP = {\n  httpEquiv: 'http-equiv'\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Factory to create Title service.\n */\nfunction createTitle() {\n  return new Title(ɵɵinject(DOCUMENT));\n}\n/**\n * A service that can be used to get and set the title of a current HTML document.\n *\n * Since an Angular application can't be bootstrapped on the entire HTML document (`<html>` tag)\n * it is not possible to bind to the `text` property of the `HTMLTitleElement` elements\n * (representing the `<title>` tag). Instead, this service can be used to set and get the current\n * title value.\n *\n * @publicApi\n */\nvar Title = /*#__PURE__*/function () {\n  function Title(_doc) {\n    _classCallCheck(this, Title);\n    this._doc = _doc;\n  }\n  /**\n   * Get the title of the current HTML document.\n   */\n  _createClass(Title, [{\n    key: \"getTitle\",\n    value: function getTitle() {\n      return this._doc.title;\n    }\n    /**\n     * Set the title of the current HTML document.\n     * @param newTitle\n     */\n  }, {\n    key: \"setTitle\",\n    value: function setTitle(newTitle) {\n      this._doc.title = newTitle || '';\n    }\n  }]);\n  return Title;\n}();\nTitle.ɵfac = function Title_Factory(t) {\n  return new (t || Title)(i0.ɵɵinject(DOCUMENT));\n};\nTitle.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: Title,\n  factory: function Title_Factory(t) {\n    var r = null;\n    if (t) {\n      r = new t();\n    } else {\n      r = createTitle();\n    }\n    return r;\n  },\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Title, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: createTitle,\n      deps: []\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CAMEL_CASE_REGEXP = /([A-Z])/g;\nvar DASH_CASE_REGEXP = /-([a-z])/g;\nfunction camelCaseToDashCase(input) {\n  return input.replace(CAMEL_CASE_REGEXP, function () {\n    for (var _len = arguments.length, m = new Array(_len), _key = 0; _key < _len; _key++) {\n      m[_key] = arguments[_key];\n    }\n    return '-' + m[1].toLowerCase();\n  });\n}\nfunction dashCaseToCamelCase(input) {\n  return input.replace(DASH_CASE_REGEXP, function () {\n    for (var _len2 = arguments.length, m = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      m[_key2] = arguments[_key2];\n    }\n    return m[1].toUpperCase();\n  });\n}\n/**\n * Exports the value under a given `name` in the global property `ng`. For example `ng.probe` if\n * `name` is `'probe'`.\n * @param name Name under which it will be exported. Keep in mind this will be a property of the\n * global `ng` object.\n * @param value The value to export.\n */\nfunction exportNgVar(name, value) {\n  if (typeof COMPILED === 'undefined' || !COMPILED) {\n    // Note: we can't export `ng` when using closure enhanced optimization as:\n    // - closure declares globals itself for minified names, which sometimes clobber our `ng` global\n    // - we can't declare a closure extern as the namespace `ng` is already used within Google\n    //   for typings for angularJS (via `goog.provide('ng....')`).\n    var ng = ɵglobal['ng'] = ɵglobal['ng'] || {};\n    ng[name] = value;\n  }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar win = typeof window !== 'undefined' && window || {};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ChangeDetectionPerfRecord = /*#__PURE__*/_createClass(function ChangeDetectionPerfRecord(msPerTick, numTicks) {\n  _classCallCheck(this, ChangeDetectionPerfRecord);\n  this.msPerTick = msPerTick;\n  this.numTicks = numTicks;\n});\n/**\n * Entry point for all Angular profiling-related debug tools. This object\n * corresponds to the `ng.profiler` in the dev console.\n */\nvar AngularProfiler = /*#__PURE__*/function () {\n  function AngularProfiler(ref) {\n    _classCallCheck(this, AngularProfiler);\n    this.appRef = ref.injector.get(ApplicationRef);\n  }\n  // tslint:disable:no-console\n  /**\n   * Exercises change detection in a loop and then prints the average amount of\n   * time in milliseconds how long a single round of change detection takes for\n   * the current state of the UI. It runs a minimum of 5 rounds for a minimum\n   * of 500 milliseconds.\n   *\n   * Optionally, a user may pass a `config` parameter containing a map of\n   * options. Supported options are:\n   *\n   * `record` (boolean) - causes the profiler to record a CPU profile while\n   * it exercises the change detector. Example:\n   *\n   * ```\n   * ng.profiler.timeChangeDetection({record: true})\n   * ```\n   */\n  _createClass(AngularProfiler, [{\n    key: \"timeChangeDetection\",\n    value: function timeChangeDetection(config) {\n      var record = config && config['record'];\n      var profileName = 'Change Detection';\n      // Profiler is not available in Android browsers without dev tools opened\n      var isProfilerAvailable = win.console.profile != null;\n      if (record && isProfilerAvailable) {\n        win.console.profile(profileName);\n      }\n      var start = performanceNow();\n      var numTicks = 0;\n      while (numTicks < 5 || performanceNow() - start < 500) {\n        this.appRef.tick();\n        numTicks++;\n      }\n      var end = performanceNow();\n      if (record && isProfilerAvailable) {\n        win.console.profileEnd(profileName);\n      }\n      var msPerTick = (end - start) / numTicks;\n      win.console.log(\"ran \".concat(numTicks, \" change detection cycles\"));\n      win.console.log(\"\".concat(msPerTick.toFixed(2), \" ms per check\"));\n      return new ChangeDetectionPerfRecord(msPerTick, numTicks);\n    }\n  }]);\n  return AngularProfiler;\n}();\nfunction performanceNow() {\n  return win.performance && win.performance.now ? win.performance.now() : new Date().getTime();\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar PROFILER_GLOBAL_NAME = 'profiler';\n/**\n * Enabled Angular debug tools that are accessible via your browser's\n * developer console.\n *\n * Usage:\n *\n * 1. Open developer console (e.g. in Chrome Ctrl + Shift + j)\n * 1. Type `ng.` (usually the console will show auto-complete suggestion)\n * 1. Try the change detection profiler `ng.profiler.timeChangeDetection()`\n *    then hit Enter.\n *\n * @publicApi\n */\nfunction enableDebugTools(ref) {\n  exportNgVar(PROFILER_GLOBAL_NAME, new AngularProfiler(ref));\n  return ref;\n}\n/**\n * Disables Angular tools.\n *\n * @publicApi\n */\nfunction disableDebugTools() {\n  exportNgVar(PROFILER_GLOBAL_NAME, null);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction escapeHtml(text) {\n  var escapedText = {\n    '&': '&a;',\n    '\"': '&q;',\n    '\\'': '&s;',\n    '<': '&l;',\n    '>': '&g;'\n  };\n  return text.replace(/[&\"'<>]/g, function (s) {\n    return escapedText[s];\n  });\n}\nfunction unescapeHtml(text) {\n  var unescapedText = {\n    '&a;': '&',\n    '&q;': '\"',\n    '&s;': '\\'',\n    '&l;': '<',\n    '&g;': '>'\n  };\n  return text.replace(/&[^;]+;/g, function (s) {\n    return unescapedText[s];\n  });\n}\n/**\n * Create a `StateKey<T>` that can be used to store value of type T with `TransferState`.\n *\n * Example:\n *\n * ```\n * const COUNTER_KEY = makeStateKey<number>('counter');\n * let value = 10;\n *\n * transferState.set(COUNTER_KEY, value);\n * ```\n *\n * @publicApi\n */\nfunction makeStateKey(key) {\n  return key;\n}\n/**\n * A key value store that is transferred from the application on the server side to the application\n * on the client side.\n *\n * The `TransferState` is available as an injectable token.\n * On the client, just inject this token using DI and use it, it will be lazily initialized.\n * On the server it's already included if `renderApplication` function is used. Otherwise, import\n * the `ServerTransferStateModule` module to make the `TransferState` available.\n *\n * The values in the store are serialized/deserialized using JSON.stringify/JSON.parse. So only\n * boolean, number, string, null and non-class objects will be serialized and deserialized in a\n * non-lossy manner.\n *\n * @publicApi\n */\nvar TransferState = /*#__PURE__*/function () {\n  function TransferState() {\n    _classCallCheck(this, TransferState);\n    this.store = {};\n    this.onSerializeCallbacks = {};\n  }\n  /**\n   * Get the value corresponding to a key. Return `defaultValue` if key is not found.\n   */\n  _createClass(TransferState, [{\n    key: \"get\",\n    value: function get(key, defaultValue) {\n      return this.store[key] !== undefined ? this.store[key] : defaultValue;\n    }\n    /**\n     * Set the value corresponding to a key.\n     */\n  }, {\n    key: \"set\",\n    value: function set(key, value) {\n      this.store[key] = value;\n    }\n    /**\n     * Remove a key from the store.\n     */\n  }, {\n    key: \"remove\",\n    value: function remove(key) {\n      delete this.store[key];\n    }\n    /**\n     * Test whether a key exists in the store.\n     */\n  }, {\n    key: \"hasKey\",\n    value: function hasKey(key) {\n      return this.store.hasOwnProperty(key);\n    }\n    /**\n     * Indicates whether the state is empty.\n     */\n  }, {\n    key: \"isEmpty\",\n    get: function get() {\n      return Object.keys(this.store).length === 0;\n    }\n    /**\n     * Register a callback to provide the value for a key when `toJson` is called.\n     */\n  }, {\n    key: \"onSerialize\",\n    value: function onSerialize(key, callback) {\n      this.onSerializeCallbacks[key] = callback;\n    }\n    /**\n     * Serialize the current state of the store to JSON.\n     */\n  }, {\n    key: \"toJson\",\n    value: function toJson() {\n      // Call the onSerialize callbacks and put those values into the store.\n      for (var key in this.onSerializeCallbacks) {\n        if (this.onSerializeCallbacks.hasOwnProperty(key)) {\n          try {\n            this.store[key] = this.onSerializeCallbacks[key]();\n          } catch (e) {\n            console.warn('Exception in onSerialize callback: ', e);\n          }\n        }\n      }\n      return JSON.stringify(this.store);\n    }\n  }]);\n  return TransferState;\n}();\nTransferState.ɵfac = function TransferState_Factory(t) {\n  return new (t || TransferState)();\n};\nTransferState.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: TransferState,\n  factory: function factory() {\n    return function () {\n      var doc = inject(DOCUMENT);\n      var appId = inject(APP_ID);\n      var state = new TransferState();\n      state.store = retrieveTransferredState(doc, appId);\n      return state;\n    }();\n  },\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TransferState, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: function useFactory() {\n        var doc = inject(DOCUMENT);\n        var appId = inject(APP_ID);\n        var state = new TransferState();\n        state.store = retrieveTransferredState(doc, appId);\n        return state;\n      }\n    }]\n  }], null, null);\n})();\nfunction retrieveTransferredState(doc, appId) {\n  // Locate the script tag with the JSON data transferred from the server.\n  // The id of the script tag is set to the Angular appId + 'state'.\n  var script = doc.getElementById(appId + '-state');\n  var initialState = {};\n  if (script && script.textContent) {\n    try {\n      // Avoid using any here as it triggers lint errors in google3 (any is not allowed).\n      initialState = JSON.parse(unescapeHtml(script.textContent));\n    } catch (e) {\n      console.warn('Exception while restoring TransferState for app ' + appId, e);\n    }\n  }\n  return initialState;\n}\n/**\n * NgModule to install on the client side while using the `TransferState` to transfer state from\n * server to client.\n *\n * @publicApi\n * @deprecated no longer needed, you can inject the `TransferState` in an app without providing\n *     this module.\n */\nvar BrowserTransferStateModule = /*#__PURE__*/_createClass(function BrowserTransferStateModule() {\n  _classCallCheck(this, BrowserTransferStateModule);\n});\nBrowserTransferStateModule.ɵfac = function BrowserTransferStateModule_Factory(t) {\n  return new (t || BrowserTransferStateModule)();\n};\nBrowserTransferStateModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: BrowserTransferStateModule\n});\nBrowserTransferStateModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrowserTransferStateModule, [{\n    type: NgModule,\n    args: [{}]\n  }], null, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Predicates for use with {@link DebugElement}'s query functions.\n *\n * @publicApi\n */\nvar By = /*#__PURE__*/function () {\n  function By() {\n    _classCallCheck(this, By);\n  }\n  _createClass(By, null, [{\n    key: \"all\",\n    value:\n    /**\n     * Match all nodes.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_all'}\n     */\n    function all() {\n      return function () {\n        return true;\n      };\n    }\n    /**\n     * Match elements by the given CSS selector.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_css'}\n     */\n  }, {\n    key: \"css\",\n    value: function css(selector) {\n      return function (debugElement) {\n        return debugElement.nativeElement != null ? elementMatches(debugElement.nativeElement, selector) : false;\n      };\n    }\n    /**\n     * Match nodes that have the given directive present.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_directive'}\n     */\n  }, {\n    key: \"directive\",\n    value: function directive(type) {\n      return function (debugNode) {\n        return debugNode.providerTokens.indexOf(type) !== -1;\n      };\n    }\n  }]);\n  return By;\n}();\nfunction elementMatches(n, selector) {\n  if (ɵgetDOM().isElementNode(n)) {\n    return n.matches && n.matches(selector) || n.msMatchesSelector && n.msMatchesSelector(selector) || n.webkitMatchesSelector && n.webkitMatchesSelector(selector);\n  }\n  return false;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Supported HammerJS recognizer event names.\n */\nvar EVENT_NAMES = {\n  // pan\n  'pan': true,\n  'panstart': true,\n  'panmove': true,\n  'panend': true,\n  'pancancel': true,\n  'panleft': true,\n  'panright': true,\n  'panup': true,\n  'pandown': true,\n  // pinch\n  'pinch': true,\n  'pinchstart': true,\n  'pinchmove': true,\n  'pinchend': true,\n  'pinchcancel': true,\n  'pinchin': true,\n  'pinchout': true,\n  // press\n  'press': true,\n  'pressup': true,\n  // rotate\n  'rotate': true,\n  'rotatestart': true,\n  'rotatemove': true,\n  'rotateend': true,\n  'rotatecancel': true,\n  // swipe\n  'swipe': true,\n  'swipeleft': true,\n  'swiperight': true,\n  'swipeup': true,\n  'swipedown': true,\n  // tap\n  'tap': true,\n  'doubletap': true\n};\n/**\n * DI token for providing [HammerJS](https://hammerjs.github.io/) support to Angular.\n * @see `HammerGestureConfig`\n *\n * @ngModule HammerModule\n * @publicApi\n */\nvar HAMMER_GESTURE_CONFIG = new InjectionToken('HammerGestureConfig');\n/**\n * Injection token used to provide a {@link HammerLoader} to Angular.\n *\n * @publicApi\n */\nvar HAMMER_LOADER = new InjectionToken('HammerLoader');\n/**\n * An injectable [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n * for gesture recognition. Configures specific event recognition.\n * @publicApi\n */\nvar HammerGestureConfig = /*#__PURE__*/function () {\n  function HammerGestureConfig() {\n    _classCallCheck(this, HammerGestureConfig);\n    /**\n     * A set of supported event names for gestures to be used in Angular.\n     * Angular supports all built-in recognizers, as listed in\n     * [HammerJS documentation](https://hammerjs.github.io/).\n     */\n    this.events = [];\n    /**\n     * Maps gesture event names to a set of configuration options\n     * that specify overrides to the default values for specific properties.\n     *\n     * The key is a supported event name to be configured,\n     * and the options object contains a set of properties, with override values\n     * to be applied to the named recognizer event.\n     * For example, to disable recognition of the rotate event, specify\n     *  `{\"rotate\": {\"enable\": false}}`.\n     *\n     * Properties that are not present take the HammerJS default values.\n     * For information about which properties are supported for which events,\n     * and their allowed and default values, see\n     * [HammerJS documentation](https://hammerjs.github.io/).\n     *\n     */\n    this.overrides = {};\n  }\n  /**\n   * Creates a [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n   * and attaches it to a given HTML element.\n   * @param element The element that will recognize gestures.\n   * @returns A HammerJS event-manager object.\n   */\n  _createClass(HammerGestureConfig, [{\n    key: \"buildHammer\",\n    value: function buildHammer(element) {\n      var mc = new Hammer(element, this.options);\n      mc.get('pinch').set({\n        enable: true\n      });\n      mc.get('rotate').set({\n        enable: true\n      });\n      for (var eventName in this.overrides) {\n        mc.get(eventName).set(this.overrides[eventName]);\n      }\n      return mc;\n    }\n  }]);\n  return HammerGestureConfig;\n}();\nHammerGestureConfig.ɵfac = function HammerGestureConfig_Factory(t) {\n  return new (t || HammerGestureConfig)();\n};\nHammerGestureConfig.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: HammerGestureConfig,\n  factory: HammerGestureConfig.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HammerGestureConfig, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * Event plugin that adds Hammer support to an application.\n *\n * @ngModule HammerModule\n */\nvar HammerGesturesPlugin = /*#__PURE__*/function (_EventManagerPlugin3) {\n  _inherits(HammerGesturesPlugin, _EventManagerPlugin3);\n  var _super8 = _createSuper(HammerGesturesPlugin);\n  function HammerGesturesPlugin(doc, _config, console, loader) {\n    var _this14;\n    _classCallCheck(this, HammerGesturesPlugin);\n    _this14 = _super8.call(this, doc);\n    _this14._config = _config;\n    _this14.console = console;\n    _this14.loader = loader;\n    _this14._loaderPromise = null;\n    return _this14;\n  }\n  _createClass(HammerGesturesPlugin, [{\n    key: \"supports\",\n    value: function supports(eventName) {\n      if (!EVENT_NAMES.hasOwnProperty(eventName.toLowerCase()) && !this.isCustomEvent(eventName)) {\n        return false;\n      }\n      if (!window.Hammer && !this.loader) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n          this.console.warn(\"The \\\"\".concat(eventName, \"\\\" event cannot be bound because Hammer.JS is not \") + \"loaded and no custom loader has been specified.\");\n        }\n        return false;\n      }\n      return true;\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(element, eventName, handler) {\n      var _this15 = this;\n      var zone = this.manager.getZone();\n      eventName = eventName.toLowerCase();\n      // If Hammer is not present but a loader is specified, we defer adding the event listener\n      // until Hammer is loaded.\n      if (!window.Hammer && this.loader) {\n        this._loaderPromise = this._loaderPromise || zone.runOutsideAngular(function () {\n          return _this15.loader();\n        });\n        // This `addEventListener` method returns a function to remove the added listener.\n        // Until Hammer is loaded, the returned function needs to *cancel* the registration rather\n        // than remove anything.\n        var cancelRegistration = false;\n        var deregister = function deregister() {\n          cancelRegistration = true;\n        };\n        zone.runOutsideAngular(function () {\n          return _this15._loaderPromise.then(function () {\n            // If Hammer isn't actually loaded when the custom loader resolves, give up.\n            if (!window.Hammer) {\n              if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                _this15.console.warn(\"The custom HAMMER_LOADER completed, but Hammer.JS is not present.\");\n              }\n              deregister = function deregister() {};\n              return;\n            }\n            if (!cancelRegistration) {\n              // Now that Hammer is loaded and the listener is being loaded for real,\n              // the deregistration function changes from canceling registration to\n              // removal.\n              deregister = _this15.addEventListener(element, eventName, handler);\n            }\n          })[\"catch\"](function () {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n              _this15.console.warn(\"The \\\"\".concat(eventName, \"\\\" event cannot be bound because the custom \") + \"Hammer.JS loader failed.\");\n            }\n            deregister = function deregister() {};\n          });\n        });\n        // Return a function that *executes* `deregister` (and not `deregister` itself) so that we\n        // can change the behavior of `deregister` once the listener is added. Using a closure in\n        // this way allows us to avoid any additional data structures to track listener removal.\n        return function () {\n          deregister();\n        };\n      }\n      return zone.runOutsideAngular(function () {\n        // Creating the manager bind events, must be done outside of angular\n        var mc = _this15._config.buildHammer(element);\n        var callback = function callback(eventObj) {\n          zone.runGuarded(function () {\n            handler(eventObj);\n          });\n        };\n        mc.on(eventName, callback);\n        return function () {\n          mc.off(eventName, callback);\n          // destroy mc to prevent memory leak\n          if (typeof mc.destroy === 'function') {\n            mc.destroy();\n          }\n        };\n      });\n    }\n  }, {\n    key: \"isCustomEvent\",\n    value: function isCustomEvent(eventName) {\n      return this._config.events.indexOf(eventName) > -1;\n    }\n  }]);\n  return HammerGesturesPlugin;\n}(EventManagerPlugin);\nHammerGesturesPlugin.ɵfac = function HammerGesturesPlugin_Factory(t) {\n  return new (t || HammerGesturesPlugin)(i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(HAMMER_GESTURE_CONFIG), i0.ɵɵinject(i0.ɵConsole), i0.ɵɵinject(HAMMER_LOADER, 8));\n};\nHammerGesturesPlugin.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: HammerGesturesPlugin,\n  factory: HammerGesturesPlugin.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HammerGesturesPlugin, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: HammerGestureConfig,\n      decorators: [{\n        type: Inject,\n        args: [HAMMER_GESTURE_CONFIG]\n      }]\n    }, {\n      type: i0.ɵConsole\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [HAMMER_LOADER]\n      }]\n    }];\n  }, null);\n})();\n/**\n * Adds support for HammerJS.\n *\n * Import this module at the root of your application so that Angular can work with\n * HammerJS to detect gesture events.\n *\n * Note that applications still need to include the HammerJS script itself. This module\n * simply sets up the coordination layer between HammerJS and Angular's EventManager.\n *\n * @publicApi\n */\nvar HammerModule = /*#__PURE__*/_createClass(function HammerModule() {\n  _classCallCheck(this, HammerModule);\n});\nHammerModule.ɵfac = function HammerModule_Factory(t) {\n  return new (t || HammerModule)();\n};\nHammerModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: HammerModule\n});\nHammerModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [{\n    provide: EVENT_MANAGER_PLUGINS,\n    useClass: HammerGesturesPlugin,\n    multi: true,\n    deps: [DOCUMENT, HAMMER_GESTURE_CONFIG, ɵConsole, [new Optional(), HAMMER_LOADER]]\n  }, {\n    provide: HAMMER_GESTURE_CONFIG,\n    useClass: HammerGestureConfig,\n    deps: []\n  }]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HammerModule, [{\n    type: NgModule,\n    args: [{\n      providers: [{\n        provide: EVENT_MANAGER_PLUGINS,\n        useClass: HammerGesturesPlugin,\n        multi: true,\n        deps: [DOCUMENT, HAMMER_GESTURE_CONFIG, ɵConsole, [new Optional(), HAMMER_LOADER]]\n      }, {\n        provide: HAMMER_GESTURE_CONFIG,\n        useClass: HammerGestureConfig,\n        deps: []\n      }]\n    }]\n  }], null, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * DomSanitizer helps preventing Cross Site Scripting Security bugs (XSS) by sanitizing\n * values to be safe to use in the different DOM contexts.\n *\n * For example, when binding a URL in an `<a [href]=\"someValue\">` hyperlink, `someValue` will be\n * sanitized so that an attacker cannot inject e.g. a `javascript:` URL that would execute code on\n * the website.\n *\n * In specific situations, it might be necessary to disable sanitization, for example if the\n * application genuinely needs to produce a `javascript:` style link with a dynamic value in it.\n * Users can bypass security by constructing a value with one of the `bypassSecurityTrust...`\n * methods, and then binding to that value from the template.\n *\n * These situations should be very rare, and extraordinary care must be taken to avoid creating a\n * Cross Site Scripting (XSS) security bug!\n *\n * When using `bypassSecurityTrust...`, make sure to call the method as early as possible and as\n * close as possible to the source of the value, to make it easy to verify no security bug is\n * created by its use.\n *\n * It is not required (and not recommended) to bypass security if the value is safe, e.g. a URL that\n * does not start with a suspicious protocol, or an HTML snippet that does not contain dangerous\n * code. The sanitizer leaves safe values intact.\n *\n * @security Calling any of the `bypassSecurityTrust...` APIs disables Angular's built-in\n * sanitization for the value passed in. Carefully check and audit all values and code paths going\n * into this call. Make sure any user data is appropriately escaped for this security context.\n * For more detail, see the [Security Guide](https://g.co/ng/security).\n *\n * @publicApi\n */\nvar DomSanitizer = /*#__PURE__*/_createClass(function DomSanitizer() {\n  _classCallCheck(this, DomSanitizer);\n});\nDomSanitizer.ɵfac = function DomSanitizer_Factory(t) {\n  return new (t || DomSanitizer)();\n};\nDomSanitizer.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: DomSanitizer,\n  factory: function DomSanitizer_Factory(t) {\n    var r = null;\n    if (t) {\n      r = new (t || DomSanitizer)();\n    } else {\n      r = i0.ɵɵinject(DomSanitizerImpl);\n    }\n    return r;\n  },\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DomSanitizer, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useExisting: forwardRef(function () {\n        return DomSanitizerImpl;\n      })\n    }]\n  }], null, null);\n})();\nfunction domSanitizerImplFactory(injector) {\n  return new DomSanitizerImpl(injector.get(DOCUMENT));\n}\nvar DomSanitizerImpl = /*#__PURE__*/function (_DomSanitizer) {\n  _inherits(DomSanitizerImpl, _DomSanitizer);\n  var _super9 = _createSuper(DomSanitizerImpl);\n  function DomSanitizerImpl(_doc) {\n    var _this16;\n    _classCallCheck(this, DomSanitizerImpl);\n    _this16 = _super9.call(this);\n    _this16._doc = _doc;\n    return _this16;\n  }\n  _createClass(DomSanitizerImpl, [{\n    key: \"sanitize\",\n    value: function sanitize(ctx, value) {\n      if (value == null) return null;\n      switch (ctx) {\n        case SecurityContext.NONE:\n          return value;\n        case SecurityContext.HTML:\n          if (ɵallowSanitizationBypassAndThrow(value, \"HTML\" /* BypassType.Html */)) {\n            return ɵunwrapSafeValue(value);\n          }\n          return ɵ_sanitizeHtml(this._doc, String(value)).toString();\n        case SecurityContext.STYLE:\n          if (ɵallowSanitizationBypassAndThrow(value, \"Style\" /* BypassType.Style */)) {\n            return ɵunwrapSafeValue(value);\n          }\n          return value;\n        case SecurityContext.SCRIPT:\n          if (ɵallowSanitizationBypassAndThrow(value, \"Script\" /* BypassType.Script */)) {\n            return ɵunwrapSafeValue(value);\n          }\n          throw new Error('unsafe value used in a script context');\n        case SecurityContext.URL:\n          if (ɵallowSanitizationBypassAndThrow(value, \"URL\" /* BypassType.Url */)) {\n            return ɵunwrapSafeValue(value);\n          }\n          return ɵ_sanitizeUrl(String(value));\n        case SecurityContext.RESOURCE_URL:\n          if (ɵallowSanitizationBypassAndThrow(value, \"ResourceURL\" /* BypassType.ResourceUrl */)) {\n            return ɵunwrapSafeValue(value);\n          }\n          throw new Error(\"unsafe value used in a resource URL context (see \".concat(ɵXSS_SECURITY_URL, \")\"));\n        default:\n          throw new Error(\"Unexpected SecurityContext \".concat(ctx, \" (see \").concat(ɵXSS_SECURITY_URL, \")\"));\n      }\n    }\n  }, {\n    key: \"bypassSecurityTrustHtml\",\n    value: function bypassSecurityTrustHtml(value) {\n      return ɵbypassSanitizationTrustHtml(value);\n    }\n  }, {\n    key: \"bypassSecurityTrustStyle\",\n    value: function bypassSecurityTrustStyle(value) {\n      return ɵbypassSanitizationTrustStyle(value);\n    }\n  }, {\n    key: \"bypassSecurityTrustScript\",\n    value: function bypassSecurityTrustScript(value) {\n      return ɵbypassSanitizationTrustScript(value);\n    }\n  }, {\n    key: \"bypassSecurityTrustUrl\",\n    value: function bypassSecurityTrustUrl(value) {\n      return ɵbypassSanitizationTrustUrl(value);\n    }\n  }, {\n    key: \"bypassSecurityTrustResourceUrl\",\n    value: function bypassSecurityTrustResourceUrl(value) {\n      return ɵbypassSanitizationTrustResourceUrl(value);\n    }\n  }]);\n  return DomSanitizerImpl;\n}(DomSanitizer);\nDomSanitizerImpl.ɵfac = function DomSanitizerImpl_Factory(t) {\n  return new (t || DomSanitizerImpl)(i0.ɵɵinject(DOCUMENT));\n};\nDomSanitizerImpl.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: DomSanitizerImpl,\n  factory: function DomSanitizerImpl_Factory(t) {\n    var r = null;\n    if (t) {\n      r = new t();\n    } else {\n      r = domSanitizerImplFactory(i0.ɵɵinject(Injector));\n    }\n    return r;\n  },\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DomSanitizerImpl, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: domSanitizerImplFactory,\n      deps: [Injector]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @publicApi\n */\nvar VERSION = new Version('15.0.3');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BrowserModule, BrowserTransferStateModule, By, DomSanitizer, EVENT_MANAGER_PLUGINS, EventManager, HAMMER_GESTURE_CONFIG, HAMMER_LOADER, HammerGestureConfig, HammerModule, Meta, Title, TransferState, VERSION, bootstrapApplication, createApplication, disableDebugTools, enableDebugTools, makeStateKey, platformBrowser, provideProtractorTestingSupport, BrowserDomAdapter as ɵBrowserDomAdapter, BrowserGetTestability as ɵBrowserGetTestability, DomEventsPlugin as ɵDomEventsPlugin, DomRendererFactory2 as ɵDomRendererFactory2, DomSanitizerImpl as ɵDomSanitizerImpl, DomSharedStylesHost as ɵDomSharedStylesHost, HammerGesturesPlugin as ɵHammerGesturesPlugin, INTERNAL_BROWSER_PLATFORM_PROVIDERS as ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS, KeyEventsPlugin as ɵKeyEventsPlugin, NAMESPACE_URIS as ɵNAMESPACE_URIS, SharedStylesHost as ɵSharedStylesHost, TRANSITION_ID as ɵTRANSITION_ID, escapeHtml as ɵescapeHtml, flattenStyles as ɵflattenStyles, initDomAdapter as ɵinitDomAdapter, shimContentAttribute as ɵshimContentAttribute, shimHostAttribute as ɵshimHostAttribute };","map":{"version":3,"names":["ɵDomAdapter","ɵsetRootDomAdapter","ɵparseCookieValue","ɵgetDOM","DOCUMENT","ɵPLATFORM_BROWSER_ID","XhrFactory","CommonModule","i0","InjectionToken","ApplicationInitStatus","APP_INITIALIZER","Injector","ɵglobal","Injectable","Inject","ViewEncapsulation","APP_ID","RendererStyleFlags2","ɵinternalCreateApplication","ErrorHandler","ɵsetDocument","PLATFORM_ID","PLATFORM_INITIALIZER","createPlatformFactory","platformCore","ɵTESTABILITY_GETTER","ɵTESTABILITY","Testability","NgZone","TestabilityRegistry","ɵINJECTOR_SCOPE","RendererFactory2","ApplicationModule","NgModule","Optional","SkipSelf","ɵɵinject","ApplicationRef","inject","ɵConsole","forwardRef","ɵXSS_SECURITY_URL","SecurityContext","ɵallowSanitizationBypassAndThrow","ɵunwrapSafeValue","ɵ_sanitizeUrl","ɵ_sanitizeHtml","ɵbypassSanitizationTrustHtml","ɵbypassSanitizationTrustStyle","ɵbypassSanitizationTrustScript","ɵbypassSanitizationTrustUrl","ɵbypassSanitizationTrustResourceUrl","Version","GenericBrowserDomAdapter","arguments","supportsDOMEvents","BrowserDomAdapter","el","evt","listener","addEventListener","removeEventListener","dispatchEvent","node","parentNode","removeChild","tagName","doc","getDefaultDocument","createElement","document","implementation","createHTMLDocument","nodeType","Node","ELEMENT_NODE","DocumentFragment","target","window","body","href","getBaseElementHref","relativePath","baseElement","navigator","userAgent","name","cookie","querySelector","getAttribute","urlParsingNode","url","setAttribute","pathName","pathname","charAt","TRANSITION_ID","appInitializerFactory","transitionId","injector","get","donePromise","then","dom","styles","querySelectorAll","i","length","remove","SERVER_TRANSITION_PROVIDERS","provide","useFactory","deps","multi","BrowserGetTestability","registry","elem","findInAncestors","testability","findTestabilityInTree","Error","getAllTestabilities","getAllRootElements","whenAllStable","callback","testabilities","count","didWork","decrement","didWork_","forEach","whenStable","push","t","getTestability","isShadowRoot","host","parentElement","BrowserXhr","XMLHttpRequest","ɵfac","ɵprov","type","EVENT_MANAGER_PLUGINS","EventManager","plugins","_zone","_eventNameToPlugin","Map","p","manager","_plugins","slice","reverse","element","eventName","handler","plugin","_findPluginFor","addGlobalEventListener","supports","set","undefined","decorators","args","EventManagerPlugin","_doc","getGlobalEventTarget","SharedStylesHost","_stylesSet","Set","additions","style","has","add","onStylesAdded","Array","from","DomSharedStylesHost","_hostNodes","head","styleNodes","styleEl","textContent","appendChild","hostNode","_addStylesToHost","removeStyle","styleNode","NAMESPACE_URIS","COMPONENT_REGEX","NG_DEV_MODE$1","ngDevMode","COMPONENT_VARIABLE","HOST_ATTR","CONTENT_ATTR","shimContentAttribute","componentShortId","replace","shimHostAttribute","flattenStyles","compId","flat","map","s","decoratePreventDefault","eventHandler","event","allowDefaultBehavior","preventDefault","returnValue","hasLoggedNativeEncapsulationWarning","DomRendererFactory2","eventManager","sharedStylesHost","appId","rendererByCompId","defaultRenderer","DefaultDomRenderer2","encapsulation","Emulated","renderer","id","EmulatedEncapsulationDomRenderer2","applyToHost","ShadowDom","console","warn","ShadowDomRenderer","addStyles","data","Object","create","destroyNode","namespace","createElementNS","value","createComment","createTextNode","parent","newChild","targetParent","isTemplateNode","content","refChild","insertBefore","oldChild","selectorOrNode","preserveContent","nextSibling","namespaceUri","setAttributeNS","removeAttributeNS","removeAttribute","classList","flags","DashCase","Important","setProperty","removeProperty","checkNoSyntheticProp","nodeValue","AT_CHARCODE","charCodeAt","nameKind","component","contentAttr","hostAttr","hostEl","shadowRoot","attachShadow","mode","addHost","removeHost","nodeOrShadowRoot","DomEventsPlugin","MODIFIER_KEYS","_keyMap","MODIFIER_KEY_GETTERS","altKey","ctrlKey","metaKey","shiftKey","KeyEventsPlugin","parseEventName","parsedEvent","outsideHandler","eventCallback","getZone","runOutsideAngular","onAndCancel","parts","toLowerCase","split","domEventName","shift","key","_normalizeKey","pop","fullKey","codeIX","indexOf","splice","modifierName","index","result","fullKeyCode","keycode","code","modifierGetter","zone","matchEventFullKeyCode","runGuarded","keyName","NG_DEV_MODE","bootstrapApplication","rootComponent","options","createProvidersConfig","createApplication","appProviders","BROWSER_MODULE_PROVIDERS","providers","platformProviders","INTERNAL_BROWSER_PLATFORM_PROVIDERS","provideProtractorTestingSupport","TESTABILITY_PROVIDERS","initDomAdapter","makeCurrent","errorHandler","_document","useValue","platformBrowser","BROWSER_MODULE_PROVIDERS_MARKER","useClass","useExisting","BrowserModule","providersAlreadyPresent","params","ngModule","ɵmod","ɵinj","exports","createMeta","Meta","_dom","tag","forceCreation","_getOrCreateElement","tags","reduce","attrSelector","list","call","selector","_parseSelector","meta","getTag","_setMetaElementAttributes","removeTagElement","getTags","filter","_containsAttributes","getElementsByTagName","keys","prop","_getMetaKeyMap","attr","every","META_KEYS_MAP","providedIn","httpEquiv","createTitle","Title","title","newTitle","CAMEL_CASE_REGEXP","DASH_CASE_REGEXP","camelCaseToDashCase","input","m","dashCaseToCamelCase","toUpperCase","exportNgVar","COMPILED","ng","win","ChangeDetectionPerfRecord","msPerTick","numTicks","AngularProfiler","ref","appRef","config","record","profileName","isProfilerAvailable","profile","start","performanceNow","tick","end","profileEnd","log","toFixed","performance","now","Date","getTime","PROFILER_GLOBAL_NAME","enableDebugTools","disableDebugTools","escapeHtml","text","escapedText","unescapeHtml","unescapedText","makeStateKey","TransferState","store","onSerializeCallbacks","defaultValue","hasOwnProperty","e","JSON","stringify","state","retrieveTransferredState","script","getElementById","initialState","parse","BrowserTransferStateModule","By","debugElement","nativeElement","elementMatches","debugNode","providerTokens","n","isElementNode","matches","msMatchesSelector","webkitMatchesSelector","EVENT_NAMES","HAMMER_GESTURE_CONFIG","HAMMER_LOADER","HammerGestureConfig","events","overrides","mc","Hammer","enable","HammerGesturesPlugin","_config","loader","_loaderPromise","isCustomEvent","cancelRegistration","deregister","buildHammer","eventObj","on","off","destroy","HammerModule","DomSanitizer","DomSanitizerImpl","domSanitizerImplFactory","ctx","NONE","HTML","String","toString","STYLE","SCRIPT","URL","RESOURCE_URL","VERSION","ɵBrowserDomAdapter","ɵBrowserGetTestability","ɵDomEventsPlugin","ɵDomRendererFactory2","ɵDomSanitizerImpl","ɵDomSharedStylesHost","ɵHammerGesturesPlugin","ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS","ɵKeyEventsPlugin","ɵNAMESPACE_URIS","ɵSharedStylesHost","ɵTRANSITION_ID","ɵescapeHtml","ɵflattenStyles","ɵinitDomAdapter","ɵshimContentAttribute","ɵshimHostAttribute"],"sources":["C:/Users/User/Projects/meanstack/node_modules/@angular/platform-browser/fesm2020/platform-browser.mjs"],"sourcesContent":["/**\n * @license Angular v15.0.3\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { ɵDomAdapter, ɵsetRootDomAdapter, ɵparseCookieValue, ɵgetDOM, DOCUMENT, ɵPLATFORM_BROWSER_ID, XhrFactory, CommonModule } from '@angular/common';\nexport { ɵgetDOM } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, ApplicationInitStatus, APP_INITIALIZER, Injector, ɵglobal, Injectable, Inject, ViewEncapsulation, APP_ID, RendererStyleFlags2, ɵinternalCreateApplication, ErrorHandler, ɵsetDocument, PLATFORM_ID, PLATFORM_INITIALIZER, createPlatformFactory, platformCore, ɵTESTABILITY_GETTER, ɵTESTABILITY, Testability, NgZone, TestabilityRegistry, ɵINJECTOR_SCOPE, RendererFactory2, ApplicationModule, NgModule, Optional, SkipSelf, ɵɵinject, ApplicationRef, inject, ɵConsole, forwardRef, ɵXSS_SECURITY_URL, SecurityContext, ɵallowSanitizationBypassAndThrow, ɵunwrapSafeValue, ɵ_sanitizeUrl, ɵ_sanitizeHtml, ɵbypassSanitizationTrustHtml, ɵbypassSanitizationTrustStyle, ɵbypassSanitizationTrustScript, ɵbypassSanitizationTrustUrl, ɵbypassSanitizationTrustResourceUrl, Version } from '@angular/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides DOM operations in any browser environment.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\nclass GenericBrowserDomAdapter extends ɵDomAdapter {\n    constructor() {\n        super(...arguments);\n        this.supportsDOMEvents = true;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A `DomAdapter` powered by full browser DOM APIs.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\n/* tslint:disable:requireParameterType no-console */\nclass BrowserDomAdapter extends GenericBrowserDomAdapter {\n    static makeCurrent() {\n        ɵsetRootDomAdapter(new BrowserDomAdapter());\n    }\n    onAndCancel(el, evt, listener) {\n        el.addEventListener(evt, listener, false);\n        // Needed to follow Dart's subscription semantic, until fix of\n        // https://code.google.com/p/dart/issues/detail?id=17406\n        return () => {\n            el.removeEventListener(evt, listener, false);\n        };\n    }\n    dispatchEvent(el, evt) {\n        el.dispatchEvent(evt);\n    }\n    remove(node) {\n        if (node.parentNode) {\n            node.parentNode.removeChild(node);\n        }\n    }\n    createElement(tagName, doc) {\n        doc = doc || this.getDefaultDocument();\n        return doc.createElement(tagName);\n    }\n    createHtmlDocument() {\n        return document.implementation.createHTMLDocument('fakeTitle');\n    }\n    getDefaultDocument() {\n        return document;\n    }\n    isElementNode(node) {\n        return node.nodeType === Node.ELEMENT_NODE;\n    }\n    isShadowRoot(node) {\n        return node instanceof DocumentFragment;\n    }\n    /** @deprecated No longer being used in Ivy code. To be removed in version 14. */\n    getGlobalEventTarget(doc, target) {\n        if (target === 'window') {\n            return window;\n        }\n        if (target === 'document') {\n            return doc;\n        }\n        if (target === 'body') {\n            return doc.body;\n        }\n        return null;\n    }\n    getBaseHref(doc) {\n        const href = getBaseElementHref();\n        return href == null ? null : relativePath(href);\n    }\n    resetBaseElement() {\n        baseElement = null;\n    }\n    getUserAgent() {\n        return window.navigator.userAgent;\n    }\n    getCookie(name) {\n        return ɵparseCookieValue(document.cookie, name);\n    }\n}\nlet baseElement = null;\nfunction getBaseElementHref() {\n    baseElement = baseElement || document.querySelector('base');\n    return baseElement ? baseElement.getAttribute('href') : null;\n}\n// based on urlUtils.js in AngularJS 1\nlet urlParsingNode;\nfunction relativePath(url) {\n    urlParsingNode = urlParsingNode || document.createElement('a');\n    urlParsingNode.setAttribute('href', url);\n    const pathName = urlParsingNode.pathname;\n    return pathName.charAt(0) === '/' ? pathName : `/${pathName}`;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An id that identifies a particular application being bootstrapped, that should\n * match across the client/server boundary.\n */\nconst TRANSITION_ID = new InjectionToken('TRANSITION_ID');\nfunction appInitializerFactory(transitionId, document, injector) {\n    return () => {\n        // Wait for all application initializers to be completed before removing the styles set by\n        // the server.\n        injector.get(ApplicationInitStatus).donePromise.then(() => {\n            const dom = ɵgetDOM();\n            const styles = document.querySelectorAll(`style[ng-transition=\"${transitionId}\"]`);\n            for (let i = 0; i < styles.length; i++) {\n                dom.remove(styles[i]);\n            }\n        });\n    };\n}\nconst SERVER_TRANSITION_PROVIDERS = [\n    {\n        provide: APP_INITIALIZER,\n        useFactory: appInitializerFactory,\n        deps: [TRANSITION_ID, DOCUMENT, Injector],\n        multi: true\n    },\n];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass BrowserGetTestability {\n    addToWindow(registry) {\n        ɵglobal['getAngularTestability'] = (elem, findInAncestors = true) => {\n            const testability = registry.findTestabilityInTree(elem, findInAncestors);\n            if (testability == null) {\n                throw new Error('Could not find testability for element.');\n            }\n            return testability;\n        };\n        ɵglobal['getAllAngularTestabilities'] = () => registry.getAllTestabilities();\n        ɵglobal['getAllAngularRootElements'] = () => registry.getAllRootElements();\n        const whenAllStable = (callback /** TODO #9100 */) => {\n            const testabilities = ɵglobal['getAllAngularTestabilities']();\n            let count = testabilities.length;\n            let didWork = false;\n            const decrement = function (didWork_ /** TODO #9100 */) {\n                didWork = didWork || didWork_;\n                count--;\n                if (count == 0) {\n                    callback(didWork);\n                }\n            };\n            testabilities.forEach(function (testability /** TODO #9100 */) {\n                testability.whenStable(decrement);\n            });\n        };\n        if (!ɵglobal['frameworkStabilizers']) {\n            ɵglobal['frameworkStabilizers'] = [];\n        }\n        ɵglobal['frameworkStabilizers'].push(whenAllStable);\n    }\n    findTestabilityInTree(registry, elem, findInAncestors) {\n        if (elem == null) {\n            return null;\n        }\n        const t = registry.getTestability(elem);\n        if (t != null) {\n            return t;\n        }\n        else if (!findInAncestors) {\n            return null;\n        }\n        if (ɵgetDOM().isShadowRoot(elem)) {\n            return this.findTestabilityInTree(registry, elem.host, true);\n        }\n        return this.findTestabilityInTree(registry, elem.parentElement, true);\n    }\n}\n\n/**\n * A factory for `HttpXhrBackend` that uses the `XMLHttpRequest` browser API.\n */\nclass BrowserXhr {\n    build() {\n        return new XMLHttpRequest();\n    }\n}\nBrowserXhr.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: BrowserXhr, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nBrowserXhr.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: BrowserXhr });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: BrowserXhr, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The injection token for the event-manager plug-in service.\n *\n * @publicApi\n */\nconst EVENT_MANAGER_PLUGINS = new InjectionToken('EventManagerPlugins');\n/**\n * An injectable service that provides event management for Angular\n * through a browser plug-in.\n *\n * @publicApi\n */\nclass EventManager {\n    /**\n     * Initializes an instance of the event-manager service.\n     */\n    constructor(plugins, _zone) {\n        this._zone = _zone;\n        this._eventNameToPlugin = new Map();\n        plugins.forEach(p => p.manager = this);\n        this._plugins = plugins.slice().reverse();\n    }\n    /**\n     * Registers a handler for a specific element and event.\n     *\n     * @param element The HTML element to receive event notifications.\n     * @param eventName The name of the event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @returns  A callback function that can be used to remove the handler.\n     */\n    addEventListener(element, eventName, handler) {\n        const plugin = this._findPluginFor(eventName);\n        return plugin.addEventListener(element, eventName, handler);\n    }\n    /**\n     * Registers a global handler for an event in a target view.\n     *\n     * @param target A target for global event notifications. One of \"window\", \"document\", or \"body\".\n     * @param eventName The name of the event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @returns A callback function that can be used to remove the handler.\n     * @deprecated No longer being used in Ivy code. To be removed in version 14.\n     */\n    addGlobalEventListener(target, eventName, handler) {\n        const plugin = this._findPluginFor(eventName);\n        return plugin.addGlobalEventListener(target, eventName, handler);\n    }\n    /**\n     * Retrieves the compilation zone in which event listeners are registered.\n     */\n    getZone() {\n        return this._zone;\n    }\n    /** @internal */\n    _findPluginFor(eventName) {\n        const plugin = this._eventNameToPlugin.get(eventName);\n        if (plugin) {\n            return plugin;\n        }\n        const plugins = this._plugins;\n        for (let i = 0; i < plugins.length; i++) {\n            const plugin = plugins[i];\n            if (plugin.supports(eventName)) {\n                this._eventNameToPlugin.set(eventName, plugin);\n                return plugin;\n            }\n        }\n        throw new Error(`No event manager plugin found for event ${eventName}`);\n    }\n}\nEventManager.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: EventManager, deps: [{ token: EVENT_MANAGER_PLUGINS }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable });\nEventManager.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: EventManager });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: EventManager, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [EVENT_MANAGER_PLUGINS]\n                }] }, { type: i0.NgZone }]; } });\nclass EventManagerPlugin {\n    constructor(_doc) {\n        this._doc = _doc;\n    }\n    addGlobalEventListener(element, eventName, handler) {\n        const target = ɵgetDOM().getGlobalEventTarget(this._doc, element);\n        if (!target) {\n            throw new Error(`Unsupported event target ${target} for event ${eventName}`);\n        }\n        return this.addEventListener(target, eventName, handler);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass SharedStylesHost {\n    constructor() {\n        /** @internal */\n        this._stylesSet = new Set();\n    }\n    addStyles(styles) {\n        const additions = new Set();\n        styles.forEach(style => {\n            if (!this._stylesSet.has(style)) {\n                this._stylesSet.add(style);\n                additions.add(style);\n            }\n        });\n        this.onStylesAdded(additions);\n    }\n    onStylesAdded(additions) { }\n    getAllStyles() {\n        return Array.from(this._stylesSet);\n    }\n}\nSharedStylesHost.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: SharedStylesHost, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nSharedStylesHost.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: SharedStylesHost });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: SharedStylesHost, decorators: [{\n            type: Injectable\n        }] });\nclass DomSharedStylesHost extends SharedStylesHost {\n    constructor(_doc) {\n        super();\n        this._doc = _doc;\n        // Maps all registered host nodes to a list of style nodes that have been added to the host node.\n        this._hostNodes = new Map();\n        this._hostNodes.set(_doc.head, []);\n    }\n    _addStylesToHost(styles, host, styleNodes) {\n        styles.forEach((style) => {\n            const styleEl = this._doc.createElement('style');\n            styleEl.textContent = style;\n            styleNodes.push(host.appendChild(styleEl));\n        });\n    }\n    addHost(hostNode) {\n        const styleNodes = [];\n        this._addStylesToHost(this._stylesSet, hostNode, styleNodes);\n        this._hostNodes.set(hostNode, styleNodes);\n    }\n    removeHost(hostNode) {\n        const styleNodes = this._hostNodes.get(hostNode);\n        if (styleNodes) {\n            styleNodes.forEach(removeStyle);\n        }\n        this._hostNodes.delete(hostNode);\n    }\n    onStylesAdded(additions) {\n        this._hostNodes.forEach((styleNodes, hostNode) => {\n            this._addStylesToHost(additions, hostNode, styleNodes);\n        });\n    }\n    ngOnDestroy() {\n        this._hostNodes.forEach(styleNodes => styleNodes.forEach(removeStyle));\n    }\n}\nDomSharedStylesHost.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: DomSharedStylesHost, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nDomSharedStylesHost.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: DomSharedStylesHost });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: DomSharedStylesHost, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\nfunction removeStyle(styleNode) {\n    ɵgetDOM().remove(styleNode);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst NAMESPACE_URIS = {\n    'svg': 'http://www.w3.org/2000/svg',\n    'xhtml': 'http://www.w3.org/1999/xhtml',\n    'xlink': 'http://www.w3.org/1999/xlink',\n    'xml': 'http://www.w3.org/XML/1998/namespace',\n    'xmlns': 'http://www.w3.org/2000/xmlns/',\n    'math': 'http://www.w3.org/1998/MathML/',\n};\nconst COMPONENT_REGEX = /%COMP%/g;\nconst NG_DEV_MODE$1 = typeof ngDevMode === 'undefined' || !!ngDevMode;\nconst COMPONENT_VARIABLE = '%COMP%';\nconst HOST_ATTR = `_nghost-${COMPONENT_VARIABLE}`;\nconst CONTENT_ATTR = `_ngcontent-${COMPONENT_VARIABLE}`;\nfunction shimContentAttribute(componentShortId) {\n    return CONTENT_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\nfunction shimHostAttribute(componentShortId) {\n    return HOST_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\nfunction flattenStyles(compId, styles) {\n    // Cannot use `Infinity` as depth as `infinity` is not a number literal in TypeScript.\n    // See: https://github.com/microsoft/TypeScript/issues/32277\n    return styles.flat(100).map(s => s.replace(COMPONENT_REGEX, compId));\n}\nfunction decoratePreventDefault(eventHandler) {\n    // `DebugNode.triggerEventHandler` needs to know if the listener was created with\n    // decoratePreventDefault or is a listener added outside the Angular context so it can handle the\n    // two differently. In the first case, the special '__ngUnwrap__' token is passed to the unwrap\n    // the listener (see below).\n    return (event) => {\n        // Ivy uses '__ngUnwrap__' as a special token that allows us to unwrap the function\n        // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`. The debug_node\n        // can inspect the listener toString contents for the existence of this special token. Because\n        // the token is a string literal, it is ensured to not be modified by compiled code.\n        if (event === '__ngUnwrap__') {\n            return eventHandler;\n        }\n        const allowDefaultBehavior = eventHandler(event);\n        if (allowDefaultBehavior === false) {\n            // TODO(tbosch): move preventDefault into event plugins...\n            event.preventDefault();\n            event.returnValue = false;\n        }\n        return undefined;\n    };\n}\nlet hasLoggedNativeEncapsulationWarning = false;\nclass DomRendererFactory2 {\n    constructor(eventManager, sharedStylesHost, appId) {\n        this.eventManager = eventManager;\n        this.sharedStylesHost = sharedStylesHost;\n        this.appId = appId;\n        this.rendererByCompId = new Map();\n        this.defaultRenderer = new DefaultDomRenderer2(eventManager);\n    }\n    createRenderer(element, type) {\n        if (!element || !type) {\n            return this.defaultRenderer;\n        }\n        switch (type.encapsulation) {\n            case ViewEncapsulation.Emulated: {\n                let renderer = this.rendererByCompId.get(type.id);\n                if (!renderer) {\n                    renderer = new EmulatedEncapsulationDomRenderer2(this.eventManager, this.sharedStylesHost, type, this.appId);\n                    this.rendererByCompId.set(type.id, renderer);\n                }\n                renderer.applyToHost(element);\n                return renderer;\n            }\n            // @ts-ignore TODO: Remove as part of FW-2290. TS complains about us dealing with an enum\n            // value that is not known (but previously was the value for ViewEncapsulation.Native)\n            case 1:\n            case ViewEncapsulation.ShadowDom:\n                // TODO(FW-2290): remove the `case 1:` fallback logic and the warning in v12.\n                if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n                    // @ts-ignore TODO: Remove as part of FW-2290. TS complains about us dealing with an\n                    // enum value that is not known (but previously was the value for\n                    // ViewEncapsulation.Native)\n                    !hasLoggedNativeEncapsulationWarning && type.encapsulation === 1) {\n                    hasLoggedNativeEncapsulationWarning = true;\n                    console.warn('ViewEncapsulation.Native is no longer supported. Falling back to ViewEncapsulation.ShadowDom. The fallback will be removed in v12.');\n                }\n                return new ShadowDomRenderer(this.eventManager, this.sharedStylesHost, element, type);\n            default: {\n                if (!this.rendererByCompId.has(type.id)) {\n                    const styles = flattenStyles(type.id, type.styles);\n                    this.sharedStylesHost.addStyles(styles);\n                    this.rendererByCompId.set(type.id, this.defaultRenderer);\n                }\n                return this.defaultRenderer;\n            }\n        }\n    }\n    begin() { }\n    end() { }\n}\nDomRendererFactory2.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: DomRendererFactory2, deps: [{ token: EventManager }, { token: DomSharedStylesHost }, { token: APP_ID }], target: i0.ɵɵFactoryTarget.Injectable });\nDomRendererFactory2.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: DomRendererFactory2 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: DomRendererFactory2, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: EventManager }, { type: DomSharedStylesHost }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [APP_ID]\n                }] }]; } });\nclass DefaultDomRenderer2 {\n    constructor(eventManager) {\n        this.eventManager = eventManager;\n        this.data = Object.create(null);\n        this.destroyNode = null;\n    }\n    destroy() { }\n    createElement(name, namespace) {\n        if (namespace) {\n            // TODO: `|| namespace` was added in\n            // https://github.com/angular/angular/commit/2b9cc8503d48173492c29f5a271b61126104fbdb to\n            // support how Ivy passed around the namespace URI rather than short name at the time. It did\n            // not, however extend the support to other parts of the system (setAttribute, setAttribute,\n            // and the ServerRenderer). We should decide what exactly the semantics for dealing with\n            // namespaces should be and make it consistent.\n            // Related issues:\n            // https://github.com/angular/angular/issues/44028\n            // https://github.com/angular/angular/issues/44883\n            return document.createElementNS(NAMESPACE_URIS[namespace] || namespace, name);\n        }\n        return document.createElement(name);\n    }\n    createComment(value) {\n        return document.createComment(value);\n    }\n    createText(value) {\n        return document.createTextNode(value);\n    }\n    appendChild(parent, newChild) {\n        const targetParent = isTemplateNode(parent) ? parent.content : parent;\n        targetParent.appendChild(newChild);\n    }\n    insertBefore(parent, newChild, refChild) {\n        if (parent) {\n            const targetParent = isTemplateNode(parent) ? parent.content : parent;\n            targetParent.insertBefore(newChild, refChild);\n        }\n    }\n    removeChild(parent, oldChild) {\n        if (parent) {\n            parent.removeChild(oldChild);\n        }\n    }\n    selectRootElement(selectorOrNode, preserveContent) {\n        let el = typeof selectorOrNode === 'string' ? document.querySelector(selectorOrNode) :\n            selectorOrNode;\n        if (!el) {\n            throw new Error(`The selector \"${selectorOrNode}\" did not match any elements`);\n        }\n        if (!preserveContent) {\n            el.textContent = '';\n        }\n        return el;\n    }\n    parentNode(node) {\n        return node.parentNode;\n    }\n    nextSibling(node) {\n        return node.nextSibling;\n    }\n    setAttribute(el, name, value, namespace) {\n        if (namespace) {\n            name = namespace + ':' + name;\n            const namespaceUri = NAMESPACE_URIS[namespace];\n            if (namespaceUri) {\n                el.setAttributeNS(namespaceUri, name, value);\n            }\n            else {\n                el.setAttribute(name, value);\n            }\n        }\n        else {\n            el.setAttribute(name, value);\n        }\n    }\n    removeAttribute(el, name, namespace) {\n        if (namespace) {\n            const namespaceUri = NAMESPACE_URIS[namespace];\n            if (namespaceUri) {\n                el.removeAttributeNS(namespaceUri, name);\n            }\n            else {\n                el.removeAttribute(`${namespace}:${name}`);\n            }\n        }\n        else {\n            el.removeAttribute(name);\n        }\n    }\n    addClass(el, name) {\n        el.classList.add(name);\n    }\n    removeClass(el, name) {\n        el.classList.remove(name);\n    }\n    setStyle(el, style, value, flags) {\n        if (flags & (RendererStyleFlags2.DashCase | RendererStyleFlags2.Important)) {\n            el.style.setProperty(style, value, flags & RendererStyleFlags2.Important ? 'important' : '');\n        }\n        else {\n            el.style[style] = value;\n        }\n    }\n    removeStyle(el, style, flags) {\n        if (flags & RendererStyleFlags2.DashCase) {\n            el.style.removeProperty(style);\n        }\n        else {\n            // IE requires '' instead of null\n            // see https://github.com/angular/angular/issues/7916\n            el.style[style] = '';\n        }\n    }\n    setProperty(el, name, value) {\n        NG_DEV_MODE$1 && checkNoSyntheticProp(name, 'property');\n        el[name] = value;\n    }\n    setValue(node, value) {\n        node.nodeValue = value;\n    }\n    listen(target, event, callback) {\n        NG_DEV_MODE$1 && checkNoSyntheticProp(event, 'listener');\n        if (typeof target === 'string') {\n            return this.eventManager.addGlobalEventListener(target, event, decoratePreventDefault(callback));\n        }\n        return this.eventManager.addEventListener(target, event, decoratePreventDefault(callback));\n    }\n}\nconst AT_CHARCODE = (() => '@'.charCodeAt(0))();\nfunction checkNoSyntheticProp(name, nameKind) {\n    if (name.charCodeAt(0) === AT_CHARCODE) {\n        throw new Error(`Unexpected synthetic ${nameKind} ${name} found. Please make sure that:\n  - Either \\`BrowserAnimationsModule\\` or \\`NoopAnimationsModule\\` are imported in your application.\n  - There is corresponding configuration for the animation named \\`${name}\\` defined in the \\`animations\\` field of the \\`@Component\\` decorator (see https://angular.io/api/core/Component#animations).`);\n    }\n}\nfunction isTemplateNode(node) {\n    return node.tagName === 'TEMPLATE' && node.content !== undefined;\n}\nclass EmulatedEncapsulationDomRenderer2 extends DefaultDomRenderer2 {\n    constructor(eventManager, sharedStylesHost, component, appId) {\n        super(eventManager);\n        this.component = component;\n        const styles = flattenStyles(appId + '-' + component.id, component.styles);\n        sharedStylesHost.addStyles(styles);\n        this.contentAttr = shimContentAttribute(appId + '-' + component.id);\n        this.hostAttr = shimHostAttribute(appId + '-' + component.id);\n    }\n    applyToHost(element) {\n        super.setAttribute(element, this.hostAttr, '');\n    }\n    createElement(parent, name) {\n        const el = super.createElement(parent, name);\n        super.setAttribute(el, this.contentAttr, '');\n        return el;\n    }\n}\nclass ShadowDomRenderer extends DefaultDomRenderer2 {\n    constructor(eventManager, sharedStylesHost, hostEl, component) {\n        super(eventManager);\n        this.sharedStylesHost = sharedStylesHost;\n        this.hostEl = hostEl;\n        this.shadowRoot = hostEl.attachShadow({ mode: 'open' });\n        this.sharedStylesHost.addHost(this.shadowRoot);\n        const styles = flattenStyles(component.id, component.styles);\n        for (let i = 0; i < styles.length; i++) {\n            const styleEl = document.createElement('style');\n            styleEl.textContent = styles[i];\n            this.shadowRoot.appendChild(styleEl);\n        }\n    }\n    nodeOrShadowRoot(node) {\n        return node === this.hostEl ? this.shadowRoot : node;\n    }\n    destroy() {\n        this.sharedStylesHost.removeHost(this.shadowRoot);\n    }\n    appendChild(parent, newChild) {\n        return super.appendChild(this.nodeOrShadowRoot(parent), newChild);\n    }\n    insertBefore(parent, newChild, refChild) {\n        return super.insertBefore(this.nodeOrShadowRoot(parent), newChild, refChild);\n    }\n    removeChild(parent, oldChild) {\n        return super.removeChild(this.nodeOrShadowRoot(parent), oldChild);\n    }\n    parentNode(node) {\n        return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(node)));\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass DomEventsPlugin extends EventManagerPlugin {\n    constructor(doc) {\n        super(doc);\n    }\n    // This plugin should come last in the list of plugins, because it accepts all\n    // events.\n    supports(eventName) {\n        return true;\n    }\n    addEventListener(element, eventName, handler) {\n        element.addEventListener(eventName, handler, false);\n        return () => this.removeEventListener(element, eventName, handler);\n    }\n    removeEventListener(target, eventName, callback) {\n        return target.removeEventListener(eventName, callback);\n    }\n}\nDomEventsPlugin.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: DomEventsPlugin, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nDomEventsPlugin.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: DomEventsPlugin });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: DomEventsPlugin, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Defines supported modifiers for key events.\n */\nconst MODIFIER_KEYS = ['alt', 'control', 'meta', 'shift'];\n// The following values are here for cross-browser compatibility and to match the W3C standard\n// cf https://www.w3.org/TR/DOM-Level-3-Events-key/\nconst _keyMap = {\n    '\\b': 'Backspace',\n    '\\t': 'Tab',\n    '\\x7F': 'Delete',\n    '\\x1B': 'Escape',\n    'Del': 'Delete',\n    'Esc': 'Escape',\n    'Left': 'ArrowLeft',\n    'Right': 'ArrowRight',\n    'Up': 'ArrowUp',\n    'Down': 'ArrowDown',\n    'Menu': 'ContextMenu',\n    'Scroll': 'ScrollLock',\n    'Win': 'OS'\n};\n/**\n * Retrieves modifiers from key-event objects.\n */\nconst MODIFIER_KEY_GETTERS = {\n    'alt': (event) => event.altKey,\n    'control': (event) => event.ctrlKey,\n    'meta': (event) => event.metaKey,\n    'shift': (event) => event.shiftKey\n};\n/**\n * @publicApi\n * A browser plug-in that provides support for handling of key events in Angular.\n */\nclass KeyEventsPlugin extends EventManagerPlugin {\n    /**\n     * Initializes an instance of the browser plug-in.\n     * @param doc The document in which key events will be detected.\n     */\n    constructor(doc) {\n        super(doc);\n    }\n    /**\n     * Reports whether a named key event is supported.\n     * @param eventName The event name to query.\n     * @return True if the named key event is supported.\n     */\n    supports(eventName) {\n        return KeyEventsPlugin.parseEventName(eventName) != null;\n    }\n    /**\n     * Registers a handler for a specific element and key event.\n     * @param element The HTML element to receive event notifications.\n     * @param eventName The name of the key event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @returns The key event that was registered.\n     */\n    addEventListener(element, eventName, handler) {\n        const parsedEvent = KeyEventsPlugin.parseEventName(eventName);\n        const outsideHandler = KeyEventsPlugin.eventCallback(parsedEvent['fullKey'], handler, this.manager.getZone());\n        return this.manager.getZone().runOutsideAngular(() => {\n            return ɵgetDOM().onAndCancel(element, parsedEvent['domEventName'], outsideHandler);\n        });\n    }\n    /**\n     * Parses the user provided full keyboard event definition and normalizes it for\n     * later internal use. It ensures the string is all lowercase, converts special\n     * characters to a standard spelling, and orders all the values consistently.\n     *\n     * @param eventName The name of the key event to listen for.\n     * @returns an object with the full, normalized string, and the dom event name\n     * or null in the case when the event doesn't match a keyboard event.\n     */\n    static parseEventName(eventName) {\n        const parts = eventName.toLowerCase().split('.');\n        const domEventName = parts.shift();\n        if ((parts.length === 0) || !(domEventName === 'keydown' || domEventName === 'keyup')) {\n            return null;\n        }\n        const key = KeyEventsPlugin._normalizeKey(parts.pop());\n        let fullKey = '';\n        let codeIX = parts.indexOf('code');\n        if (codeIX > -1) {\n            parts.splice(codeIX, 1);\n            fullKey = 'code.';\n        }\n        MODIFIER_KEYS.forEach(modifierName => {\n            const index = parts.indexOf(modifierName);\n            if (index > -1) {\n                parts.splice(index, 1);\n                fullKey += modifierName + '.';\n            }\n        });\n        fullKey += key;\n        if (parts.length != 0 || key.length === 0) {\n            // returning null instead of throwing to let another plugin process the event\n            return null;\n        }\n        // NOTE: Please don't rewrite this as so, as it will break JSCompiler property renaming.\n        //       The code must remain in the `result['domEventName']` form.\n        // return {domEventName, fullKey};\n        const result = {};\n        result['domEventName'] = domEventName;\n        result['fullKey'] = fullKey;\n        return result;\n    }\n    /**\n     * Determines whether the actual keys pressed match the configured key code string.\n     * The `fullKeyCode` event is normalized in the `parseEventName` method when the\n     * event is attached to the DOM during the `addEventListener` call. This is unseen\n     * by the end user and is normalized for internal consistency and parsing.\n     *\n     * @param event The keyboard event.\n     * @param fullKeyCode The normalized user defined expected key event string\n     * @returns boolean.\n     */\n    static matchEventFullKeyCode(event, fullKeyCode) {\n        let keycode = _keyMap[event.key] || event.key;\n        let key = '';\n        if (fullKeyCode.indexOf('code.') > -1) {\n            keycode = event.code;\n            key = 'code.';\n        }\n        // the keycode could be unidentified so we have to check here\n        if (keycode == null || !keycode)\n            return false;\n        keycode = keycode.toLowerCase();\n        if (keycode === ' ') {\n            keycode = 'space'; // for readability\n        }\n        else if (keycode === '.') {\n            keycode = 'dot'; // because '.' is used as a separator in event names\n        }\n        MODIFIER_KEYS.forEach(modifierName => {\n            if (modifierName !== keycode) {\n                const modifierGetter = MODIFIER_KEY_GETTERS[modifierName];\n                if (modifierGetter(event)) {\n                    key += modifierName + '.';\n                }\n            }\n        });\n        key += keycode;\n        return key === fullKeyCode;\n    }\n    /**\n     * Configures a handler callback for a key event.\n     * @param fullKey The event name that combines all simultaneous keystrokes.\n     * @param handler The function that responds to the key event.\n     * @param zone The zone in which the event occurred.\n     * @returns A callback function.\n     */\n    static eventCallback(fullKey, handler, zone) {\n        return (event) => {\n            if (KeyEventsPlugin.matchEventFullKeyCode(event, fullKey)) {\n                zone.runGuarded(() => handler(event));\n            }\n        };\n    }\n    /** @internal */\n    static _normalizeKey(keyName) {\n        // TODO: switch to a Map if the mapping grows too much\n        switch (keyName) {\n            case 'esc':\n                return 'escape';\n            default:\n                return keyName;\n        }\n    }\n}\nKeyEventsPlugin.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: KeyEventsPlugin, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nKeyEventsPlugin.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: KeyEventsPlugin });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: KeyEventsPlugin, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst NG_DEV_MODE = typeof ngDevMode === 'undefined' || !!ngDevMode;\n/**\n * Bootstraps an instance of an Angular application and renders a standalone component as the\n * application's root component. More information about standalone components can be found in [this\n * guide](guide/standalone-components).\n *\n * @usageNotes\n * The root component passed into this function *must* be a standalone one (should have the\n * `standalone: true` flag in the `@Component` decorator config).\n *\n * ```typescript\n * @Component({\n *   standalone: true,\n *   template: 'Hello world!'\n * })\n * class RootComponent {}\n *\n * const appRef: ApplicationRef = await bootstrapApplication(RootComponent);\n * ```\n *\n * You can add the list of providers that should be available in the application injector by\n * specifying the `providers` field in an object passed as the second argument:\n *\n * ```typescript\n * await bootstrapApplication(RootComponent, {\n *   providers: [\n *     {provide: BACKEND_URL, useValue: 'https://yourdomain.com/api'}\n *   ]\n * });\n * ```\n *\n * The `importProvidersFrom` helper method can be used to collect all providers from any\n * existing NgModule (and transitively from all NgModules that it imports):\n *\n * ```typescript\n * await bootstrapApplication(RootComponent, {\n *   providers: [\n *     importProvidersFrom(SomeNgModule)\n *   ]\n * });\n * ```\n *\n * Note: the `bootstrapApplication` method doesn't include [Testability](api/core/Testability) by\n * default. You can add [Testability](api/core/Testability) by getting the list of necessary\n * providers using `provideProtractorTestingSupport()` function and adding them into the `providers`\n * array, for example:\n *\n * ```typescript\n * import {provideProtractorTestingSupport} from '@angular/platform-browser';\n *\n * await bootstrapApplication(RootComponent, {providers: [provideProtractorTestingSupport()]});\n * ```\n *\n * @param rootComponent A reference to a standalone component that should be rendered.\n * @param options Extra configuration for the bootstrap operation, see `ApplicationConfig` for\n *     additional info.\n * @returns A promise that returns an `ApplicationRef` instance once resolved.\n *\n * @publicApi\n */\nfunction bootstrapApplication(rootComponent, options) {\n    return ɵinternalCreateApplication({ rootComponent, ...createProvidersConfig(options) });\n}\n/**\n * Create an instance of an Angular application without bootstrapping any components. This is useful\n * for the situation where one wants to decouple application environment creation (a platform and\n * associated injectors) from rendering components on a screen. Components can be subsequently\n * bootstrapped on the returned `ApplicationRef`.\n *\n * @param options Extra configuration for the application environment, see `ApplicationConfig` for\n *     additional info.\n * @returns A promise that returns an `ApplicationRef` instance once resolved.\n *\n * @publicApi\n */\nfunction createApplication(options) {\n    return ɵinternalCreateApplication(createProvidersConfig(options));\n}\nfunction createProvidersConfig(options) {\n    return {\n        appProviders: [\n            ...BROWSER_MODULE_PROVIDERS,\n            ...(options?.providers ?? []),\n        ],\n        platformProviders: INTERNAL_BROWSER_PLATFORM_PROVIDERS\n    };\n}\n/**\n * Returns a set of providers required to setup [Testability](api/core/Testability) for an\n * application bootstrapped using the `bootstrapApplication` function. The set of providers is\n * needed to support testing an application with Protractor (which relies on the Testability APIs\n * to be present).\n *\n * @returns An array of providers required to setup Testability for an application and make it\n *     available for testing using Protractor.\n *\n * @publicApi\n */\nfunction provideProtractorTestingSupport() {\n    // Return a copy to prevent changes to the original array in case any in-place\n    // alterations are performed to the `provideProtractorTestingSupport` call results in app code.\n    return [...TESTABILITY_PROVIDERS];\n}\nfunction initDomAdapter() {\n    BrowserDomAdapter.makeCurrent();\n}\nfunction errorHandler() {\n    return new ErrorHandler();\n}\nfunction _document() {\n    // Tell ivy about the global document\n    ɵsetDocument(document);\n    return document;\n}\nconst INTERNAL_BROWSER_PLATFORM_PROVIDERS = [\n    { provide: PLATFORM_ID, useValue: ɵPLATFORM_BROWSER_ID },\n    { provide: PLATFORM_INITIALIZER, useValue: initDomAdapter, multi: true },\n    { provide: DOCUMENT, useFactory: _document, deps: [] },\n];\n/**\n * A factory function that returns a `PlatformRef` instance associated with browser service\n * providers.\n *\n * @publicApi\n */\nconst platformBrowser = createPlatformFactory(platformCore, 'browser', INTERNAL_BROWSER_PLATFORM_PROVIDERS);\n/**\n * Internal marker to signal whether providers from the `BrowserModule` are already present in DI.\n * This is needed to avoid loading `BrowserModule` providers twice. We can't rely on the\n * `BrowserModule` presence itself, since the standalone-based bootstrap just imports\n * `BrowserModule` providers without referencing the module itself.\n */\nconst BROWSER_MODULE_PROVIDERS_MARKER = new InjectionToken(NG_DEV_MODE ? 'BrowserModule Providers Marker' : '');\nconst TESTABILITY_PROVIDERS = [\n    {\n        provide: ɵTESTABILITY_GETTER,\n        useClass: BrowserGetTestability,\n        deps: [],\n    },\n    {\n        provide: ɵTESTABILITY,\n        useClass: Testability,\n        deps: [NgZone, TestabilityRegistry, ɵTESTABILITY_GETTER]\n    },\n    {\n        provide: Testability,\n        useClass: Testability,\n        deps: [NgZone, TestabilityRegistry, ɵTESTABILITY_GETTER]\n    }\n];\nconst BROWSER_MODULE_PROVIDERS = [\n    { provide: ɵINJECTOR_SCOPE, useValue: 'root' },\n    { provide: ErrorHandler, useFactory: errorHandler, deps: [] }, {\n        provide: EVENT_MANAGER_PLUGINS,\n        useClass: DomEventsPlugin,\n        multi: true,\n        deps: [DOCUMENT, NgZone, PLATFORM_ID]\n    },\n    { provide: EVENT_MANAGER_PLUGINS, useClass: KeyEventsPlugin, multi: true, deps: [DOCUMENT] }, {\n        provide: DomRendererFactory2,\n        useClass: DomRendererFactory2,\n        deps: [EventManager, DomSharedStylesHost, APP_ID]\n    },\n    { provide: RendererFactory2, useExisting: DomRendererFactory2 },\n    { provide: SharedStylesHost, useExisting: DomSharedStylesHost },\n    { provide: DomSharedStylesHost, useClass: DomSharedStylesHost, deps: [DOCUMENT] },\n    { provide: EventManager, useClass: EventManager, deps: [EVENT_MANAGER_PLUGINS, NgZone] },\n    { provide: XhrFactory, useClass: BrowserXhr, deps: [] },\n    NG_DEV_MODE ? { provide: BROWSER_MODULE_PROVIDERS_MARKER, useValue: true } : []\n];\n/**\n * Exports required infrastructure for all Angular apps.\n * Included by default in all Angular apps created with the CLI\n * `new` command.\n * Re-exports `CommonModule` and `ApplicationModule`, making their\n * exports and providers available to all apps.\n *\n * @publicApi\n */\nclass BrowserModule {\n    constructor(providersAlreadyPresent) {\n        if (NG_DEV_MODE && providersAlreadyPresent) {\n            throw new Error(`Providers from the \\`BrowserModule\\` have already been loaded. If you need access ` +\n                `to common directives such as NgIf and NgFor, import the \\`CommonModule\\` instead.`);\n        }\n    }\n    /**\n     * Configures a browser-based app to transition from a server-rendered app, if\n     * one is present on the page.\n     *\n     * @param params An object containing an identifier for the app to transition.\n     * The ID must match between the client and server versions of the app.\n     * @returns The reconfigured `BrowserModule` to import into the app's root `AppModule`.\n     */\n    static withServerTransition(params) {\n        return {\n            ngModule: BrowserModule,\n            providers: [\n                { provide: APP_ID, useValue: params.appId },\n                { provide: TRANSITION_ID, useExisting: APP_ID },\n                SERVER_TRANSITION_PROVIDERS,\n            ],\n        };\n    }\n}\nBrowserModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: BrowserModule, deps: [{ token: BROWSER_MODULE_PROVIDERS_MARKER, optional: true, skipSelf: true }], target: i0.ɵɵFactoryTarget.NgModule });\nBrowserModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.0.3\", ngImport: i0, type: BrowserModule, exports: [CommonModule, ApplicationModule] });\nBrowserModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: BrowserModule, providers: [\n        ...BROWSER_MODULE_PROVIDERS,\n        ...TESTABILITY_PROVIDERS\n    ], imports: [CommonModule, ApplicationModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: BrowserModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [\n                        ...BROWSER_MODULE_PROVIDERS,\n                        ...TESTABILITY_PROVIDERS\n                    ],\n                    exports: [CommonModule, ApplicationModule],\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }, {\n                    type: Inject,\n                    args: [BROWSER_MODULE_PROVIDERS_MARKER]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Factory to create a `Meta` service instance for the current DOM document.\n */\nfunction createMeta() {\n    return new Meta(ɵɵinject(DOCUMENT));\n}\n/**\n * A service for managing HTML `<meta>` tags.\n *\n * Properties of the `MetaDefinition` object match the attributes of the\n * HTML `<meta>` tag. These tags define document metadata that is important for\n * things like configuring a Content Security Policy, defining browser compatibility\n * and security settings, setting HTTP Headers, defining rich content for social sharing,\n * and Search Engine Optimization (SEO).\n *\n * To identify specific `<meta>` tags in a document, use an attribute selection\n * string in the format `\"tag_attribute='value string'\"`.\n * For example, an `attrSelector` value of `\"name='description'\"` matches a tag\n * whose `name` attribute has the value `\"description\"`.\n * Selectors are used with the `querySelector()` Document method,\n * in the format `meta[{attrSelector}]`.\n *\n * @see [HTML meta tag](https://developer.mozilla.org/docs/Web/HTML/Element/meta)\n * @see [Document.querySelector()](https://developer.mozilla.org/docs/Web/API/Document/querySelector)\n *\n *\n * @publicApi\n */\nclass Meta {\n    constructor(_doc) {\n        this._doc = _doc;\n        this._dom = ɵgetDOM();\n    }\n    /**\n     * Retrieves or creates a specific `<meta>` tag element in the current HTML document.\n     * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n     * values in the provided tag definition, and verifies that all other attribute values are equal.\n     * If an existing element is found, it is returned and is not modified in any way.\n     * @param tag The definition of a `<meta>` element to match or create.\n     * @param forceCreation True to create a new element without checking whether one already exists.\n     * @returns The existing element with the same attributes and values if found,\n     * the new element if no match is found, or `null` if the tag parameter is not defined.\n     */\n    addTag(tag, forceCreation = false) {\n        if (!tag)\n            return null;\n        return this._getOrCreateElement(tag, forceCreation);\n    }\n    /**\n     * Retrieves or creates a set of `<meta>` tag elements in the current HTML document.\n     * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n     * values in the provided tag definition, and verifies that all other attribute values are equal.\n     * @param tags An array of tag definitions to match or create.\n     * @param forceCreation True to create new elements without checking whether they already exist.\n     * @returns The matching elements if found, or the new elements.\n     */\n    addTags(tags, forceCreation = false) {\n        if (!tags)\n            return [];\n        return tags.reduce((result, tag) => {\n            if (tag) {\n                result.push(this._getOrCreateElement(tag, forceCreation));\n            }\n            return result;\n        }, []);\n    }\n    /**\n     * Retrieves a `<meta>` tag element in the current HTML document.\n     * @param attrSelector The tag attribute and value to match against, in the format\n     * `\"tag_attribute='value string'\"`.\n     * @returns The matching element, if any.\n     */\n    getTag(attrSelector) {\n        if (!attrSelector)\n            return null;\n        return this._doc.querySelector(`meta[${attrSelector}]`) || null;\n    }\n    /**\n     * Retrieves a set of `<meta>` tag elements in the current HTML document.\n     * @param attrSelector The tag attribute and value to match against, in the format\n     * `\"tag_attribute='value string'\"`.\n     * @returns The matching elements, if any.\n     */\n    getTags(attrSelector) {\n        if (!attrSelector)\n            return [];\n        const list /*NodeList*/ = this._doc.querySelectorAll(`meta[${attrSelector}]`);\n        return list ? [].slice.call(list) : [];\n    }\n    /**\n     * Modifies an existing `<meta>` tag element in the current HTML document.\n     * @param tag The tag description with which to replace the existing tag content.\n     * @param selector A tag attribute and value to match against, to identify\n     * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n     * If not supplied, matches a tag with the same `name` or `property` attribute value as the\n     * replacement tag.\n     * @return The modified element.\n     */\n    updateTag(tag, selector) {\n        if (!tag)\n            return null;\n        selector = selector || this._parseSelector(tag);\n        const meta = this.getTag(selector);\n        if (meta) {\n            return this._setMetaElementAttributes(tag, meta);\n        }\n        return this._getOrCreateElement(tag, true);\n    }\n    /**\n     * Removes an existing `<meta>` tag element from the current HTML document.\n     * @param attrSelector A tag attribute and value to match against, to identify\n     * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n     */\n    removeTag(attrSelector) {\n        this.removeTagElement(this.getTag(attrSelector));\n    }\n    /**\n     * Removes an existing `<meta>` tag element from the current HTML document.\n     * @param meta The tag definition to match against to identify an existing tag.\n     */\n    removeTagElement(meta) {\n        if (meta) {\n            this._dom.remove(meta);\n        }\n    }\n    _getOrCreateElement(meta, forceCreation = false) {\n        if (!forceCreation) {\n            const selector = this._parseSelector(meta);\n            // It's allowed to have multiple elements with the same name so it's not enough to\n            // just check that element with the same name already present on the page. We also need to\n            // check if element has tag attributes\n            const elem = this.getTags(selector).filter(elem => this._containsAttributes(meta, elem))[0];\n            if (elem !== undefined)\n                return elem;\n        }\n        const element = this._dom.createElement('meta');\n        this._setMetaElementAttributes(meta, element);\n        const head = this._doc.getElementsByTagName('head')[0];\n        head.appendChild(element);\n        return element;\n    }\n    _setMetaElementAttributes(tag, el) {\n        Object.keys(tag).forEach((prop) => el.setAttribute(this._getMetaKeyMap(prop), tag[prop]));\n        return el;\n    }\n    _parseSelector(tag) {\n        const attr = tag.name ? 'name' : 'property';\n        return `${attr}=\"${tag[attr]}\"`;\n    }\n    _containsAttributes(tag, elem) {\n        return Object.keys(tag).every((key) => elem.getAttribute(this._getMetaKeyMap(key)) === tag[key]);\n    }\n    _getMetaKeyMap(prop) {\n        return META_KEYS_MAP[prop] || prop;\n    }\n}\nMeta.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: Meta, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nMeta.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: Meta, providedIn: 'root', useFactory: createMeta, deps: [] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: Meta, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root', useFactory: createMeta, deps: [] }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n/**\n * Mapping for MetaDefinition properties with their correct meta attribute names\n */\nconst META_KEYS_MAP = {\n    httpEquiv: 'http-equiv'\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Factory to create Title service.\n */\nfunction createTitle() {\n    return new Title(ɵɵinject(DOCUMENT));\n}\n/**\n * A service that can be used to get and set the title of a current HTML document.\n *\n * Since an Angular application can't be bootstrapped on the entire HTML document (`<html>` tag)\n * it is not possible to bind to the `text` property of the `HTMLTitleElement` elements\n * (representing the `<title>` tag). Instead, this service can be used to set and get the current\n * title value.\n *\n * @publicApi\n */\nclass Title {\n    constructor(_doc) {\n        this._doc = _doc;\n    }\n    /**\n     * Get the title of the current HTML document.\n     */\n    getTitle() {\n        return this._doc.title;\n    }\n    /**\n     * Set the title of the current HTML document.\n     * @param newTitle\n     */\n    setTitle(newTitle) {\n        this._doc.title = newTitle || '';\n    }\n}\nTitle.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: Title, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nTitle.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: Title, providedIn: 'root', useFactory: createTitle, deps: [] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: Title, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root', useFactory: createTitle, deps: [] }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst CAMEL_CASE_REGEXP = /([A-Z])/g;\nconst DASH_CASE_REGEXP = /-([a-z])/g;\nfunction camelCaseToDashCase(input) {\n    return input.replace(CAMEL_CASE_REGEXP, (...m) => '-' + m[1].toLowerCase());\n}\nfunction dashCaseToCamelCase(input) {\n    return input.replace(DASH_CASE_REGEXP, (...m) => m[1].toUpperCase());\n}\n/**\n * Exports the value under a given `name` in the global property `ng`. For example `ng.probe` if\n * `name` is `'probe'`.\n * @param name Name under which it will be exported. Keep in mind this will be a property of the\n * global `ng` object.\n * @param value The value to export.\n */\nfunction exportNgVar(name, value) {\n    if (typeof COMPILED === 'undefined' || !COMPILED) {\n        // Note: we can't export `ng` when using closure enhanced optimization as:\n        // - closure declares globals itself for minified names, which sometimes clobber our `ng` global\n        // - we can't declare a closure extern as the namespace `ng` is already used within Google\n        //   for typings for angularJS (via `goog.provide('ng....')`).\n        const ng = ɵglobal['ng'] = ɵglobal['ng'] || {};\n        ng[name] = value;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst win = typeof window !== 'undefined' && window || {};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass ChangeDetectionPerfRecord {\n    constructor(msPerTick, numTicks) {\n        this.msPerTick = msPerTick;\n        this.numTicks = numTicks;\n    }\n}\n/**\n * Entry point for all Angular profiling-related debug tools. This object\n * corresponds to the `ng.profiler` in the dev console.\n */\nclass AngularProfiler {\n    constructor(ref) {\n        this.appRef = ref.injector.get(ApplicationRef);\n    }\n    // tslint:disable:no-console\n    /**\n     * Exercises change detection in a loop and then prints the average amount of\n     * time in milliseconds how long a single round of change detection takes for\n     * the current state of the UI. It runs a minimum of 5 rounds for a minimum\n     * of 500 milliseconds.\n     *\n     * Optionally, a user may pass a `config` parameter containing a map of\n     * options. Supported options are:\n     *\n     * `record` (boolean) - causes the profiler to record a CPU profile while\n     * it exercises the change detector. Example:\n     *\n     * ```\n     * ng.profiler.timeChangeDetection({record: true})\n     * ```\n     */\n    timeChangeDetection(config) {\n        const record = config && config['record'];\n        const profileName = 'Change Detection';\n        // Profiler is not available in Android browsers without dev tools opened\n        const isProfilerAvailable = win.console.profile != null;\n        if (record && isProfilerAvailable) {\n            win.console.profile(profileName);\n        }\n        const start = performanceNow();\n        let numTicks = 0;\n        while (numTicks < 5 || (performanceNow() - start) < 500) {\n            this.appRef.tick();\n            numTicks++;\n        }\n        const end = performanceNow();\n        if (record && isProfilerAvailable) {\n            win.console.profileEnd(profileName);\n        }\n        const msPerTick = (end - start) / numTicks;\n        win.console.log(`ran ${numTicks} change detection cycles`);\n        win.console.log(`${msPerTick.toFixed(2)} ms per check`);\n        return new ChangeDetectionPerfRecord(msPerTick, numTicks);\n    }\n}\nfunction performanceNow() {\n    return win.performance && win.performance.now ? win.performance.now() :\n        new Date().getTime();\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst PROFILER_GLOBAL_NAME = 'profiler';\n/**\n * Enabled Angular debug tools that are accessible via your browser's\n * developer console.\n *\n * Usage:\n *\n * 1. Open developer console (e.g. in Chrome Ctrl + Shift + j)\n * 1. Type `ng.` (usually the console will show auto-complete suggestion)\n * 1. Try the change detection profiler `ng.profiler.timeChangeDetection()`\n *    then hit Enter.\n *\n * @publicApi\n */\nfunction enableDebugTools(ref) {\n    exportNgVar(PROFILER_GLOBAL_NAME, new AngularProfiler(ref));\n    return ref;\n}\n/**\n * Disables Angular tools.\n *\n * @publicApi\n */\nfunction disableDebugTools() {\n    exportNgVar(PROFILER_GLOBAL_NAME, null);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction escapeHtml(text) {\n    const escapedText = {\n        '&': '&a;',\n        '\"': '&q;',\n        '\\'': '&s;',\n        '<': '&l;',\n        '>': '&g;',\n    };\n    return text.replace(/[&\"'<>]/g, s => escapedText[s]);\n}\nfunction unescapeHtml(text) {\n    const unescapedText = {\n        '&a;': '&',\n        '&q;': '\"',\n        '&s;': '\\'',\n        '&l;': '<',\n        '&g;': '>',\n    };\n    return text.replace(/&[^;]+;/g, s => unescapedText[s]);\n}\n/**\n * Create a `StateKey<T>` that can be used to store value of type T with `TransferState`.\n *\n * Example:\n *\n * ```\n * const COUNTER_KEY = makeStateKey<number>('counter');\n * let value = 10;\n *\n * transferState.set(COUNTER_KEY, value);\n * ```\n *\n * @publicApi\n */\nfunction makeStateKey(key) {\n    return key;\n}\n/**\n * A key value store that is transferred from the application on the server side to the application\n * on the client side.\n *\n * The `TransferState` is available as an injectable token.\n * On the client, just inject this token using DI and use it, it will be lazily initialized.\n * On the server it's already included if `renderApplication` function is used. Otherwise, import\n * the `ServerTransferStateModule` module to make the `TransferState` available.\n *\n * The values in the store are serialized/deserialized using JSON.stringify/JSON.parse. So only\n * boolean, number, string, null and non-class objects will be serialized and deserialized in a\n * non-lossy manner.\n *\n * @publicApi\n */\nclass TransferState {\n    constructor() {\n        this.store = {};\n        this.onSerializeCallbacks = {};\n    }\n    /**\n     * Get the value corresponding to a key. Return `defaultValue` if key is not found.\n     */\n    get(key, defaultValue) {\n        return this.store[key] !== undefined ? this.store[key] : defaultValue;\n    }\n    /**\n     * Set the value corresponding to a key.\n     */\n    set(key, value) {\n        this.store[key] = value;\n    }\n    /**\n     * Remove a key from the store.\n     */\n    remove(key) {\n        delete this.store[key];\n    }\n    /**\n     * Test whether a key exists in the store.\n     */\n    hasKey(key) {\n        return this.store.hasOwnProperty(key);\n    }\n    /**\n     * Indicates whether the state is empty.\n     */\n    get isEmpty() {\n        return Object.keys(this.store).length === 0;\n    }\n    /**\n     * Register a callback to provide the value for a key when `toJson` is called.\n     */\n    onSerialize(key, callback) {\n        this.onSerializeCallbacks[key] = callback;\n    }\n    /**\n     * Serialize the current state of the store to JSON.\n     */\n    toJson() {\n        // Call the onSerialize callbacks and put those values into the store.\n        for (const key in this.onSerializeCallbacks) {\n            if (this.onSerializeCallbacks.hasOwnProperty(key)) {\n                try {\n                    this.store[key] = this.onSerializeCallbacks[key]();\n                }\n                catch (e) {\n                    console.warn('Exception in onSerialize callback: ', e);\n                }\n            }\n        }\n        return JSON.stringify(this.store);\n    }\n}\nTransferState.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: TransferState, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nTransferState.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: TransferState, providedIn: 'root', useFactory: () => {\n        const doc = inject(DOCUMENT);\n        const appId = inject(APP_ID);\n        const state = new TransferState();\n        state.store = retrieveTransferredState(doc, appId);\n        return state;\n    } });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: TransferState, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                    useFactory: () => {\n                        const doc = inject(DOCUMENT);\n                        const appId = inject(APP_ID);\n                        const state = new TransferState();\n                        state.store = retrieveTransferredState(doc, appId);\n                        return state;\n                    }\n                }]\n        }] });\nfunction retrieveTransferredState(doc, appId) {\n    // Locate the script tag with the JSON data transferred from the server.\n    // The id of the script tag is set to the Angular appId + 'state'.\n    const script = doc.getElementById(appId + '-state');\n    let initialState = {};\n    if (script && script.textContent) {\n        try {\n            // Avoid using any here as it triggers lint errors in google3 (any is not allowed).\n            initialState = JSON.parse(unescapeHtml(script.textContent));\n        }\n        catch (e) {\n            console.warn('Exception while restoring TransferState for app ' + appId, e);\n        }\n    }\n    return initialState;\n}\n/**\n * NgModule to install on the client side while using the `TransferState` to transfer state from\n * server to client.\n *\n * @publicApi\n * @deprecated no longer needed, you can inject the `TransferState` in an app without providing\n *     this module.\n */\nclass BrowserTransferStateModule {\n}\nBrowserTransferStateModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: BrowserTransferStateModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nBrowserTransferStateModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.0.3\", ngImport: i0, type: BrowserTransferStateModule });\nBrowserTransferStateModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: BrowserTransferStateModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: BrowserTransferStateModule, decorators: [{\n            type: NgModule,\n            args: [{}]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Predicates for use with {@link DebugElement}'s query functions.\n *\n * @publicApi\n */\nclass By {\n    /**\n     * Match all nodes.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_all'}\n     */\n    static all() {\n        return () => true;\n    }\n    /**\n     * Match elements by the given CSS selector.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_css'}\n     */\n    static css(selector) {\n        return (debugElement) => {\n            return debugElement.nativeElement != null ?\n                elementMatches(debugElement.nativeElement, selector) :\n                false;\n        };\n    }\n    /**\n     * Match nodes that have the given directive present.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_directive'}\n     */\n    static directive(type) {\n        return (debugNode) => debugNode.providerTokens.indexOf(type) !== -1;\n    }\n}\nfunction elementMatches(n, selector) {\n    if (ɵgetDOM().isElementNode(n)) {\n        return n.matches && n.matches(selector) ||\n            n.msMatchesSelector && n.msMatchesSelector(selector) ||\n            n.webkitMatchesSelector && n.webkitMatchesSelector(selector);\n    }\n    return false;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Supported HammerJS recognizer event names.\n */\nconst EVENT_NAMES = {\n    // pan\n    'pan': true,\n    'panstart': true,\n    'panmove': true,\n    'panend': true,\n    'pancancel': true,\n    'panleft': true,\n    'panright': true,\n    'panup': true,\n    'pandown': true,\n    // pinch\n    'pinch': true,\n    'pinchstart': true,\n    'pinchmove': true,\n    'pinchend': true,\n    'pinchcancel': true,\n    'pinchin': true,\n    'pinchout': true,\n    // press\n    'press': true,\n    'pressup': true,\n    // rotate\n    'rotate': true,\n    'rotatestart': true,\n    'rotatemove': true,\n    'rotateend': true,\n    'rotatecancel': true,\n    // swipe\n    'swipe': true,\n    'swipeleft': true,\n    'swiperight': true,\n    'swipeup': true,\n    'swipedown': true,\n    // tap\n    'tap': true,\n    'doubletap': true\n};\n/**\n * DI token for providing [HammerJS](https://hammerjs.github.io/) support to Angular.\n * @see `HammerGestureConfig`\n *\n * @ngModule HammerModule\n * @publicApi\n */\nconst HAMMER_GESTURE_CONFIG = new InjectionToken('HammerGestureConfig');\n/**\n * Injection token used to provide a {@link HammerLoader} to Angular.\n *\n * @publicApi\n */\nconst HAMMER_LOADER = new InjectionToken('HammerLoader');\n/**\n * An injectable [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n * for gesture recognition. Configures specific event recognition.\n * @publicApi\n */\nclass HammerGestureConfig {\n    constructor() {\n        /**\n         * A set of supported event names for gestures to be used in Angular.\n         * Angular supports all built-in recognizers, as listed in\n         * [HammerJS documentation](https://hammerjs.github.io/).\n         */\n        this.events = [];\n        /**\n         * Maps gesture event names to a set of configuration options\n         * that specify overrides to the default values for specific properties.\n         *\n         * The key is a supported event name to be configured,\n         * and the options object contains a set of properties, with override values\n         * to be applied to the named recognizer event.\n         * For example, to disable recognition of the rotate event, specify\n         *  `{\"rotate\": {\"enable\": false}}`.\n         *\n         * Properties that are not present take the HammerJS default values.\n         * For information about which properties are supported for which events,\n         * and their allowed and default values, see\n         * [HammerJS documentation](https://hammerjs.github.io/).\n         *\n         */\n        this.overrides = {};\n    }\n    /**\n     * Creates a [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n     * and attaches it to a given HTML element.\n     * @param element The element that will recognize gestures.\n     * @returns A HammerJS event-manager object.\n     */\n    buildHammer(element) {\n        const mc = new Hammer(element, this.options);\n        mc.get('pinch').set({ enable: true });\n        mc.get('rotate').set({ enable: true });\n        for (const eventName in this.overrides) {\n            mc.get(eventName).set(this.overrides[eventName]);\n        }\n        return mc;\n    }\n}\nHammerGestureConfig.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: HammerGestureConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nHammerGestureConfig.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: HammerGestureConfig });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: HammerGestureConfig, decorators: [{\n            type: Injectable\n        }] });\n/**\n * Event plugin that adds Hammer support to an application.\n *\n * @ngModule HammerModule\n */\nclass HammerGesturesPlugin extends EventManagerPlugin {\n    constructor(doc, _config, console, loader) {\n        super(doc);\n        this._config = _config;\n        this.console = console;\n        this.loader = loader;\n        this._loaderPromise = null;\n    }\n    supports(eventName) {\n        if (!EVENT_NAMES.hasOwnProperty(eventName.toLowerCase()) && !this.isCustomEvent(eventName)) {\n            return false;\n        }\n        if (!window.Hammer && !this.loader) {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                this.console.warn(`The \"${eventName}\" event cannot be bound because Hammer.JS is not ` +\n                    `loaded and no custom loader has been specified.`);\n            }\n            return false;\n        }\n        return true;\n    }\n    addEventListener(element, eventName, handler) {\n        const zone = this.manager.getZone();\n        eventName = eventName.toLowerCase();\n        // If Hammer is not present but a loader is specified, we defer adding the event listener\n        // until Hammer is loaded.\n        if (!window.Hammer && this.loader) {\n            this._loaderPromise = this._loaderPromise || zone.runOutsideAngular(() => this.loader());\n            // This `addEventListener` method returns a function to remove the added listener.\n            // Until Hammer is loaded, the returned function needs to *cancel* the registration rather\n            // than remove anything.\n            let cancelRegistration = false;\n            let deregister = () => {\n                cancelRegistration = true;\n            };\n            zone.runOutsideAngular(() => this._loaderPromise\n                .then(() => {\n                // If Hammer isn't actually loaded when the custom loader resolves, give up.\n                if (!window.Hammer) {\n                    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                        this.console.warn(`The custom HAMMER_LOADER completed, but Hammer.JS is not present.`);\n                    }\n                    deregister = () => { };\n                    return;\n                }\n                if (!cancelRegistration) {\n                    // Now that Hammer is loaded and the listener is being loaded for real,\n                    // the deregistration function changes from canceling registration to\n                    // removal.\n                    deregister = this.addEventListener(element, eventName, handler);\n                }\n            })\n                .catch(() => {\n                if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                    this.console.warn(`The \"${eventName}\" event cannot be bound because the custom ` +\n                        `Hammer.JS loader failed.`);\n                }\n                deregister = () => { };\n            }));\n            // Return a function that *executes* `deregister` (and not `deregister` itself) so that we\n            // can change the behavior of `deregister` once the listener is added. Using a closure in\n            // this way allows us to avoid any additional data structures to track listener removal.\n            return () => {\n                deregister();\n            };\n        }\n        return zone.runOutsideAngular(() => {\n            // Creating the manager bind events, must be done outside of angular\n            const mc = this._config.buildHammer(element);\n            const callback = function (eventObj) {\n                zone.runGuarded(function () {\n                    handler(eventObj);\n                });\n            };\n            mc.on(eventName, callback);\n            return () => {\n                mc.off(eventName, callback);\n                // destroy mc to prevent memory leak\n                if (typeof mc.destroy === 'function') {\n                    mc.destroy();\n                }\n            };\n        });\n    }\n    isCustomEvent(eventName) {\n        return this._config.events.indexOf(eventName) > -1;\n    }\n}\nHammerGesturesPlugin.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: HammerGesturesPlugin, deps: [{ token: DOCUMENT }, { token: HAMMER_GESTURE_CONFIG }, { token: i0.ɵConsole }, { token: HAMMER_LOADER, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nHammerGesturesPlugin.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: HammerGesturesPlugin });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: HammerGesturesPlugin, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: HammerGestureConfig, decorators: [{\n                    type: Inject,\n                    args: [HAMMER_GESTURE_CONFIG]\n                }] }, { type: i0.ɵConsole }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [HAMMER_LOADER]\n                }] }]; } });\n/**\n * Adds support for HammerJS.\n *\n * Import this module at the root of your application so that Angular can work with\n * HammerJS to detect gesture events.\n *\n * Note that applications still need to include the HammerJS script itself. This module\n * simply sets up the coordination layer between HammerJS and Angular's EventManager.\n *\n * @publicApi\n */\nclass HammerModule {\n}\nHammerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: HammerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nHammerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.0.3\", ngImport: i0, type: HammerModule });\nHammerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: HammerModule, providers: [\n        {\n            provide: EVENT_MANAGER_PLUGINS,\n            useClass: HammerGesturesPlugin,\n            multi: true,\n            deps: [DOCUMENT, HAMMER_GESTURE_CONFIG, ɵConsole, [new Optional(), HAMMER_LOADER]]\n        },\n        { provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig, deps: [] },\n    ] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: HammerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [\n                        {\n                            provide: EVENT_MANAGER_PLUGINS,\n                            useClass: HammerGesturesPlugin,\n                            multi: true,\n                            deps: [DOCUMENT, HAMMER_GESTURE_CONFIG, ɵConsole, [new Optional(), HAMMER_LOADER]]\n                        },\n                        { provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig, deps: [] },\n                    ]\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * DomSanitizer helps preventing Cross Site Scripting Security bugs (XSS) by sanitizing\n * values to be safe to use in the different DOM contexts.\n *\n * For example, when binding a URL in an `<a [href]=\"someValue\">` hyperlink, `someValue` will be\n * sanitized so that an attacker cannot inject e.g. a `javascript:` URL that would execute code on\n * the website.\n *\n * In specific situations, it might be necessary to disable sanitization, for example if the\n * application genuinely needs to produce a `javascript:` style link with a dynamic value in it.\n * Users can bypass security by constructing a value with one of the `bypassSecurityTrust...`\n * methods, and then binding to that value from the template.\n *\n * These situations should be very rare, and extraordinary care must be taken to avoid creating a\n * Cross Site Scripting (XSS) security bug!\n *\n * When using `bypassSecurityTrust...`, make sure to call the method as early as possible and as\n * close as possible to the source of the value, to make it easy to verify no security bug is\n * created by its use.\n *\n * It is not required (and not recommended) to bypass security if the value is safe, e.g. a URL that\n * does not start with a suspicious protocol, or an HTML snippet that does not contain dangerous\n * code. The sanitizer leaves safe values intact.\n *\n * @security Calling any of the `bypassSecurityTrust...` APIs disables Angular's built-in\n * sanitization for the value passed in. Carefully check and audit all values and code paths going\n * into this call. Make sure any user data is appropriately escaped for this security context.\n * For more detail, see the [Security Guide](https://g.co/ng/security).\n *\n * @publicApi\n */\nclass DomSanitizer {\n}\nDomSanitizer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: DomSanitizer, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nDomSanitizer.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: DomSanitizer, providedIn: 'root', useExisting: i0.forwardRef(function () { return DomSanitizerImpl; }) });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: DomSanitizer, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root', useExisting: forwardRef(() => DomSanitizerImpl) }]\n        }] });\nfunction domSanitizerImplFactory(injector) {\n    return new DomSanitizerImpl(injector.get(DOCUMENT));\n}\nclass DomSanitizerImpl extends DomSanitizer {\n    constructor(_doc) {\n        super();\n        this._doc = _doc;\n    }\n    sanitize(ctx, value) {\n        if (value == null)\n            return null;\n        switch (ctx) {\n            case SecurityContext.NONE:\n                return value;\n            case SecurityContext.HTML:\n                if (ɵallowSanitizationBypassAndThrow(value, \"HTML\" /* BypassType.Html */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                return ɵ_sanitizeHtml(this._doc, String(value)).toString();\n            case SecurityContext.STYLE:\n                if (ɵallowSanitizationBypassAndThrow(value, \"Style\" /* BypassType.Style */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                return value;\n            case SecurityContext.SCRIPT:\n                if (ɵallowSanitizationBypassAndThrow(value, \"Script\" /* BypassType.Script */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                throw new Error('unsafe value used in a script context');\n            case SecurityContext.URL:\n                if (ɵallowSanitizationBypassAndThrow(value, \"URL\" /* BypassType.Url */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                return ɵ_sanitizeUrl(String(value));\n            case SecurityContext.RESOURCE_URL:\n                if (ɵallowSanitizationBypassAndThrow(value, \"ResourceURL\" /* BypassType.ResourceUrl */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                throw new Error(`unsafe value used in a resource URL context (see ${ɵXSS_SECURITY_URL})`);\n            default:\n                throw new Error(`Unexpected SecurityContext ${ctx} (see ${ɵXSS_SECURITY_URL})`);\n        }\n    }\n    bypassSecurityTrustHtml(value) {\n        return ɵbypassSanitizationTrustHtml(value);\n    }\n    bypassSecurityTrustStyle(value) {\n        return ɵbypassSanitizationTrustStyle(value);\n    }\n    bypassSecurityTrustScript(value) {\n        return ɵbypassSanitizationTrustScript(value);\n    }\n    bypassSecurityTrustUrl(value) {\n        return ɵbypassSanitizationTrustUrl(value);\n    }\n    bypassSecurityTrustResourceUrl(value) {\n        return ɵbypassSanitizationTrustResourceUrl(value);\n    }\n}\nDomSanitizerImpl.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: DomSanitizerImpl, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nDomSanitizerImpl.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: DomSanitizerImpl, providedIn: 'root', useFactory: domSanitizerImplFactory, deps: [{ token: Injector }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.3\", ngImport: i0, type: DomSanitizerImpl, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root', useFactory: domSanitizerImplFactory, deps: [Injector] }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @publicApi\n */\nconst VERSION = new Version('15.0.3');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BrowserModule, BrowserTransferStateModule, By, DomSanitizer, EVENT_MANAGER_PLUGINS, EventManager, HAMMER_GESTURE_CONFIG, HAMMER_LOADER, HammerGestureConfig, HammerModule, Meta, Title, TransferState, VERSION, bootstrapApplication, createApplication, disableDebugTools, enableDebugTools, makeStateKey, platformBrowser, provideProtractorTestingSupport, BrowserDomAdapter as ɵBrowserDomAdapter, BrowserGetTestability as ɵBrowserGetTestability, DomEventsPlugin as ɵDomEventsPlugin, DomRendererFactory2 as ɵDomRendererFactory2, DomSanitizerImpl as ɵDomSanitizerImpl, DomSharedStylesHost as ɵDomSharedStylesHost, HammerGesturesPlugin as ɵHammerGesturesPlugin, INTERNAL_BROWSER_PLATFORM_PROVIDERS as ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS, KeyEventsPlugin as ɵKeyEventsPlugin, NAMESPACE_URIS as ɵNAMESPACE_URIS, SharedStylesHost as ɵSharedStylesHost, TRANSITION_ID as ɵTRANSITION_ID, escapeHtml as ɵescapeHtml, flattenStyles as ɵflattenStyles, initDomAdapter as ɵinitDomAdapter, shimContentAttribute as ɵshimContentAttribute, shimHostAttribute as ɵshimHostAttribute };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}