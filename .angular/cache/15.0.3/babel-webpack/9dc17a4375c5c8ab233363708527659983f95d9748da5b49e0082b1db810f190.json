{"ast":null,"code":"import { Observable } from '../Observable';\nimport { argsArgArrayOrObject } from '../util/argsArgArrayOrObject';\nimport { from } from './from';\nimport { identity } from '../util/identity';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { popResultSelector, popScheduler } from '../util/args';\nimport { createObject } from '../util/createObject';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { executeSchedule } from '../util/executeSchedule';\nexport function combineLatest() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  var scheduler = popScheduler(args);\n  var resultSelector = popResultSelector(args);\n  var _argsArgArrayOrObject = argsArgArrayOrObject(args),\n    observables = _argsArgArrayOrObject.args,\n    keys = _argsArgArrayOrObject.keys;\n  if (observables.length === 0) {\n    return from([], scheduler);\n  }\n  var result = new Observable(combineLatestInit(observables, scheduler, keys ? function (values) {\n    return createObject(keys, values);\n  } : identity));\n  return resultSelector ? result.pipe(mapOneOrManyArgs(resultSelector)) : result;\n}\nexport function combineLatestInit(observables, scheduler) {\n  var valueTransform = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : identity;\n  return function (subscriber) {\n    maybeSchedule(scheduler, function () {\n      var length = observables.length;\n      var values = new Array(length);\n      var active = length;\n      var remainingFirstValues = length;\n      var _loop = function _loop(i) {\n        maybeSchedule(scheduler, function () {\n          var source = from(observables[i], scheduler);\n          var hasFirstValue = false;\n          source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            values[i] = value;\n            if (!hasFirstValue) {\n              hasFirstValue = true;\n              remainingFirstValues--;\n            }\n            if (!remainingFirstValues) {\n              subscriber.next(valueTransform(values.slice()));\n            }\n          }, function () {\n            if (! --active) {\n              subscriber.complete();\n            }\n          }));\n        }, subscriber);\n      };\n      for (var i = 0; i < length; i++) {\n        _loop(i);\n      }\n    }, subscriber);\n  };\n}\nfunction maybeSchedule(scheduler, execute, subscription) {\n  if (scheduler) {\n    executeSchedule(subscription, scheduler, execute);\n  } else {\n    execute();\n  }\n}","map":{"version":3,"names":["Observable","argsArgArrayOrObject","from","identity","mapOneOrManyArgs","popResultSelector","popScheduler","createObject","createOperatorSubscriber","executeSchedule","combineLatest","args","scheduler","resultSelector","observables","keys","length","result","combineLatestInit","values","pipe","valueTransform","subscriber","maybeSchedule","Array","active","remainingFirstValues","i","source","hasFirstValue","subscribe","value","next","slice","complete","execute","subscription"],"sources":["C:/Users/User/Projects/meanstack/node_modules/rxjs/dist/esm/internal/observable/combineLatest.js"],"sourcesContent":["import { Observable } from '../Observable';\nimport { argsArgArrayOrObject } from '../util/argsArgArrayOrObject';\nimport { from } from './from';\nimport { identity } from '../util/identity';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { popResultSelector, popScheduler } from '../util/args';\nimport { createObject } from '../util/createObject';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { executeSchedule } from '../util/executeSchedule';\nexport function combineLatest(...args) {\n    const scheduler = popScheduler(args);\n    const resultSelector = popResultSelector(args);\n    const { args: observables, keys } = argsArgArrayOrObject(args);\n    if (observables.length === 0) {\n        return from([], scheduler);\n    }\n    const result = new Observable(combineLatestInit(observables, scheduler, keys\n        ?\n            (values) => createObject(keys, values)\n        :\n            identity));\n    return resultSelector ? result.pipe(mapOneOrManyArgs(resultSelector)) : result;\n}\nexport function combineLatestInit(observables, scheduler, valueTransform = identity) {\n    return (subscriber) => {\n        maybeSchedule(scheduler, () => {\n            const { length } = observables;\n            const values = new Array(length);\n            let active = length;\n            let remainingFirstValues = length;\n            for (let i = 0; i < length; i++) {\n                maybeSchedule(scheduler, () => {\n                    const source = from(observables[i], scheduler);\n                    let hasFirstValue = false;\n                    source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n                        values[i] = value;\n                        if (!hasFirstValue) {\n                            hasFirstValue = true;\n                            remainingFirstValues--;\n                        }\n                        if (!remainingFirstValues) {\n                            subscriber.next(valueTransform(values.slice()));\n                        }\n                    }, () => {\n                        if (!--active) {\n                            subscriber.complete();\n                        }\n                    }));\n                }, subscriber);\n            }\n        }, subscriber);\n    };\n}\nfunction maybeSchedule(scheduler, execute, subscription) {\n    if (scheduler) {\n        executeSchedule(subscription, scheduler, execute);\n    }\n    else {\n        execute();\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}